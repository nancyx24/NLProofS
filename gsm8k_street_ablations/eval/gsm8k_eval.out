no change     /n/fs/nlp-abiramg/miniconda3/condabin/conda
no change     /n/fs/nlp-abiramg/miniconda3/bin/conda
no change     /n/fs/nlp-abiramg/miniconda3/bin/conda-env
no change     /n/fs/nlp-abiramg/miniconda3/bin/activate
no change     /n/fs/nlp-abiramg/miniconda3/bin/deactivate
no change     /n/fs/nlp-abiramg/miniconda3/etc/profile.d/conda.sh
no change     /n/fs/nlp-abiramg/miniconda3/etc/fish/conf.d/conda.fish
no change     /n/fs/nlp-abiramg/miniconda3/shell/condabin/Conda.psm1
no change     /n/fs/nlp-abiramg/miniconda3/shell/condabin/conda-hook.ps1
no change     /n/fs/nlp-abiramg/miniconda3/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /n/fs/nlp-abiramg/miniconda3/etc/profile.d/conda.csh
no change     /u/abiramg/.bashrc
No action taken.
2023-05-09 00:56:47.773088: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-05-09 00:57:43.117873: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory
2023-05-09 00:57:43.118715: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory
2023-05-09 00:57:43.118738: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
INFO:__main__:Scoring the following files: ['../NLProofS/prover/lightning_logs/gsm8k_prover_gsm8k_verifier_test/results_test.tsv']
INFO:__main__:***** Scoring predictions in ../NLProofS/prover/lightning_logs/gsm8k_prover_gsm8k_verifier_test/results_test.tsv *****
INFO:__main__:   Gold data from: /n/fs/nlp-abiramg//NLProofS/data/test_gsm8k.jsonl
INFO:__main__:   Full output in: ../ablation3/eval/gsm8k_prover_gsm8k_verifier/scores-test
INFO:tensorflow:Reading checkpoint ../bleurt-large-512/.
INFO:tensorflow:Reading checkpoint ../bleurt-large-512/.
INFO:tensorflow:Config file found, reading.
INFO:tensorflow:Config file found, reading.
INFO:tensorflow:Will load checkpoint bert_custom
INFO:tensorflow:Will load checkpoint bert_custom
INFO:tensorflow:Loads full paths and checks that files exists.
INFO:tensorflow:Loads full paths and checks that files exists.
INFO:tensorflow:... name:bert_custom
INFO:tensorflow:... name:bert_custom
INFO:tensorflow:... vocab_file:vocab.txt
INFO:tensorflow:... vocab_file:vocab.txt
INFO:tensorflow:... bert_config_file:bert_config.json
INFO:tensorflow:... bert_config_file:bert_config.json
INFO:tensorflow:... do_lower_case:True
INFO:tensorflow:... do_lower_case:True
INFO:tensorflow:... max_seq_length:512
INFO:tensorflow:... max_seq_length:512
INFO:tensorflow:Creating BLEURT scorer.
INFO:tensorflow:Creating BLEURT scorer.
INFO:tensorflow:Creating WordPiece tokenizer.
INFO:tensorflow:Creating WordPiece tokenizer.
INFO:tensorflow:WordPiece tokenizer instantiated.
INFO:tensorflow:WordPiece tokenizer instantiated.
INFO:tensorflow:Creating Eager Mode predictor.
INFO:tensorflow:Creating Eager Mode predictor.
INFO:tensorflow:Loading model.
INFO:tensorflow:Loading model.
2023-05-09 00:58:17.853606: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudnn.so.8'; dlerror: libcudnn.so.8: cannot open shared object file: No such file or directory
2023-05-09 00:58:17.853653: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1934] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
2023-05-09 00:58:17.855073: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
INFO:tensorflow:BLEURT initialized.
INFO:tensorflow:BLEURT initialized.
../NLProofS/prover/lightning_logs/gsm8k_prover_gsm8k_verifier_test/results_test.tsv
['../NLProofS/prover/lightning_logs/gsm8k_prover_gsm8k_verifier_test/results_test.tsv']
0it [00:00, ?it/s]1it [00:23, 23.82s/it]2it [00:37, 17.64s/it]3it [00:50, 15.65s/it]4it [01:10, 17.31s/it]5it [01:29, 18.18s/it]6it [01:56, 21.01s/it]7it [02:29, 24.94s/it]8it [02:55, 25.39s/it]9it [03:35, 29.76s/it]10it [04:01, 28.69s/it]11it [04:34, 29.99s/it]12it [05:07, 30.90s/it]13it [05:33, 29.51s/it]14it [06:13, 32.50s/it]15it [07:05, 38.54s/it]16it [07:38, 36.84s/it]17it [07:58, 31.70s/it]18it [08:31, 32.04s/it]19it [08:57, 30.30s/it]20it [09:36, 33.05s/it]21it [10:16, 34.97s/it]22it [10:42, 32.37s/it]23it [11:22, 34.48s/it]24it [11:35, 28.08s/it]25it [11:54, 25.58s/it]26it [12:27, 27.76s/it]27it [12:54, 27.32s/it]28it [13:40, 32.93s/it]29it [13:59, 28.95s/it]30it [14:25, 28.13s/it]


======================

pred:sent1 & sent2 -> int1: Janet eats 16 eggs per day and bakes 4 muffins per day for a total of 16*4 = 48 muffins; sent4 & sent5 & int1 -> int2: She sells 48 muffins for $2 each for a total of 48*2 = $18; int2 & sent5 & sent2 -> hypothesis
gold:sent1 & sent2 & sent3 & sent4 -> int1: Janet sells 16 - 3 - 4 = 9 duck eggs a day.; int1 & sent4 -> int2: She makes 9 * 2 = $18 every day at the farmer’s market.; int2 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent2 -> int1: Janet eats 16 eggs per day and bakes 4 muffins per day for a total of 16*4 = 48 muffins
step_parts:['sent1 & sent2 -> int1', ' Janet eats 16 eggs per day and bakes 4 muffins per day for a total of 16*4 = 48 muffins']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=janet eats 16 eggs per day and bakes 4 muffins per day for a total of 16*4 = 48 muffins
step: sent4 & sent5 & int1 -> int2: She sells 48 muffins for $2 each for a total of 48*2 = $18
step_parts:['sent4 & sent5 & int1 -> int2', ' She sells 48 muffins for $2 each for a total of 48*2 = $18']
lhs_ids:['sent4', 'sent5', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent5'}
	 rhs = int2, int_str=she sells 48 muffins for $2 each for a total of 48*2 = $18
step: int2 & sent5 & sent2 -> hypothesis
step_parts:['int2 & sent5 & sent2 -> hypothesis']
lhs_ids:['int2', 'sent5', 'sent2']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 18
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: Janet eats 16 eggs per day and bakes 4 muffins per day for a total of 16*4 = 48 muffins; sent4 & sent5 & int1 -> int2: She sells 48 muffins for $2 each for a total of 48*2 = $18; int2 & sent5 & sent2 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent4 & sent5 -> int2', 'int2 & sent2 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent5']}]
	relevant_sentences:{'sent1', 'sent2', 'sent4', 'sent5'}
	id_to_int:{'int1': 'janet eats 16 eggs per day and bakes 4 muffins per day for a total of 16*4 = 48 muffins', 'int2': 'she sells 48 muffins for $2 each for a total of 48*2 = $18', 'hypothesis': 'the answer is 18'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 & sent3 & sent4 -> int1: Janet sells 16 - 3 - 4 = 9 duck eggs a day.
step_parts:['sent1 & sent2 & sent3 & sent4 -> int1', ' Janet sells 16 - 3 - 4 = 9 duck eggs a day.']
lhs_ids:['sent1', 'sent2', 'sent3', 'sent4']	 rhs = int1	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = int1, int_str=janet sells 16 - 3 - 4 = 9 duck eggs a day
step: int1 & sent4 -> int2: She makes 9 * 2 = $18 every day at the farmer’s market.
step_parts:['int1 & sent4 -> int2', ' She makes 9 * 2 = $18 every day at the farmer’s market.']
lhs_ids:['int1', 'sent4']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = int2, int_str=she makes 9 * 2 = $18 every day at the farmer’s market
step: int2 & sent5 -> hypothesis
step_parts:['int2 & sent5 -> hypothesis']
lhs_ids:['int2', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 18
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 & sent3 & sent4 -> int1: Janet sells 16 - 3 - 4 = 9 duck eggs a day.; int1 & sent4 -> int2: She makes 9 * 2 = $18 every day at the farmer’s market.; int2 & sent5 -> hypothesis;
	sentences:['sent1 & sent2 & sent3 & sent4 -> int1', 'int1 & sent4 -> int2', 'int2 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2', 'sent3', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent5', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'janet sells 16 - 3 - 4 = 9 duck eggs a day', 'int2': 'she makes 9 * 2 = $18 every day at the farmer’s market', 'hypothesis': 'the answer is 18'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent4', 'sent5'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent4', 'sent5']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4', 'sent5']
		sentences:['hypothesis & sent2 & sent5 -> hypothesis', 'int1 & sent4 & sent5 -> hypothesis', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 & sent4 -> int2', 'int2 & sent5 -> hypothesis', 'sent1 & sent2 & sent3 & sent4 -> int1']
step:sent1 & sent2 & sent3 & sent4 -> int1: Janet sells 16 - 3 - 4 = 9 duck eggs a day.
QID:GSM8K_0_0c3da8c7d5
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Janet sells 16 - 3 - 4 = 9 duck eggs a day.', 'int2': 'She makes 9 * 2 = $18 every day at the farmer’s market.', 'hypothesis': 'The answer is 18'}
step:sent1 & sent2 & sent3 & sent4 -> int1: Janet sells 16 - 3 - 4 = 9 duck eggs a day.
QID:GSM8K_0_0c3da8c7d5
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Janet sells 16 - 3 - 4 = 9 duck eggs a day.', 'int2': 'She makes 9 * 2 = $18 every day at the farmer’s market.', 'hypothesis': 'The answer is 18'}
step:sent1 & sent2 & sent3 & sent4 -> int1: Janet sells 16 - 3 - 4 = 9 duck eggs a day.
QID:GSM8K_0_0c3da8c7d5
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Janet sells 16 - 3 - 4 = 9 duck eggs a day.', 'int2': 'She makes 9 * 2 = $18 every day at the farmer’s market.', 'hypothesis': 'The answer is 18'}
step:sent1 & sent2 & sent3 & sent4 -> int1: Janet sells 16 - 3 - 4 = 9 duck eggs a day.
QID:GSM8K_0_0c3da8c7d5
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Janet sells 16 - 3 - 4 = 9 duck eggs a day.', 'int2': 'She makes 9 * 2 = $18 every day at the farmer’s market.', 'hypothesis': 'The answer is 18'}
step:sent1 & sent2 & sent3 & sent4 -> int1: Janet sells 16 - 3 - 4 = 9 duck eggs a day.
step:int1 & sent4 -> int2: She makes 9 * 2 = $18 every day at the farmer’s market.
QID:GSM8K_0_0c3da8c7d5
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Janet sells 16 - 3 - 4 = 9 duck eggs a day.', 'int2': 'She makes 9 * 2 = $18 every day at the farmer’s market.', 'hypothesis': 'The answer is 18'}
step:int1 & sent4 -> int2: She makes 9 * 2 = $18 every day at the farmer’s market.
QID:GSM8K_0_0c3da8c7d5
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Janet sells 16 - 3 - 4 = 9 duck eggs a day.', 'int2': 'She makes 9 * 2 = $18 every day at the farmer’s market.', 'hypothesis': 'The answer is 18'}
step:int1 & sent4 -> int2: She makes 9 * 2 = $18 every day at the farmer’s market.
step:int2 & sent5 -> hypothesis
QID:GSM8K_0_0c3da8c7d5
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Janet sells 16 - 3 - 4 = 9 duck eggs a day.', 'int2': 'She makes 9 * 2 = $18 every day at the farmer’s market.', 'hypothesis': 'The answer is 18'}
step:int2 & sent5 -> hypothesis
QID:GSM8K_0_0c3da8c7d5
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Janet sells 16 - 3 - 4 = 9 duck eggs a day.', 'int2': 'She makes 9 * 2 = $18 every day at the farmer’s market.', 'hypothesis': 'The answer is 18'}
step:int2 & sent5 -> hypothesis
step:sent1 & sent2 -> int1: Janet eats 16 eggs per day and bakes 4 muffins per day for a total of 16*4 = 48 muffins
step:sent4 & sent5 & int1 -> int2: She sells 48 muffins for $2 each for a total of 48*2 = $18
step:int2 & sent5 & sent2 -> hypothesis



======================

pred:sent2 & sent1 -> int1: First find how many white fibers there are in the robe: 2 / 2 = 1; sent1 & int1 -> int2: Then find how many blue fibers there are in the robe: 2 + 1 = 3; int2 & sent3 -> hypothesis
gold:sent1 & sent2 -> int1: It takes 2/2=1 bolt of white fiber; int1 & sent3 -> int2: So the total amount of fabric is 2+1=3 bolts of fabric; int2 & sent3 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent1 -> int1: First find how many white fibers there are in the robe: 2 / 2 = 1
step_parts:['sent2 & sent1 -> int1', ' First find how many white fibers there are in the robe', ' 2 / 2 = 1']
lhs_ids:['sent2', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=
step: sent1 & int1 -> int2: Then find how many blue fibers there are in the robe: 2 + 1 = 3
step_parts:['sent1 & int1 -> int2', ' Then find how many blue fibers there are in the robe', ' 2 + 1 = 3']
lhs_ids:['sent1', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=
step: int2 & sent3 -> hypothesis
step_parts:['int2 & sent3 -> hypothesis']
lhs_ids:['int2', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 3
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent1 -> int1: First find how many white fibers there are in the robe: 2 / 2 = 1; sent1 & int1 -> int2: Then find how many blue fibers there are in the robe: 2 + 1 = 3; int2 & sent3 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent1 -> int2', 'int2 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': '', 'int2': '', 'hypothesis': 'the answer is 3'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: It takes 2/2=1 bolt of white fiber
step_parts:['sent1 & sent2 -> int1', ' It takes 2/2=1 bolt of white fiber']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=it takes 2/2=1 bolt of white fiber
step: int1 & sent3 -> int2: So the total amount of fabric is 2+1=3 bolts of fabric
step_parts:['int1 & sent3 -> int2', ' So the total amount of fabric is 2+1=3 bolts of fabric']
lhs_ids:['int1', 'sent3']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=so the total amount of fabric is 2+1=3 bolts of fabric
step: int2 & sent3 -> hypothesis
step_parts:['int2 & sent3 -> hypothesis']
lhs_ids:['int2', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 3
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: It takes 2/2=1 bolt of white fiber; int1 & sent3 -> int2: So the total amount of fabric is 2+1=3 bolts of fabric; int2 & sent3 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'int1 & sent3 -> int2', 'int2 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'it takes 2/2=1 bolt of white fiber', 'int2': 'so the total amount of fabric is 2+1=3 bolts of fabric', 'hypothesis': 'the answer is 3'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3'}
		sentences:['sent1', 'sent2', 'sent3']
		sentences_gold:['sent1', 'sent2', 'sent3']
		sentences:['int1 & sent1 -> int1', 'int1 & sent3 -> int2', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 & sent3 -> int2', 'int2 & sent3 -> hypothesis', 'sent1 & sent2 -> int1']
step:sent1 & sent2 -> int1: It takes 2/2=1 bolt of white fiber
QID:GSM8K_1_e1817d7abd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'It takes 2/2=1 bolt of white fiber', 'int2': 'So the total amount of fabric is 2+1=3 bolts of fabric', 'hypothesis': 'The answer is 3'}
step:sent1 & sent2 -> int1: It takes 2/2=1 bolt of white fiber
QID:GSM8K_1_e1817d7abd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'It takes 2/2=1 bolt of white fiber', 'int2': 'So the total amount of fabric is 2+1=3 bolts of fabric', 'hypothesis': 'The answer is 3'}
step:sent1 & sent2 -> int1: It takes 2/2=1 bolt of white fiber
step:int1 & sent3 -> int2: So the total amount of fabric is 2+1=3 bolts of fabric
QID:GSM8K_1_e1817d7abd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'It takes 2/2=1 bolt of white fiber', 'int2': 'So the total amount of fabric is 2+1=3 bolts of fabric', 'hypothesis': 'The answer is 3'}
step:int1 & sent3 -> int2: So the total amount of fabric is 2+1=3 bolts of fabric
QID:GSM8K_1_e1817d7abd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'It takes 2/2=1 bolt of white fiber', 'int2': 'So the total amount of fabric is 2+1=3 bolts of fabric', 'hypothesis': 'The answer is 3'}
step:int1 & sent3 -> int2: So the total amount of fabric is 2+1=3 bolts of fabric
step:int2 & sent3 -> hypothesis
QID:GSM8K_1_e1817d7abd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'It takes 2/2=1 bolt of white fiber', 'int2': 'So the total amount of fabric is 2+1=3 bolts of fabric', 'hypothesis': 'The answer is 3'}
step:int2 & sent3 -> hypothesis
QID:GSM8K_1_e1817d7abd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'It takes 2/2=1 bolt of white fiber', 'int2': 'So the total amount of fabric is 2+1=3 bolts of fabric', 'hypothesis': 'The answer is 3'}
step:int2 & sent3 -> hypothesis
step:sent2 & sent1 -> int1: First find how many white fibers there are in the robe: 2 / 2 = 1
step:sent1 & int1 -> int2: Then find how many blue fibers there are in the robe: 2 + 1 = 3
step:int2 & sent3 -> hypothesis



======================

pred:sent2 & sent4 -> int1: First find how much the house value increased by multiplying the price by 150%: $80,000 * 150% = $100,000; int1 & sent3 -> int2: Then subtract the cost of repairs from the purchase price to find the profit: $100,000 - $50,000 = $75,000; sent5 & int2 -> hypothesis
gold:sent2 & sent3 -> int1: The cost of the house and repairs came out to 80,000+50,000=$130,000; sent2 & sent4 -> int2: He increased the value of the house by 80,000*1.5=120,000; int2 -> int3: So the new value of the house is 120,000+80,000=$200,000; int1 & int2 & int3 -> int4: So he made a profit of 200,000-130,000=$70,000; int4 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent4 -> int1: First find how much the house value increased by multiplying the price by 150%: $80,000 * 150% = $100,000
step_parts:['sent2 & sent4 -> int1', ' First find how much the house value increased by multiplying the price by 150%', ' $80,000 * 150% = $100,000']
lhs_ids:['sent2', 'sent4']	 rhs = int1	 all_ancestors={'sent2', 'sent4'}
	 rhs = int1, int_str=
step: int1 & sent3 -> int2: Then subtract the cost of repairs from the purchase price to find the profit: $100,000 - $50,000 = $75,000
step_parts:['int1 & sent3 -> int2', ' Then subtract the cost of repairs from the purchase price to find the profit', ' $100,000 - $50,000 = $75,000']
lhs_ids:['int1', 'sent3']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int2, int_str=
step: sent5 & int2 -> hypothesis
step_parts:['sent5 & int2 -> hypothesis']
lhs_ids:['sent5', 'int2']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 70000
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent4 -> int1: First find how much the house value increased by multiplying the price by 150%: $80,000 * 150% = $100,000; int1 & sent3 -> int2: Then subtract the cost of repairs from the purchase price to find the profit: $100,000 - $50,000 = $75,000; sent5 & int2 -> hypothesis
	sentences:['sent2 & sent4 -> int1', 'int1 & sent3 -> int2', 'int2 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent4']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': '', 'int2': '', 'hypothesis': 'the answer is 70000'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent3 -> int1: The cost of the house and repairs came out to 80,000+50,000=$130,000
step_parts:['sent2 & sent3 -> int1', ' The cost of the house and repairs came out to 80,000+50,000=$130,000']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=the cost of the house and repairs came out to 80,000+50,000=$130,000
step: sent2 & sent4 -> int2: He increased the value of the house by 80,000*1.5=120,000
step_parts:['sent2 & sent4 -> int2', ' He increased the value of the house by 80,000*1.5=120,000']
lhs_ids:['sent2', 'sent4']	 rhs = int2	 all_ancestors={'sent2', 'sent4'}
	 rhs = int2, int_str=he increased the value of the house by 80,000*15=120,000
step: int2 -> int3: So the new value of the house is 120,000+80,000=$200,000
step_parts:['int2 -> int3', ' So the new value of the house is 120,000+80,000=$200,000']
lhs_ids:['int2']	 rhs = int3	 all_ancestors={'sent2', 'sent4'}
	 rhs = int3, int_str=so the new value of the house is 120,000+80,000=$200,000
step: int1 & int2 & int3 -> int4: So he made a profit of 200,000-130,000=$70,000
step_parts:['int1 & int2 & int3 -> int4', ' So he made a profit of 200,000-130,000=$70,000']
lhs_ids:['int1', 'int2', 'int3']	 rhs = int4	 all_ancestors={'sent2', 'sent4', 'sent3'}
	 rhs = int4, int_str=so he made a profit of 200,000-130,000=$70,000
step: int4 & sent5 -> hypothesis
step_parts:['int4 & sent5 -> hypothesis']
lhs_ids:['int4', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 70000
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: The cost of the house and repairs came out to 80,000+50,000=$130,000; sent2 & sent4 -> int2: He increased the value of the house by 80,000*1.5=120,000; int2 -> int3: So the new value of the house is 120,000+80,000=$200,000; int1 & int2 & int3 -> int4: So he made a profit of 200,000-130,000=$70,000; int4 & sent5 -> hypothesis;
	sentences:['sent2 & sent3 -> int1', 'sent2 & sent4 -> int2', 'int2 -> int3', 'int1 & int2 & int3 -> int4', 'int4 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2'], 'rhs': 'int3'}, {'lhs': ['int1', 'int2', 'int3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent4']}, {'int': 'int3', 'ancestors': ['sent2', 'sent4']}, {'int': 'int4', 'ancestors': ['sent2', 'sent4', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'the cost of the house and repairs came out to 80,000+50,000=$130,000', 'int2': 'he increased the value of the house by 80,000*15=120,000', 'int3': 'so the new value of the house is 120,000+80,000=$200,000', 'int4': 'so he made a profit of 200,000-130,000=$70,000', 'hypothesis': 'the answer is 70000'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int4', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int4', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4', 'sent5'}
relevant_sentences_gold:{'sent2', 'sent3', 'sent4', 'sent5'}
		sentences:['sent2', 'sent3', 'sent4', 'sent5']
		sentences_gold:['sent2', 'sent3', 'sent4', 'sent5']
		sentences:['int2 & sent3 -> int4', 'int4 & sent5 -> hypothesis', 'sent2 & sent4 -> int2']
		sentences_gold:['int1 & int2 & int3 -> int4', 'int2 -> int3', 'int4 & sent5 -> hypothesis', 'sent2 & sent3 -> int1', 'sent2 & sent4 -> int2']
step:sent2 & sent3 -> int1: The cost of the house and repairs came out to 80,000+50,000=$130,000
QID:GSM8K_2_ecffc3947e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The cost of the house and repairs came out to 80,000+50,000=$130,000', 'int2': 'He increased the value of the house by 80,000*1.5=120,000', 'int3': 'So the new value of the house is 120,000+80,000=$200,000', 'int4': 'So he made a profit of 200,000-130,000=$70,000', 'hypothesis': 'The answer is 70000'}
step:sent2 & sent3 -> int1: The cost of the house and repairs came out to 80,000+50,000=$130,000
QID:GSM8K_2_ecffc3947e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The cost of the house and repairs came out to 80,000+50,000=$130,000', 'int2': 'He increased the value of the house by 80,000*1.5=120,000', 'int3': 'So the new value of the house is 120,000+80,000=$200,000', 'int4': 'So he made a profit of 200,000-130,000=$70,000', 'hypothesis': 'The answer is 70000'}
step:sent2 & sent3 -> int1: The cost of the house and repairs came out to 80,000+50,000=$130,000
step:sent2 & sent4 -> int2: He increased the value of the house by 80,000*1.5=120,000
QID:GSM8K_2_ecffc3947e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The cost of the house and repairs came out to 80,000+50,000=$130,000', 'int2': 'He increased the value of the house by 80,000*1.5=120,000', 'int3': 'So the new value of the house is 120,000+80,000=$200,000', 'int4': 'So he made a profit of 200,000-130,000=$70,000', 'hypothesis': 'The answer is 70000'}
step:sent2 & sent4 -> int2: He increased the value of the house by 80,000*1.5=120,000
QID:GSM8K_2_ecffc3947e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The cost of the house and repairs came out to 80,000+50,000=$130,000', 'int2': 'He increased the value of the house by 80,000*1.5=120,000', 'int3': 'So the new value of the house is 120,000+80,000=$200,000', 'int4': 'So he made a profit of 200,000-130,000=$70,000', 'hypothesis': 'The answer is 70000'}
step:sent2 & sent4 -> int2: He increased the value of the house by 80,000*1.5=120,000
step:int2 -> int3: So the new value of the house is 120,000+80,000=$200,000
QID:GSM8K_2_ecffc3947e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The cost of the house and repairs came out to 80,000+50,000=$130,000', 'int2': 'He increased the value of the house by 80,000*1.5=120,000', 'int3': 'So the new value of the house is 120,000+80,000=$200,000', 'int4': 'So he made a profit of 200,000-130,000=$70,000', 'hypothesis': 'The answer is 70000'}
step:int2 -> int3: So the new value of the house is 120,000+80,000=$200,000
step:int1 & int2 & int3 -> int4: So he made a profit of 200,000-130,000=$70,000
QID:GSM8K_2_ecffc3947e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The cost of the house and repairs came out to 80,000+50,000=$130,000', 'int2': 'He increased the value of the house by 80,000*1.5=120,000', 'int3': 'So the new value of the house is 120,000+80,000=$200,000', 'int4': 'So he made a profit of 200,000-130,000=$70,000', 'hypothesis': 'The answer is 70000'}
step:int1 & int2 & int3 -> int4: So he made a profit of 200,000-130,000=$70,000
QID:GSM8K_2_ecffc3947e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The cost of the house and repairs came out to 80,000+50,000=$130,000', 'int2': 'He increased the value of the house by 80,000*1.5=120,000', 'int3': 'So the new value of the house is 120,000+80,000=$200,000', 'int4': 'So he made a profit of 200,000-130,000=$70,000', 'hypothesis': 'The answer is 70000'}
step:int1 & int2 & int3 -> int4: So he made a profit of 200,000-130,000=$70,000
QID:GSM8K_2_ecffc3947e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The cost of the house and repairs came out to 80,000+50,000=$130,000', 'int2': 'He increased the value of the house by 80,000*1.5=120,000', 'int3': 'So the new value of the house is 120,000+80,000=$200,000', 'int4': 'So he made a profit of 200,000-130,000=$70,000', 'hypothesis': 'The answer is 70000'}
step:int1 & int2 & int3 -> int4: So he made a profit of 200,000-130,000=$70,000
step:int4 & sent5 -> hypothesis
QID:GSM8K_2_ecffc3947e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The cost of the house and repairs came out to 80,000+50,000=$130,000', 'int2': 'He increased the value of the house by 80,000*1.5=120,000', 'int3': 'So the new value of the house is 120,000+80,000=$200,000', 'int4': 'So he made a profit of 200,000-130,000=$70,000', 'hypothesis': 'The answer is 70000'}
step:int4 & sent5 -> hypothesis
QID:GSM8K_2_ecffc3947e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The cost of the house and repairs came out to 80,000+50,000=$130,000', 'int2': 'He increased the value of the house by 80,000*1.5=120,000', 'int3': 'So the new value of the house is 120,000+80,000=$200,000', 'int4': 'So he made a profit of 200,000-130,000=$70,000', 'hypothesis': 'The answer is 70000'}
step:int4 & sent5 -> hypothesis
step:sent2 & sent4 -> int1: First find how much the house value increased by multiplying the price by 150%: $80,000 * 150% = $100,000
step:int1 & sent3 -> int2: Then subtract the cost of repairs from the purchase price to find the profit: $100,000 - $50,000 = $75,000
step:sent5 & int2 -> hypothesis



======================

pred:sent1 & sent2 -> int1: He runs 3*60=240 meters in a week; sent3 & int1 -> int2: So he runs 240*7=540 meters a week; int2 & sent3 -> hypothesis
gold:sent1 -> int1: He sprints 3*3=9 times; int1 & sent2 -> int2: So he runs 9*60=540 meters; int2 & sent3 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent2 -> int1: He runs 3*60=240 meters in a week
step_parts:['sent1 & sent2 -> int1', ' He runs 3*60=240 meters in a week']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=he runs 3*60=240 meters in a week
step: sent3 & int1 -> int2: So he runs 240*7=540 meters a week
step_parts:['sent3 & int1 -> int2', ' So he runs 240*7=540 meters a week']
lhs_ids:['sent3', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int2, int_str=so he runs 240*7=540 meters a week
step: int2 & sent3 -> hypothesis
step_parts:['int2 & sent3 -> hypothesis']
lhs_ids:['int2', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 540
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: He runs 3*60=240 meters in a week; sent3 & int1 -> int2: So he runs 240*7=540 meters a week; int2 & sent3 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent3 -> int2', 'int2 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'he runs 3*60=240 meters in a week', 'int2': 'so he runs 240*7=540 meters a week', 'hypothesis': 'the answer is 540'}



||||||||||||||||||||||

Reading gold proof
step:sent1 -> int1: He sprints 3*3=9 times
step_parts:['sent1 -> int1', ' He sprints 3*3=9 times']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=he sprints 3*3=9 times
step: int1 & sent2 -> int2: So he runs 9*60=540 meters
step_parts:['int1 & sent2 -> int2', ' So he runs 9*60=540 meters']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=so he runs 9*60=540 meters
step: int2 & sent3 -> hypothesis
step_parts:['int2 & sent3 -> hypothesis']
lhs_ids:['int2', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 540
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: He sprints 3*3=9 times; int1 & sent2 -> int2: So he runs 9*60=540 meters; int2 & sent3 -> hypothesis;
	sentences:['sent1 -> int1', 'int1 & sent2 -> int2', 'int2 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'he sprints 3*3=9 times', 'int2': 'so he runs 9*60=540 meters', 'hypothesis': 'the answer is 540'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3'}
		sentences:['sent1', 'sent2', 'sent3']
		sentences_gold:['sent1', 'sent2', 'sent3']
		sentences:['hypothesis & sent3 -> hypothesis', 'int2 & sent3 -> hypothesis', 'sent1 & sent2 -> int2']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & sent3 -> hypothesis', 'sent1 -> int1']
step:sent1 -> int1: He sprints 3*3=9 times
QID:GSM8K_3_ac5e5c9d28
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He sprints 3*3=9 times', 'int2': 'So he runs 9*60=540 meters', 'hypothesis': 'The answer is 540'}
step:sent1 -> int1: He sprints 3*3=9 times
step:int1 & sent2 -> int2: So he runs 9*60=540 meters
QID:GSM8K_3_ac5e5c9d28
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He sprints 3*3=9 times', 'int2': 'So he runs 9*60=540 meters', 'hypothesis': 'The answer is 540'}
step:int1 & sent2 -> int2: So he runs 9*60=540 meters
QID:GSM8K_3_ac5e5c9d28
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He sprints 3*3=9 times', 'int2': 'So he runs 9*60=540 meters', 'hypothesis': 'The answer is 540'}
step:int1 & sent2 -> int2: So he runs 9*60=540 meters
step:int2 & sent3 -> hypothesis
QID:GSM8K_3_ac5e5c9d28
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He sprints 3*3=9 times', 'int2': 'So he runs 9*60=540 meters', 'hypothesis': 'The answer is 540'}
step:int2 & sent3 -> hypothesis
QID:GSM8K_3_ac5e5c9d28
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He sprints 3*3=9 times', 'int2': 'So he runs 9*60=540 meters', 'hypothesis': 'The answer is 540'}
step:int2 & sent3 -> hypothesis
step:sent1 & sent2 -> int1: He runs 3*60=240 meters in a week
step:sent3 & int1 -> int2: So he runs 240*7=540 meters a week
step:int2 & sent3 -> hypothesis



======================

pred:sent5 & sent4 -> int1: In the afternoon, she gives her flock 25 + 15 = 35 cups of feed.; sent1 & sent6 & int1 -> int2: Since the size of Wendi's flock is 20 chickens, she gives her flock 35 / 3 = 20 cups of feed in the final meal of the day.; int2 & sent6 -> hypothesis
gold:sent1 & sent6 -> int1: If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.; int1 & sent4 & sent5 & sent6 -> int2: If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.; int2 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent5 & sent4 -> int1: In the afternoon, she gives her flock 25 + 15 = 35 cups of feed.
step_parts:['sent5 & sent4 -> int1', ' In the afternoon, she gives her flock 25 + 15 = 35 cups of feed.']
lhs_ids:['sent5', 'sent4']	 rhs = int1	 all_ancestors={'sent4', 'sent5'}
	 rhs = int1, int_str=in the afternoon, she gives her flock 25 + 15 = 35 cups of feed
step: sent1 & sent6 & int1 -> int2: Since the size of Wendi's flock is 20 chickens, she gives her flock 35 / 3 = 20 cups of feed in the final meal of the day.
step_parts:['sent1 & sent6 & int1 -> int2', " Since the size of Wendi's flock is 20 chickens, she gives her flock 35 / 3 = 20 cups of feed in the final meal of the day."]
lhs_ids:['sent1', 'sent6', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent4', 'sent5', 'sent6'}
	 rhs = int2, int_str=since the size of wendi's flock is 20 chickens, she gives her flock 35 / 3 = 20 cups of feed in the final meal of the day
step: int2 & sent6 -> hypothesis
step_parts:['int2 & sent6 -> hypothesis']
lhs_ids:['int2', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent5', 'sent6'}
	 rhs = hypothesis, int_str=the answer is 20
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent5 & sent4 -> int1: In the afternoon, she gives her flock 25 + 15 = 35 cups of feed.; sent1 & sent6 & int1 -> int2: Since the size of Wendi's flock is 20 chickens, she gives her flock 35 / 3 = 20 cups of feed in the final meal of the day.; int2 & sent6 -> hypothesis
	sentences:['sent4 & sent5 -> int1', 'int1 & sent1 & sent6 -> int2', 'int2 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent4', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1', 'sent6'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent4', 'sent5']}, {'int': 'int2', 'ancestors': ['sent1', 'sent4', 'sent5', 'sent6']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent5', 'sent6']}]
	relevant_sentences:{'sent1', 'sent4', 'sent6', 'sent5'}
	id_to_int:{'int1': 'in the afternoon, she gives her flock 25 + 15 = 35 cups of feed', 'int2': "since the size of wendi's flock is 20 chickens, she gives her flock 35 / 3 = 20 cups of feed in the final meal of the day", 'hypothesis': 'the answer is 20'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent6 -> int1: If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.
step_parts:['sent1 & sent6 -> int1', ' If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.']
lhs_ids:['sent1', 'sent6']	 rhs = int1	 all_ancestors={'sent1', 'sent6'}
	 rhs = int1, int_str=if each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day
step: int1 & sent4 & sent5 & sent6 -> int2: If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.
step_parts:['int1 & sent4 & sent5 & sent6 -> int2', ' If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.']
lhs_ids:['int1', 'sent4', 'sent5', 'sent6']	 rhs = int2	 all_ancestors={'sent1', 'sent4', 'sent5', 'sent6'}
	 rhs = int2, int_str=if she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed
step: int2 & sent6 -> hypothesis
step_parts:['int2 & sent6 -> hypothesis']
lhs_ids:['int2', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent5', 'sent6'}
	 rhs = hypothesis, int_str=the answer is 20
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent6 -> int1: If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.; int1 & sent4 & sent5 & sent6 -> int2: If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.; int2 & sent6 -> hypothesis;
	sentences:['sent1 & sent6 -> int1', 'int1 & sent4 & sent5 & sent6 -> int2', 'int2 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent6'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4', 'sent5', 'sent6'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent6']}, {'int': 'int2', 'ancestors': ['sent1', 'sent4', 'sent5', 'sent6']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent5', 'sent6']}]
	relevant_sentences:{'sent1', 'sent4', 'sent5', 'sent6'}
	id_to_int:{'int1': 'if each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day', 'int2': 'if she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed', 'hypothesis': 'the answer is 20'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent1', 'sent4', 'sent6', 'sent5'}
relevant_sentences_gold:{'sent1', 'sent4', 'sent5', 'sent6'}
		sentences:['sent1', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent1', 'sent4', 'sent5', 'sent6']
		sentences:['int2 & sent1 & sent6 -> int2', 'int2 & sent6 -> int2', 'sent4 & sent5 -> int2']
		sentences_gold:['int1 & sent4 & sent5 & sent6 -> int2', 'int2 & sent6 -> hypothesis', 'sent1 & sent6 -> int1']
step:sent1 & sent6 -> int1: If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.
QID:GSM8K_4_7bec3d29ea
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.', 'int2': 'If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.', 'hypothesis': 'The answer is 20'}
step:sent1 & sent6 -> int1: If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.
QID:GSM8K_4_7bec3d29ea
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.', 'int2': 'If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.', 'hypothesis': 'The answer is 20'}
step:sent1 & sent6 -> int1: If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.
step:int1 & sent4 & sent5 & sent6 -> int2: If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.
QID:GSM8K_4_7bec3d29ea
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.', 'int2': 'If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.', 'hypothesis': 'The answer is 20'}
step:int1 & sent4 & sent5 & sent6 -> int2: If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.
QID:GSM8K_4_7bec3d29ea
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.', 'int2': 'If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.', 'hypothesis': 'The answer is 20'}
step:int1 & sent4 & sent5 & sent6 -> int2: If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.
QID:GSM8K_4_7bec3d29ea
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.', 'int2': 'If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.', 'hypothesis': 'The answer is 20'}
step:int1 & sent4 & sent5 & sent6 -> int2: If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.
QID:GSM8K_4_7bec3d29ea
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.', 'int2': 'If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.', 'hypothesis': 'The answer is 20'}
step:int1 & sent4 & sent5 & sent6 -> int2: If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.
step:int2 & sent6 -> hypothesis
QID:GSM8K_4_7bec3d29ea
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.', 'int2': 'If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.', 'hypothesis': 'The answer is 20'}
step:int2 & sent6 -> hypothesis
QID:GSM8K_4_7bec3d29ea
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If each chicken eats 3 cups of feed per day, then for 20 chickens they would need 3*20=60 cups of feed per day.', 'int2': 'If she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed.', 'hypothesis': 'The answer is 20'}
step:int2 & sent6 -> hypothesis
step:sent5 & sent4 -> int1: In the afternoon, she gives her flock 25 + 15 = 35 cups of feed.
step:sent1 & sent6 & int1 -> int2: Since the size of Wendi's flock is 20 chickens, she gives her flock 35 / 3 = 20 cups of feed in the final meal of the day.
step:int2 & sent6 -> hypothesis



======================

pred:sent2 & sent3 -> int1: The first pair of glasses costs $5 x 16 = $40.; sent2 & sent3 -> int2: The second pair of glasses costs $5 x 60/100 = $2.; int2 & int1 -> int3: So, Kylar needs to pay $40 + $2 = $64 for the glasses.; sent4 & int3 -> hypothesis
gold:sent1 & sent2 -> int1: The discount price of one glass is 60/100 * 5 = $3.; sent2 & sent3 -> int2: If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.; int1 & int2 -> int3: So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.; int2 & sent2 -> int4: And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.; int3 & int4 -> int5: So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.; int5 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent3 -> int1: The first pair of glasses costs $5 x 16 = $40.
step_parts:['sent2 & sent3 -> int1', ' The first pair of glasses costs $5 x 16 = $40.']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=the first pair of glasses costs $5 x 16 = $40
step: sent2 & sent3 -> int2: The second pair of glasses costs $5 x 60/100 = $2.
step_parts:['sent2 & sent3 -> int2', ' The second pair of glasses costs $5 x 60/100 = $2.']
lhs_ids:['sent2', 'sent3']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=the second pair of glasses costs $5 x 60/100 = $2
step: int2 & int1 -> int3: So, Kylar needs to pay $40 + $2 = $64 for the glasses.
step_parts:['int2 & int1 -> int3', ' So, Kylar needs to pay $40 + $2 = $64 for the glasses.']
lhs_ids:['int2', 'int1']	 rhs = int3	 all_ancestors={'sent2', 'sent3'}
	 rhs = int3, int_str=so, kylar needs to pay $40 + $2 = $64 for the glasses
step: sent4 & int3 -> hypothesis
step_parts:['sent4 & int3 -> hypothesis']
lhs_ids:['sent4', 'int3']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent4', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 64
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: The first pair of glasses costs $5 x 16 = $40.; sent2 & sent3 -> int2: The second pair of glasses costs $5 x 60/100 = $2.; int2 & int1 -> int3: So, Kylar needs to pay $40 + $2 = $64 for the glasses.; sent4 & int3 -> hypothesis
	sentences:['sent2 & sent3 -> int1', 'sent2 & sent3 -> int2', 'int1 & int2 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent4', 'sent3']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'the first pair of glasses costs $5 x 16 = $40', 'int2': 'the second pair of glasses costs $5 x 60/100 = $2', 'int3': 'so, kylar needs to pay $40 + $2 = $64 for the glasses', 'hypothesis': 'the answer is 64'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: The discount price of one glass is 60/100 * 5 = $3.
step_parts:['sent1 & sent2 -> int1', ' The discount price of one glass is 60/100 * 5 = $3.']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=the discount price of one glass is 60/100 * 5 = $3
step: sent2 & sent3 -> int2: If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.
step_parts:['sent2 & sent3 -> int2', ' If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.']
lhs_ids:['sent2', 'sent3']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=if every second glass is cheaper, that means kylar is going to buy 16 / 2 = 8 cheaper glasses
step: int1 & int2 -> int3: So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.
step_parts:['int1 & int2 -> int3', ' So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.']
lhs_ids:['int1', 'int2']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int3, int_str=so for the cheaper glasses, kylar is going to pay 8 * 3 = $24
step: int2 & sent2 -> int4: And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.
step_parts:['int2 & sent2 -> int4', ' And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.']
lhs_ids:['int2', 'sent2']	 rhs = int4	 all_ancestors={'sent2', 'sent3'}
	 rhs = int4, int_str=and for the regular-priced glasses, kylar will pay 8 * 5 = $40
step: int3 & int4 -> int5: So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.
step_parts:['int3 & int4 -> int5', ' So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.']
lhs_ids:['int3', 'int4']	 rhs = int5	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int5, int_str=so in total kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy
step: int5 & sent4 -> hypothesis
step_parts:['int5 & sent4 -> hypothesis']
lhs_ids:['int5', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 64
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: The discount price of one glass is 60/100 * 5 = $3.; sent2 & sent3 -> int2: If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.; int1 & int2 -> int3: So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.; int2 & sent2 -> int4: And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.; int3 & int4 -> int5: So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.; int5 & sent4 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'sent2 & sent3 -> int2', 'int1 & int2 -> int3', 'int2 & sent2 -> int4', 'int3 & int4 -> int5', 'int5 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2'], 'rhs': 'int3'}, {'lhs': ['int2', 'sent2'], 'rhs': 'int4'}, {'lhs': ['int3', 'int4'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int4', 'ancestors': ['sent2', 'sent3']}, {'int': 'int5', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'the discount price of one glass is 60/100 * 5 = $3', 'int2': 'if every second glass is cheaper, that means kylar is going to buy 16 / 2 = 8 cheaper glasses', 'int3': 'so for the cheaper glasses, kylar is going to pay 8 * 3 = $24', 'int4': 'and for the regular-priced glasses, kylar will pay 8 * 5 = $40', 'int5': 'so in total kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy', 'hypothesis': 'the answer is 64'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'int3': 'int2', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'int3': 'int2', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['int2 & int2 -> int2', 'int2 & sent4 -> hypothesis', 'sent2 & sent3 -> int2', 'sent2 & sent3 -> int2']
		sentences_gold:['int1 & int2 -> int3', 'int2 & sent2 -> int4', 'int3 & int4 -> int5', 'int5 & sent4 -> hypothesis', 'sent1 & sent2 -> int1', 'sent2 & sent3 -> int2']
step:sent1 & sent2 -> int1: The discount price of one glass is 60/100 * 5 = $3.
QID:GSM8K_5_6f13335704
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The discount price of one glass is 60/100 * 5 = $3.', 'int2': 'If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.', 'int3': 'So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.', 'int4': 'And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.', 'int5': 'So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.', 'hypothesis': 'The answer is 64'}
step:sent1 & sent2 -> int1: The discount price of one glass is 60/100 * 5 = $3.
QID:GSM8K_5_6f13335704
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The discount price of one glass is 60/100 * 5 = $3.', 'int2': 'If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.', 'int3': 'So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.', 'int4': 'And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.', 'int5': 'So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.', 'hypothesis': 'The answer is 64'}
step:sent1 & sent2 -> int1: The discount price of one glass is 60/100 * 5 = $3.
step:sent2 & sent3 -> int2: If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.
QID:GSM8K_5_6f13335704
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The discount price of one glass is 60/100 * 5 = $3.', 'int2': 'If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.', 'int3': 'So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.', 'int4': 'And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.', 'int5': 'So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.', 'hypothesis': 'The answer is 64'}
step:sent2 & sent3 -> int2: If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.
QID:GSM8K_5_6f13335704
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The discount price of one glass is 60/100 * 5 = $3.', 'int2': 'If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.', 'int3': 'So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.', 'int4': 'And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.', 'int5': 'So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.', 'hypothesis': 'The answer is 64'}
step:sent2 & sent3 -> int2: If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.
step:int1 & int2 -> int3: So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.
QID:GSM8K_5_6f13335704
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The discount price of one glass is 60/100 * 5 = $3.', 'int2': 'If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.', 'int3': 'So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.', 'int4': 'And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.', 'int5': 'So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.', 'hypothesis': 'The answer is 64'}
step:int1 & int2 -> int3: So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.
QID:GSM8K_5_6f13335704
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The discount price of one glass is 60/100 * 5 = $3.', 'int2': 'If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.', 'int3': 'So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.', 'int4': 'And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.', 'int5': 'So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.', 'hypothesis': 'The answer is 64'}
step:int1 & int2 -> int3: So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.
step:int2 & sent2 -> int4: And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.
QID:GSM8K_5_6f13335704
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The discount price of one glass is 60/100 * 5 = $3.', 'int2': 'If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.', 'int3': 'So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.', 'int4': 'And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.', 'int5': 'So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.', 'hypothesis': 'The answer is 64'}
step:int2 & sent2 -> int4: And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.
QID:GSM8K_5_6f13335704
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The discount price of one glass is 60/100 * 5 = $3.', 'int2': 'If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.', 'int3': 'So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.', 'int4': 'And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.', 'int5': 'So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.', 'hypothesis': 'The answer is 64'}
step:int2 & sent2 -> int4: And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.
step:int3 & int4 -> int5: So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.
QID:GSM8K_5_6f13335704
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The discount price of one glass is 60/100 * 5 = $3.', 'int2': 'If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.', 'int3': 'So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.', 'int4': 'And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.', 'int5': 'So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.', 'hypothesis': 'The answer is 64'}
step:int3 & int4 -> int5: So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.
QID:GSM8K_5_6f13335704
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The discount price of one glass is 60/100 * 5 = $3.', 'int2': 'If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.', 'int3': 'So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.', 'int4': 'And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.', 'int5': 'So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.', 'hypothesis': 'The answer is 64'}
step:int3 & int4 -> int5: So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.
step:int5 & sent4 -> hypothesis
QID:GSM8K_5_6f13335704
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The discount price of one glass is 60/100 * 5 = $3.', 'int2': 'If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.', 'int3': 'So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.', 'int4': 'And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.', 'int5': 'So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.', 'hypothesis': 'The answer is 64'}
step:int5 & sent4 -> hypothesis
QID:GSM8K_5_6f13335704
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The discount price of one glass is 60/100 * 5 = $3.', 'int2': 'If every second glass is cheaper, that means Kylar is going to buy 16 / 2 = 8 cheaper glasses.', 'int3': 'So for the cheaper glasses, Kylar is going to pay 8 * 3 = $24.', 'int4': 'And for the regular-priced glasses, Kylar will pay 8 * 5 = $40.', 'int5': 'So in total Kylar needs to pay 24 + 40 = $64 for the glasses he wants to buy.', 'hypothesis': 'The answer is 64'}
step:int5 & sent4 -> hypothesis
step:sent2 & sent3 -> int1: The first pair of glasses costs $5 x 16 = $40.
step:sent2 & sent3 -> int2: The second pair of glasses costs $5 x 60/100 = $2.
step:int2 & int1 -> int3: So, Kylar needs to pay $40 + $2 = $64 for the glasses.
step:sent4 & int3 -> hypothesis



======================

pred:sent2 & sent4 -> int1: Charleston has 4 * 20 = 80 sheep.; sent1 & int1 -> int2: Toulouse has 2 * 80 = 160 sheep.; sent1 & int1 -> int3: Toulouse has 2 * 80 = 120 sheep.; int3 & sent4 & sent3 -> int4: So, Charleston, Charleston, and Seattle have a total of 120 + 80 = 260 sheep.; int4 & int2 -> hypothesis
gold:sent2 & sent4 -> int1: If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep; int1 & sent1 -> int2: Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep; int1 & int2 & sent4 -> int3: Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep; int3 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent4 -> int1: Charleston has 4 * 20 = 80 sheep.
step_parts:['sent2 & sent4 -> int1', ' Charleston has 4 * 20 = 80 sheep.']
lhs_ids:['sent2', 'sent4']	 rhs = int1	 all_ancestors={'sent2', 'sent4'}
	 rhs = int1, int_str=charleston has 4 * 20 = 80 sheep
step: sent1 & int1 -> int2: Toulouse has 2 * 80 = 160 sheep.
step_parts:['sent1 & int1 -> int2', ' Toulouse has 2 * 80 = 160 sheep.']
lhs_ids:['sent1', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent4'}
	 rhs = int2, int_str=toulouse has 2 * 80 = 160 sheep
step: sent1 & int1 -> int3: Toulouse has 2 * 80 = 120 sheep.
step_parts:['sent1 & int1 -> int3', ' Toulouse has 2 * 80 = 120 sheep.']
lhs_ids:['sent1', 'int1']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent4'}
	 rhs = int3, int_str=toulouse has 2 * 80 = 120 sheep
step: int3 & sent4 & sent3 -> int4: So, Charleston, Charleston, and Seattle have a total of 120 + 80 = 260 sheep.
step_parts:['int3 & sent4 & sent3 -> int4', ' So, Charleston, Charleston, and Seattle have a total of 120 + 80 = 260 sheep.']
lhs_ids:['int3', 'sent4', 'sent3']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = int4, int_str=so, charleston, charleston, and seattle have a total of 120 + 80 = 260 sheep
step: int4 & int2 -> hypothesis
step_parts:['int4 & int2 -> hypothesis']
lhs_ids:['int4', 'int2']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 260
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent4 -> int1: Charleston has 4 * 20 = 80 sheep.; sent1 & int1 -> int2: Toulouse has 2 * 80 = 160 sheep.; sent1 & int1 -> int3: Toulouse has 2 * 80 = 120 sheep.; int3 & sent4 & sent3 -> int4: So, Charleston, Charleston, and Seattle have a total of 120 + 80 = 260 sheep.; int4 & int2 -> hypothesis
	sentences:['sent2 & sent4 -> int1', 'int1 & sent1 -> int2', 'int1 & sent1 -> int3', 'int3 & sent3 & sent4 -> int4', 'int2 & int4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3', 'sent4'], 'rhs': 'int4'}, {'lhs': ['int2', 'int4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent4']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent4']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent4']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'charleston has 4 * 20 = 80 sheep', 'int2': 'toulouse has 2 * 80 = 160 sheep', 'int3': 'toulouse has 2 * 80 = 120 sheep', 'int4': 'so, charleston, charleston, and seattle have a total of 120 + 80 = 260 sheep', 'hypothesis': 'the answer is 260'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent4 -> int1: If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep
step_parts:['sent2 & sent4 -> int1', ' If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep']
lhs_ids:['sent2', 'sent4']	 rhs = int1	 all_ancestors={'sent2', 'sent4'}
	 rhs = int1, int_str=if seattle has 20 sheep, charleston has 4 * 20 sheep = 80 sheep
step: int1 & sent1 -> int2: Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep
step_parts:['int1 & sent1 -> int2', ' Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent4'}
	 rhs = int2, int_str=toulouse has twice as many sheep as charleston, which is 2 * 80 sheep = 160 sheep
step: int1 & int2 & sent4 -> int3: Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep
step_parts:['int1 & int2 & sent4 -> int3', ' Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep']
lhs_ids:['int1', 'int2', 'sent4']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent4'}
	 rhs = int3, int_str=together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep
step: int3 & sent4 -> hypothesis
step_parts:['int3 & sent4 -> hypothesis']
lhs_ids:['int3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 260
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent4 -> int1: If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep; int1 & sent1 -> int2: Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep; int1 & int2 & sent4 -> int3: Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep; int3 & sent4 -> hypothesis;
	sentences:['sent2 & sent4 -> int1', 'int1 & sent1 -> int2', 'int1 & int2 & sent4 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent4']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent4']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent4'}
	id_to_int:{'int1': 'if seattle has 20 sheep, charleston has 4 * 20 sheep = 80 sheep', 'int2': 'toulouse has twice as many sheep as charleston, which is 2 * 80 sheep = 160 sheep', 'int3': 'together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep', 'hypothesis': 'the answer is 260'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int2', 'int4': 'int2', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int2', 'int4': 'int2', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent4']
		sentences:['int1 & sent1 -> int2', 'int1 & sent1 -> int2', 'int2 & int2 -> int2', 'int2 & sent3 & sent4 -> int2', 'sent2 & sent4 -> int1']
		sentences_gold:['int1 & int2 & sent4 -> int3', 'int1 & sent1 -> int2', 'int3 & sent4 -> hypothesis', 'sent2 & sent4 -> int1']
step:sent2 & sent4 -> int1: If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep
QID:GSM8K_6_8c57a63641
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep', 'int2': 'Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep', 'int3': 'Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep', 'hypothesis': 'The answer is 260'}
step:sent2 & sent4 -> int1: If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep
QID:GSM8K_6_8c57a63641
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep', 'int2': 'Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep', 'int3': 'Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep', 'hypothesis': 'The answer is 260'}
step:sent2 & sent4 -> int1: If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep
step:int1 & sent1 -> int2: Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep
QID:GSM8K_6_8c57a63641
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep', 'int2': 'Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep', 'int3': 'Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep', 'hypothesis': 'The answer is 260'}
step:int1 & sent1 -> int2: Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep
QID:GSM8K_6_8c57a63641
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep', 'int2': 'Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep', 'int3': 'Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep', 'hypothesis': 'The answer is 260'}
step:int1 & sent1 -> int2: Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep
step:int1 & int2 & sent4 -> int3: Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep
QID:GSM8K_6_8c57a63641
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep', 'int2': 'Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep', 'int3': 'Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep', 'hypothesis': 'The answer is 260'}
step:int1 & int2 & sent4 -> int3: Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep
QID:GSM8K_6_8c57a63641
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep', 'int2': 'Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep', 'int3': 'Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep', 'hypothesis': 'The answer is 260'}
step:int1 & int2 & sent4 -> int3: Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep
QID:GSM8K_6_8c57a63641
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep', 'int2': 'Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep', 'int3': 'Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep', 'hypothesis': 'The answer is 260'}
step:int1 & int2 & sent4 -> int3: Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep
step:int3 & sent4 -> hypothesis
QID:GSM8K_6_8c57a63641
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep', 'int2': 'Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep', 'int3': 'Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep', 'hypothesis': 'The answer is 260'}
step:int3 & sent4 -> hypothesis
QID:GSM8K_6_8c57a63641
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Seattle has 20 sheep, Charleston has 4 * 20 sheep = 80 sheep', 'int2': 'Toulouse has twice as many sheep as Charleston, which is 2 * 80 sheep = 160 sheep', 'int3': 'Together, the three has 20 sheep + 160 sheep + 80 sheep = 260 sheep', 'hypothesis': 'The answer is 260'}
step:int3 & sent4 -> hypothesis
step:sent2 & sent4 -> int1: Charleston has 4 * 20 = 80 sheep.
step:sent1 & int1 -> int2: Toulouse has 2 * 80 = 160 sheep.
step:sent1 & int1 -> int3: Toulouse has 2 * 80 = 120 sheep.
step:int3 & sent4 & sent3 -> int4: So, Charleston, Charleston, and Seattle have a total of 120 + 80 = 260 sheep.
step:int4 & int2 -> hypothesis



======================

pred:sent1 & sent3 -> int1: The first 40 MB of the file takes 200 / 40 = 8 minutes.; sent1 & sent4 -> int2: Then find the time it takes to install the update: 20 minutes * 2 GB/minute = 60 minutes; int1 & sent3 -> int3: Then find the time it takes to download the second 40 MB: 8 minutes * 40% = 2 hours; int1 & sent3 -> int4: The second 40 MB of the file takes 40 MB * 4 MB/minute = 16 minutes.; int1 & sent3 -> int5: Then find the total time to download the file: 8 minutes * 40% = 16 minutes; int2 & int1 -> int6: Then add the time to each step to find the total time: 60 minutes + 8 minutes = 120 minutes; int6 & int3 & int5 & sent6 -> int7: Then multiply the total time to download and install by the number of minutes per hour to find the maximum time: 120 minutes * 2 hours = 160 minutes; int4 & sent6 & int7 -> hypothesis
gold:sent1 & sent3 -> int1: First find how many gigabytes are in 40% of the file: 200 GB * 40% = 80 GB; int1 & sent2 -> int2: Then divide that number by the download rate to find the time until Windows restarts: 80 GB / 2 GB/minute = 40 minutes; sent1 & sent2 & sent5 -> int3: Then find the time to download the whole file after the restart: 200 GB / 2 GB/minute = 100 minutes; int2 & int3 & sent4 -> int4: Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update: 40 minutes + 100 minutes + 20 minutes = 160 minutes; int4 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent3 -> int1: The first 40 MB of the file takes 200 / 40 = 8 minutes.
step_parts:['sent1 & sent3 -> int1', ' The first 40 MB of the file takes 200 / 40 = 8 minutes.']
lhs_ids:['sent1', 'sent3']	 rhs = int1	 all_ancestors={'sent1', 'sent3'}
	 rhs = int1, int_str=the first 40 mb of the file takes 200 / 40 = 8 minutes
step: sent1 & sent4 -> int2: Then find the time it takes to install the update: 20 minutes * 2 GB/minute = 60 minutes
step_parts:['sent1 & sent4 -> int2', ' Then find the time it takes to install the update', ' 20 minutes * 2 GB/minute = 60 minutes']
lhs_ids:['sent1', 'sent4']	 rhs = int2	 all_ancestors={'sent1', 'sent4'}
	 rhs = int2, int_str=
step: int1 & sent3 -> int3: Then find the time it takes to download the second 40 MB: 8 minutes * 40% = 2 hours
step_parts:['int1 & sent3 -> int3', ' Then find the time it takes to download the second 40 MB', ' 8 minutes * 40% = 2 hours']
lhs_ids:['int1', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent3'}
	 rhs = int3, int_str=
step: int1 & sent3 -> int4: The second 40 MB of the file takes 40 MB * 4 MB/minute = 16 minutes.
step_parts:['int1 & sent3 -> int4', ' The second 40 MB of the file takes 40 MB * 4 MB/minute = 16 minutes.']
lhs_ids:['int1', 'sent3']	 rhs = int4	 all_ancestors={'sent1', 'sent3'}
	 rhs = int4, int_str=the second 40 mb of the file takes 40 mb * 4 mb/minute = 16 minutes
step: int1 & sent3 -> int5: Then find the total time to download the file: 8 minutes * 40% = 16 minutes
step_parts:['int1 & sent3 -> int5', ' Then find the total time to download the file', ' 8 minutes * 40% = 16 minutes']
lhs_ids:['int1', 'sent3']	 rhs = int5	 all_ancestors={'sent1', 'sent3'}
	 rhs = int5, int_str=
step: int2 & int1 -> int6: Then add the time to each step to find the total time: 60 minutes + 8 minutes = 120 minutes
step_parts:['int2 & int1 -> int6', ' Then add the time to each step to find the total time', ' 60 minutes + 8 minutes = 120 minutes']
lhs_ids:['int2', 'int1']	 rhs = int6	 all_ancestors={'sent1', 'sent4', 'sent3'}
	 rhs = int6, int_str=
step: int6 & int3 & int5 & sent6 -> int7: Then multiply the total time to download and install by the number of minutes per hour to find the maximum time: 120 minutes * 2 hours = 160 minutes
step_parts:['int6 & int3 & int5 & sent6 -> int7', ' Then multiply the total time to download and install by the number of minutes per hour to find the maximum time', ' 120 minutes * 2 hours = 160 minutes']
lhs_ids:['int6', 'int3', 'int5', 'sent6']	 rhs = int7	 all_ancestors={'sent1', 'sent4', 'sent6', 'sent3'}
	 rhs = int7, int_str=
step: int4 & sent6 & int7 -> hypothesis
step_parts:['int4 & sent6 & int7 -> hypothesis']
lhs_ids:['int4', 'sent6', 'int7']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent6', 'sent4', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 160
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent3 -> int1: The first 40 MB of the file takes 200 / 40 = 8 minutes.; sent1 & sent4 -> int2: Then find the time it takes to install the update: 20 minutes * 2 GB/minute = 60 minutes; int1 & sent3 -> int3: Then find the time it takes to download the second 40 MB: 8 minutes * 40% = 2 hours; int1 & sent3 -> int4: The second 40 MB of the file takes 40 MB * 4 MB/minute = 16 minutes.; int1 & sent3 -> int5: Then find the total time to download the file: 8 minutes * 40% = 16 minutes; int2 & int1 -> int6: Then add the time to each step to find the total time: 60 minutes + 8 minutes = 120 minutes; int6 & int3 & int5 & sent6 -> int7: Then multiply the total time to download and install by the number of minutes per hour to find the maximum time: 120 minutes * 2 hours = 160 minutes; int4 & sent6 & int7 -> hypothesis
	sentences:['sent1 & sent3 -> int1', 'sent1 & sent4 -> int2', 'int1 & sent3 -> int3', 'int1 & sent3 -> int4', 'int1 & sent3 -> int5', 'int1 & int2 -> int6', 'int3 & int5 & int6 & sent6 -> int7', 'int4 & int7 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent3'], 'rhs': 'int1'}, {'lhs': ['sent1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int5'}, {'lhs': ['int1', 'int2'], 'rhs': 'int6'}, {'lhs': ['int3', 'int5', 'int6', 'sent6'], 'rhs': 'int7'}, {'lhs': ['int4', 'int7', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent4']}, {'int': 'int3', 'ancestors': ['sent1', 'sent3']}, {'int': 'int4', 'ancestors': ['sent1', 'sent3']}, {'int': 'int5', 'ancestors': ['sent1', 'sent3']}, {'int': 'int6', 'ancestors': ['sent1', 'sent4', 'sent3']}, {'int': 'int7', 'ancestors': ['sent1', 'sent4', 'sent6', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent6', 'sent4', 'sent3']}]
	relevant_sentences:{'sent1', 'sent3', 'sent4', 'sent6'}
	id_to_int:{'int1': 'the first 40 mb of the file takes 200 / 40 = 8 minutes', 'int2': '', 'int3': '', 'int4': 'the second 40 mb of the file takes 40 mb * 4 mb/minute = 16 minutes', 'int5': '', 'int6': '', 'int7': '', 'hypothesis': 'the answer is 160'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent3 -> int1: First find how many gigabytes are in 40% of the file: 200 GB * 40% = 80 GB
step_parts:['sent1 & sent3 -> int1', ' First find how many gigabytes are in 40% of the file', ' 200 GB * 40% = 80 GB']
lhs_ids:['sent1', 'sent3']	 rhs = int1	 all_ancestors={'sent1', 'sent3'}
	 rhs = int1, int_str=
step: int1 & sent2 -> int2: Then divide that number by the download rate to find the time until Windows restarts: 80 GB / 2 GB/minute = 40 minutes
step_parts:['int1 & sent2 -> int2', ' Then divide that number by the download rate to find the time until Windows restarts', ' 80 GB / 2 GB/minute = 40 minutes']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int2, int_str=
step: sent1 & sent2 & sent5 -> int3: Then find the time to download the whole file after the restart: 200 GB / 2 GB/minute = 100 minutes
step_parts:['sent1 & sent2 & sent5 -> int3', ' Then find the time to download the whole file after the restart', ' 200 GB / 2 GB/minute = 100 minutes']
lhs_ids:['sent1', 'sent2', 'sent5']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent5'}
	 rhs = int3, int_str=
step: int2 & int3 & sent4 -> int4: Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update: 40 minutes + 100 minutes + 20 minutes = 160 minutes
step_parts:['int2 & int3 & sent4 -> int4', ' Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', ' 40 minutes + 100 minutes + 20 minutes = 160 minutes']
lhs_ids:['int2', 'int3', 'sent4']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = int4, int_str=
step: int4 & sent6 -> hypothesis
step_parts:['int4 & sent6 -> hypothesis']
lhs_ids:['int4', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 160
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent3 -> int1: First find how many gigabytes are in 40% of the file: 200 GB * 40% = 80 GB; int1 & sent2 -> int2: Then divide that number by the download rate to find the time until Windows restarts: 80 GB / 2 GB/minute = 40 minutes; sent1 & sent2 & sent5 -> int3: Then find the time to download the whole file after the restart: 200 GB / 2 GB/minute = 100 minutes; int2 & int3 & sent4 -> int4: Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update: 40 minutes + 100 minutes + 20 minutes = 160 minutes; int4 & sent6 -> hypothesis;
	sentences:['sent1 & sent3 -> int1', 'int1 & sent2 -> int2', 'sent1 & sent2 & sent5 -> int3', 'int2 & int3 & sent4 -> int4', 'int4 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['sent1', 'sent2', 'sent5'], 'rhs': 'int3'}, {'lhs': ['int2', 'int3', 'sent4'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent5']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent6', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': '', 'int2': '', 'int3': '', 'int4': '', 'hypothesis': 'the answer is 160'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int4', 'int3': 'int1', 'int4': 'int1', 'int5': 'int1', 'int6': 'int1', 'int7': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int4', 'int3': 'int1', 'int4': 'int1', 'int5': 'int1', 'int6': 'int1', 'int7': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent3', 'sent4', 'sent6'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent6', 'sent5', 'sent3', 'sent4'}
		sentences:['sent1', 'sent3', 'sent4', 'sent6']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences:['hypothesis & int1 & sent6 -> hypothesis', 'int1 & int1 & int1 & sent6 -> hypothesis', 'int1 & int4 -> int1', 'int1 & sent3 -> int1', 'int1 & sent3 -> int1', 'int1 & sent3 -> int1', 'sent1 & sent3 -> int1', 'sent1 & sent4 -> int4']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & int3 & sent4 -> int4', 'int4 & sent6 -> hypothesis', 'sent1 & sent2 & sent5 -> int3', 'sent1 & sent3 -> int1']
step:sent1 & sent3 -> int1: First find how many gigabytes are in 40% of the file: 200 GB * 40% = 80 GB
QID:GSM8K_7_ec85fd850b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many gigabytes are in 40% of the file', 'int2': 'Then divide that number by the download rate to find the time until Windows restarts', 'int3': 'Then find the time to download the whole file after the restart', 'int4': 'Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', 'hypothesis': 'The answer is 160'}
step:sent1 & sent3 -> int1: First find how many gigabytes are in 40% of the file: 200 GB * 40% = 80 GB
QID:GSM8K_7_ec85fd850b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many gigabytes are in 40% of the file', 'int2': 'Then divide that number by the download rate to find the time until Windows restarts', 'int3': 'Then find the time to download the whole file after the restart', 'int4': 'Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', 'hypothesis': 'The answer is 160'}
step:sent1 & sent3 -> int1: First find how many gigabytes are in 40% of the file: 200 GB * 40% = 80 GB
step:int1 & sent2 -> int2: Then divide that number by the download rate to find the time until Windows restarts: 80 GB / 2 GB/minute = 40 minutes
QID:GSM8K_7_ec85fd850b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many gigabytes are in 40% of the file', 'int2': 'Then divide that number by the download rate to find the time until Windows restarts', 'int3': 'Then find the time to download the whole file after the restart', 'int4': 'Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', 'hypothesis': 'The answer is 160'}
step:int1 & sent2 -> int2: Then divide that number by the download rate to find the time until Windows restarts: 80 GB / 2 GB/minute = 40 minutes
QID:GSM8K_7_ec85fd850b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many gigabytes are in 40% of the file', 'int2': 'Then divide that number by the download rate to find the time until Windows restarts', 'int3': 'Then find the time to download the whole file after the restart', 'int4': 'Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', 'hypothesis': 'The answer is 160'}
step:int1 & sent2 -> int2: Then divide that number by the download rate to find the time until Windows restarts: 80 GB / 2 GB/minute = 40 minutes
step:sent1 & sent2 & sent5 -> int3: Then find the time to download the whole file after the restart: 200 GB / 2 GB/minute = 100 minutes
QID:GSM8K_7_ec85fd850b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many gigabytes are in 40% of the file', 'int2': 'Then divide that number by the download rate to find the time until Windows restarts', 'int3': 'Then find the time to download the whole file after the restart', 'int4': 'Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', 'hypothesis': 'The answer is 160'}
step:sent1 & sent2 & sent5 -> int3: Then find the time to download the whole file after the restart: 200 GB / 2 GB/minute = 100 minutes
QID:GSM8K_7_ec85fd850b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many gigabytes are in 40% of the file', 'int2': 'Then divide that number by the download rate to find the time until Windows restarts', 'int3': 'Then find the time to download the whole file after the restart', 'int4': 'Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', 'hypothesis': 'The answer is 160'}
step:sent1 & sent2 & sent5 -> int3: Then find the time to download the whole file after the restart: 200 GB / 2 GB/minute = 100 minutes
QID:GSM8K_7_ec85fd850b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many gigabytes are in 40% of the file', 'int2': 'Then divide that number by the download rate to find the time until Windows restarts', 'int3': 'Then find the time to download the whole file after the restart', 'int4': 'Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', 'hypothesis': 'The answer is 160'}
step:sent1 & sent2 & sent5 -> int3: Then find the time to download the whole file after the restart: 200 GB / 2 GB/minute = 100 minutes
step:int2 & int3 & sent4 -> int4: Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update: 40 minutes + 100 minutes + 20 minutes = 160 minutes
QID:GSM8K_7_ec85fd850b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many gigabytes are in 40% of the file', 'int2': 'Then divide that number by the download rate to find the time until Windows restarts', 'int3': 'Then find the time to download the whole file after the restart', 'int4': 'Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', 'hypothesis': 'The answer is 160'}
step:int2 & int3 & sent4 -> int4: Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update: 40 minutes + 100 minutes + 20 minutes = 160 minutes
QID:GSM8K_7_ec85fd850b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many gigabytes are in 40% of the file', 'int2': 'Then divide that number by the download rate to find the time until Windows restarts', 'int3': 'Then find the time to download the whole file after the restart', 'int4': 'Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', 'hypothesis': 'The answer is 160'}
step:int2 & int3 & sent4 -> int4: Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update: 40 minutes + 100 minutes + 20 minutes = 160 minutes
QID:GSM8K_7_ec85fd850b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many gigabytes are in 40% of the file', 'int2': 'Then divide that number by the download rate to find the time until Windows restarts', 'int3': 'Then find the time to download the whole file after the restart', 'int4': 'Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', 'hypothesis': 'The answer is 160'}
step:int2 & int3 & sent4 -> int4: Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update: 40 minutes + 100 minutes + 20 minutes = 160 minutes
step:int4 & sent6 -> hypothesis
QID:GSM8K_7_ec85fd850b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many gigabytes are in 40% of the file', 'int2': 'Then divide that number by the download rate to find the time until Windows restarts', 'int3': 'Then find the time to download the whole file after the restart', 'int4': 'Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', 'hypothesis': 'The answer is 160'}
step:int4 & sent6 -> hypothesis
QID:GSM8K_7_ec85fd850b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many gigabytes are in 40% of the file', 'int2': 'Then divide that number by the download rate to find the time until Windows restarts', 'int3': 'Then find the time to download the whole file after the restart', 'int4': 'Then add the time to download 40% of the file, to download the whole file, and to wait for Windows to update', 'hypothesis': 'The answer is 160'}
step:int4 & sent6 -> hypothesis
step:sent1 & sent3 -> int1: The first 40 MB of the file takes 200 / 40 = 8 minutes.
step:sent1 & sent4 -> int2: Then find the time it takes to install the update: 20 minutes * 2 GB/minute = 60 minutes
step:int1 & sent3 -> int3: Then find the time it takes to download the second 40 MB: 8 minutes * 40% = 2 hours
step:int1 & sent3 -> int4: The second 40 MB of the file takes 40 MB * 4 MB/minute = 16 minutes.
step:int1 & sent3 -> int5: Then find the total time to download the file: 8 minutes * 40% = 16 minutes
step:int2 & int1 -> int6: Then add the time to each step to find the total time: 60 minutes + 8 minutes = 120 minutes
step:int6 & int3 & int5 & sent6 -> int7: Then multiply the total time to download and install by the number of minutes per hour to find the maximum time: 120 minutes * 2 hours = 160 minutes
step:int4 & sent6 & int7 -> hypothesis



======================

pred:sent1 -> int1: He spends 3 hours at 60 mph because 3 x 60 = 3; sent3 -> int2: He spends 2 hours in traffic because 4 x 60 = 2; sent4 & int2 -> int3: He drives 30 miles in the next half-hour because 2 x 30 = 30; sent5 & int3 & int1 -> int4: He has 4 hours left to drive because 4 - 30 - 80 = 4; int4 & sent6 -> int5: He is 45 miles from home because 4 x 4 = 45; int5 & sent6 -> hypothesis
gold:sent1 & sent2 -> int1: When he turned around he was 3*60=180 miles from home; sent3 -> int2: He was only able to drive 4-2=2 hours in the first four hours; sent4 -> int3: In half an hour he goes 30*.5=15 miles; sent5 -> int4: He then drives another 2-.5=1.5 hours; int4 & sent5 -> int5: In that time he goes 80*1.5=120 miles; int3 & int5 -> int6: So he drove 120+15=135 miles; int1 & int6 & sent6 -> int7: So he is 180-135=45 miles away from home; int7 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent1 -> int1: He spends 3 hours at 60 mph because 3 x 60 = 3
step_parts:['sent1 -> int1', ' He spends 3 hours at 60 mph because 3 x 60 = 3']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=he spends 3 hours at 60 mph because 3 x 60 = 3
step: sent3 -> int2: He spends 2 hours in traffic because 4 x 60 = 2
step_parts:['sent3 -> int2', ' He spends 2 hours in traffic because 4 x 60 = 2']
lhs_ids:['sent3']	 rhs = int2	 all_ancestors={'sent3'}
	 rhs = int2, int_str=he spends 2 hours in traffic because 4 x 60 = 2
step: sent4 & int2 -> int3: He drives 30 miles in the next half-hour because 2 x 30 = 30
step_parts:['sent4 & int2 -> int3', ' He drives 30 miles in the next half-hour because 2 x 30 = 30']
lhs_ids:['sent4', 'int2']	 rhs = int3	 all_ancestors={'sent4', 'sent3'}
	 rhs = int3, int_str=he drives 30 miles in the next half-hour because 2 x 30 = 30
step: sent5 & int3 & int1 -> int4: He has 4 hours left to drive because 4 - 30 - 80 = 4
step_parts:['sent5 & int3 & int1 -> int4', ' He has 4 hours left to drive because 4 - 30 - 80 = 4']
lhs_ids:['sent5', 'int3', 'int1']	 rhs = int4	 all_ancestors={'sent1', 'sent4', 'sent3', 'sent5'}
	 rhs = int4, int_str=he has 4 hours left to drive because 4 - 30 - 80 = 4
step: int4 & sent6 -> int5: He is 45 miles from home because 4 x 4 = 45
step_parts:['int4 & sent6 -> int5', ' He is 45 miles from home because 4 x 4 = 45']
lhs_ids:['int4', 'sent6']	 rhs = int5	 all_ancestors={'sent1', 'sent6', 'sent5', 'sent3', 'sent4'}
	 rhs = int5, int_str=he is 45 miles from home because 4 x 4 = 45
step: int5 & sent6 -> hypothesis
step_parts:['int5 & sent6 -> hypothesis']
lhs_ids:['int5', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent6', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 45
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: He spends 3 hours at 60 mph because 3 x 60 = 3; sent3 -> int2: He spends 2 hours in traffic because 4 x 60 = 2; sent4 & int2 -> int3: He drives 30 miles in the next half-hour because 2 x 30 = 30; sent5 & int3 & int1 -> int4: He has 4 hours left to drive because 4 - 30 - 80 = 4; int4 & sent6 -> int5: He is 45 miles from home because 4 x 4 = 45; int5 & sent6 -> hypothesis
	sentences:['sent1 -> int1', 'sent3 -> int2', 'int2 & sent4 -> int3', 'int1 & int3 & sent5 -> int4', 'int4 & sent6 -> int5', 'int5 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int1', 'int3', 'sent5'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent6'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent3']}, {'int': 'int3', 'ancestors': ['sent4', 'sent3']}, {'int': 'int4', 'ancestors': ['sent1', 'sent4', 'sent3', 'sent5']}, {'int': 'int5', 'ancestors': ['sent1', 'sent6', 'sent5', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent6', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent6', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'he spends 3 hours at 60 mph because 3 x 60 = 3', 'int2': 'he spends 2 hours in traffic because 4 x 60 = 2', 'int3': 'he drives 30 miles in the next half-hour because 2 x 30 = 30', 'int4': 'he has 4 hours left to drive because 4 - 30 - 80 = 4', 'int5': 'he is 45 miles from home because 4 x 4 = 45', 'hypothesis': 'the answer is 45'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: When he turned around he was 3*60=180 miles from home
step_parts:['sent1 & sent2 -> int1', ' When he turned around he was 3*60=180 miles from home']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=when he turned around he was 3*60=180 miles from home
step: sent3 -> int2: He was only able to drive 4-2=2 hours in the first four hours
step_parts:['sent3 -> int2', ' He was only able to drive 4-2=2 hours in the first four hours']
lhs_ids:['sent3']	 rhs = int2	 all_ancestors={'sent3'}
	 rhs = int2, int_str=he was only able to drive 4-2=2 hours in the first four hours
step: sent4 -> int3: In half an hour he goes 30*.5=15 miles
step_parts:['sent4 -> int3', ' In half an hour he goes 30*.5=15 miles']
lhs_ids:['sent4']	 rhs = int3	 all_ancestors={'sent4'}
	 rhs = int3, int_str=in half an hour he goes 30*5=15 miles
step: sent5 -> int4: He then drives another 2-.5=1.5 hours
step_parts:['sent5 -> int4', ' He then drives another 2-.5=1.5 hours']
lhs_ids:['sent5']	 rhs = int4	 all_ancestors={'sent5'}
	 rhs = int4, int_str=he then drives another 2-5=15 hours
step: int4 & sent5 -> int5: In that time he goes 80*1.5=120 miles
step_parts:['int4 & sent5 -> int5', ' In that time he goes 80*1.5=120 miles']
lhs_ids:['int4', 'sent5']	 rhs = int5	 all_ancestors={'sent5'}
	 rhs = int5, int_str=in that time he goes 80*15=120 miles
step: int3 & int5 -> int6: So he drove 120+15=135 miles
step_parts:['int3 & int5 -> int6', ' So he drove 120+15=135 miles']
lhs_ids:['int3', 'int5']	 rhs = int6	 all_ancestors={'sent4', 'sent5'}
	 rhs = int6, int_str=so he drove 120+15=135 miles
step: int1 & int6 & sent6 -> int7: So he is 180-135=45 miles away from home
step_parts:['int1 & int6 & sent6 -> int7', ' So he is 180-135=45 miles away from home']
lhs_ids:['int1', 'int6', 'sent6']	 rhs = int7	 all_ancestors={'sent1', 'sent2', 'sent6', 'sent5', 'sent4'}
	 rhs = int7, int_str=so he is 180-135=45 miles away from home
step: int7 & sent6 -> hypothesis
step_parts:['int7 & sent6 -> hypothesis']
lhs_ids:['int7', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent6', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 45
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: When he turned around he was 3*60=180 miles from home; sent3 -> int2: He was only able to drive 4-2=2 hours in the first four hours; sent4 -> int3: In half an hour he goes 30*.5=15 miles; sent5 -> int4: He then drives another 2-.5=1.5 hours; int4 & sent5 -> int5: In that time he goes 80*1.5=120 miles; int3 & int5 -> int6: So he drove 120+15=135 miles; int1 & int6 & sent6 -> int7: So he is 180-135=45 miles away from home; int7 & sent6 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'sent3 -> int2', 'sent4 -> int3', 'sent5 -> int4', 'int4 & sent5 -> int5', 'int3 & int5 -> int6', 'int1 & int6 & sent6 -> int7', 'int7 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['sent3'], 'rhs': 'int2'}, {'lhs': ['sent4'], 'rhs': 'int3'}, {'lhs': ['sent5'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent5'], 'rhs': 'int5'}, {'lhs': ['int3', 'int5'], 'rhs': 'int6'}, {'lhs': ['int1', 'int6', 'sent6'], 'rhs': 'int7'}, {'lhs': ['int7', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent3']}, {'int': 'int3', 'ancestors': ['sent4']}, {'int': 'int4', 'ancestors': ['sent5']}, {'int': 'int5', 'ancestors': ['sent5']}, {'int': 'int6', 'ancestors': ['sent4', 'sent5']}, {'int': 'int7', 'ancestors': ['sent1', 'sent2', 'sent6', 'sent5', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent6', 'sent4', 'sent5']}]
	relevant_sentences:{'sent1', 'sent2', 'sent6', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'when he turned around he was 3*60=180 miles from home', 'int2': 'he was only able to drive 4-2=2 hours in the first four hours', 'int3': 'in half an hour he goes 30*5=15 miles', 'int4': 'he then drives another 2-5=15 hours', 'int5': 'in that time he goes 80*15=120 miles', 'int6': 'so he drove 120+15=135 miles', 'int7': 'so he is 180-135=45 miles away from home', 'hypothesis': 'the answer is 45'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int2', 'int4': 'int6', 'int5': 'int7', 'hypothesis': 'int7'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int2', 'int4': 'int6', 'int5': 'int7', 'hypothesis': 'int7'}
relevant_sentences_pred:{'sent1', 'sent6', 'sent5', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent6', 'sent5', 'sent3', 'sent4'}
		sentences:['sent1', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences:['int1 & int2 & sent5 -> int6', 'int2 & sent4 -> int2', 'int6 & sent6 -> int7', 'int7 & sent6 -> int7', 'sent1 -> int1', 'sent3 -> int2']
		sentences_gold:['int1 & int6 & sent6 -> int7', 'int3 & int5 -> int6', 'int4 & sent5 -> int5', 'int7 & sent6 -> hypothesis', 'sent1 & sent2 -> int1', 'sent3 -> int2', 'sent4 -> int3', 'sent5 -> int4']
step:sent1 & sent2 -> int1: When he turned around he was 3*60=180 miles from home
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:sent1 & sent2 -> int1: When he turned around he was 3*60=180 miles from home
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:sent1 & sent2 -> int1: When he turned around he was 3*60=180 miles from home
step:sent3 -> int2: He was only able to drive 4-2=2 hours in the first four hours
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:sent3 -> int2: He was only able to drive 4-2=2 hours in the first four hours
step:sent4 -> int3: In half an hour he goes 30*.5=15 miles
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:sent4 -> int3: In half an hour he goes 30*.5=15 miles
step:sent5 -> int4: He then drives another 2-.5=1.5 hours
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:sent5 -> int4: He then drives another 2-.5=1.5 hours
step:int4 & sent5 -> int5: In that time he goes 80*1.5=120 miles
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:int4 & sent5 -> int5: In that time he goes 80*1.5=120 miles
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:int4 & sent5 -> int5: In that time he goes 80*1.5=120 miles
step:int3 & int5 -> int6: So he drove 120+15=135 miles
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:int3 & int5 -> int6: So he drove 120+15=135 miles
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:int3 & int5 -> int6: So he drove 120+15=135 miles
step:int1 & int6 & sent6 -> int7: So he is 180-135=45 miles away from home
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:int1 & int6 & sent6 -> int7: So he is 180-135=45 miles away from home
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:int1 & int6 & sent6 -> int7: So he is 180-135=45 miles away from home
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:int1 & int6 & sent6 -> int7: So he is 180-135=45 miles away from home
step:int7 & sent6 -> hypothesis
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:int7 & sent6 -> hypothesis
QID:GSM8K_8_f8cdd58483
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'When he turned around he was 3*60=180 miles from home', 'int2': 'He was only able to drive 4-2=2 hours in the first four hours', 'int3': 'In half an hour he goes 30*.5=15 miles', 'int4': 'He then drives another 2-.5=1.5 hours', 'int5': 'In that time he goes 80*1.5=120 miles', 'int6': 'So he drove 120+15=135 miles', 'int7': 'So he is 180-135=45 miles away from home', 'hypothesis': 'The answer is 45'}
step:int7 & sent6 -> hypothesis
step:sent1 -> int1: He spends 3 hours at 60 mph because 3 x 60 = 3
step:sent3 -> int2: He spends 2 hours in traffic because 4 x 60 = 2
step:sent4 & int2 -> int3: He drives 30 miles in the next half-hour because 2 x 30 = 30
step:sent5 & int3 & int1 -> int4: He has 4 hours left to drive because 4 - 30 - 80 = 4
step:int4 & sent6 -> int5: He is 45 miles from home because 4 x 4 = 45
step:int5 & sent6 -> hypothesis



======================

pred:sent1 -> int1: Since Elizabeth worked 40 hours this week, her regular hourly rate is $10/hour * 40 hours = $200; sent2 & sent3 -> int2: Overtime pay is 1.2 * 40 hours = $36.; int2 & sent3 & int1 -> int3: Her total earnings for the week is $200 + $36 = $460; sent4 & int3 -> hypothesis
gold:sent1 & sent3 -> int1: Eliza is entitled to 45 -40 = 5 hours overtime pay.; sent1 & sent2 -> int2: Her hourly rate for the overtime pay is $10 x 1.2 = $12.; int1 & int2 -> int3: So, Eliza will receive $12 x 5 =$60 for overtime pay.; sent1 -> int4: Her regular weekly earning is $10 x 40 = $400.; int3 & int4 & sent4 -> int5: Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.; int5 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent1 -> int1: Since Elizabeth worked 40 hours this week, her regular hourly rate is $10/hour * 40 hours = $200
step_parts:['sent1 -> int1', ' Since Elizabeth worked 40 hours this week, her regular hourly rate is $10/hour * 40 hours = $200']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=since elizabeth worked 40 hours this week, her regular hourly rate is $10/hour * 40 hours = $200
step: sent2 & sent3 -> int2: Overtime pay is 1.2 * 40 hours = $36.
step_parts:['sent2 & sent3 -> int2', ' Overtime pay is 1.2 * 40 hours = $36.']
lhs_ids:['sent2', 'sent3']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=overtime pay is 12 * 40 hours = $36
step: int2 & sent3 & int1 -> int3: Her total earnings for the week is $200 + $36 = $460
step_parts:['int2 & sent3 & int1 -> int3', ' Her total earnings for the week is $200 + $36 = $460']
lhs_ids:['int2', 'sent3', 'int1']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int3, int_str=her total earnings for the week is $200 + $36 = $460
step: sent4 & int3 -> hypothesis
step_parts:['sent4 & int3 -> hypothesis']
lhs_ids:['sent4', 'int3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent3', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 460
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: Since Elizabeth worked 40 hours this week, her regular hourly rate is $10/hour * 40 hours = $200; sent2 & sent3 -> int2: Overtime pay is 1.2 * 40 hours = $36.; int2 & sent3 & int1 -> int3: Her total earnings for the week is $200 + $36 = $460; sent4 & int3 -> hypothesis
	sentences:['sent1 -> int1', 'sent2 & sent3 -> int2', 'int1 & int2 & sent3 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent3', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'since elizabeth worked 40 hours this week, her regular hourly rate is $10/hour * 40 hours = $200', 'int2': 'overtime pay is 12 * 40 hours = $36', 'int3': 'her total earnings for the week is $200 + $36 = $460', 'hypothesis': 'the answer is 460'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent3 -> int1: Eliza is entitled to 45 -40 = 5 hours overtime pay.
step_parts:['sent1 & sent3 -> int1', ' Eliza is entitled to 45 -40 = 5 hours overtime pay.']
lhs_ids:['sent1', 'sent3']	 rhs = int1	 all_ancestors={'sent1', 'sent3'}
	 rhs = int1, int_str=eliza is entitled to 45 -40 = 5 hours overtime pay
step: sent1 & sent2 -> int2: Her hourly rate for the overtime pay is $10 x 1.2 = $12.
step_parts:['sent1 & sent2 -> int2', ' Her hourly rate for the overtime pay is $10 x 1.2 = $12.']
lhs_ids:['sent1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=her hourly rate for the overtime pay is $10 x 12 = $12
step: int1 & int2 -> int3: So, Eliza will receive $12 x 5 =$60 for overtime pay.
step_parts:['int1 & int2 -> int3', ' So, Eliza will receive $12 x 5 =$60 for overtime pay.']
lhs_ids:['int1', 'int2']	 rhs = int3	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int3, int_str=so, eliza will receive $12 x 5 =$60 for overtime pay
step: sent1 -> int4: Her regular weekly earning is $10 x 40 = $400.
step_parts:['sent1 -> int4', ' Her regular weekly earning is $10 x 40 = $400.']
lhs_ids:['sent1']	 rhs = int4	 all_ancestors={'sent1'}
	 rhs = int4, int_str=her regular weekly earning is $10 x 40 = $400
step: int3 & int4 & sent4 -> int5: Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.
step_parts:['int3 & int4 & sent4 -> int5', " Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work."]
lhs_ids:['int3', 'int4', 'sent4']	 rhs = int5	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent4'}
	 rhs = int5, int_str=thus, eliza will receive a total of $400 + $60 = $460 for this week's work
step: int5 & sent4 -> hypothesis
step_parts:['int5 & sent4 -> hypothesis']
lhs_ids:['int5', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 460
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent3 -> int1: Eliza is entitled to 45 -40 = 5 hours overtime pay.; sent1 & sent2 -> int2: Her hourly rate for the overtime pay is $10 x 1.2 = $12.; int1 & int2 -> int3: So, Eliza will receive $12 x 5 =$60 for overtime pay.; sent1 -> int4: Her regular weekly earning is $10 x 40 = $400.; int3 & int4 & sent4 -> int5: Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.; int5 & sent4 -> hypothesis;
	sentences:['sent1 & sent3 -> int1', 'sent1 & sent2 -> int2', 'int1 & int2 -> int3', 'sent1 -> int4', 'int3 & int4 & sent4 -> int5', 'int5 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent3'], 'rhs': 'int1'}, {'lhs': ['sent1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2'], 'rhs': 'int3'}, {'lhs': ['sent1'], 'rhs': 'int4'}, {'lhs': ['int3', 'int4', 'sent4'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'int4', 'ancestors': ['sent1']}, {'int': 'int5', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent4']}]
	relevant_sentences:{'sent1', 'sent3', 'sent2', 'sent4'}
	id_to_int:{'int1': 'eliza is entitled to 45 -40 = 5 hours overtime pay', 'int2': 'her hourly rate for the overtime pay is $10 x 12 = $12', 'int3': 'so, eliza will receive $12 x 5 =$60 for overtime pay', 'int4': 'her regular weekly earning is $10 x 40 = $400', 'int5': "thus, eliza will receive a total of $400 + $60 = $460 for this week's work", 'hypothesis': 'the answer is 460'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int4', 'int2': 'int3', 'int3': 'int3', 'hypothesis': 'int5'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int4', 'int2': 'int3', 'int3': 'int3', 'hypothesis': 'int5'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent3', 'sent2', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['int3 & int4 & sent3 -> int3', 'int3 & sent4 -> int5', 'sent1 -> int4', 'sent2 & sent3 -> int3']
		sentences_gold:['int1 & int2 -> int3', 'int3 & int4 & sent4 -> int5', 'int5 & sent4 -> hypothesis', 'sent1 & sent2 -> int2', 'sent1 & sent3 -> int1', 'sent1 -> int4']
step:sent1 & sent3 -> int1: Eliza is entitled to 45 -40 = 5 hours overtime pay.
QID:GSM8K_9_81d0fa7c02
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Eliza is entitled to 45 -40 = 5 hours overtime pay.', 'int2': 'Her hourly rate for the overtime pay is $10 x 1.2 = $12.', 'int3': 'So, Eliza will receive $12 x 5 =$60 for overtime pay.', 'int4': 'Her regular weekly earning is $10 x 40 = $400.', 'int5': "Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.", 'hypothesis': 'The answer is 460'}
step:sent1 & sent3 -> int1: Eliza is entitled to 45 -40 = 5 hours overtime pay.
QID:GSM8K_9_81d0fa7c02
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Eliza is entitled to 45 -40 = 5 hours overtime pay.', 'int2': 'Her hourly rate for the overtime pay is $10 x 1.2 = $12.', 'int3': 'So, Eliza will receive $12 x 5 =$60 for overtime pay.', 'int4': 'Her regular weekly earning is $10 x 40 = $400.', 'int5': "Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.", 'hypothesis': 'The answer is 460'}
step:sent1 & sent3 -> int1: Eliza is entitled to 45 -40 = 5 hours overtime pay.
step:sent1 & sent2 -> int2: Her hourly rate for the overtime pay is $10 x 1.2 = $12.
QID:GSM8K_9_81d0fa7c02
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Eliza is entitled to 45 -40 = 5 hours overtime pay.', 'int2': 'Her hourly rate for the overtime pay is $10 x 1.2 = $12.', 'int3': 'So, Eliza will receive $12 x 5 =$60 for overtime pay.', 'int4': 'Her regular weekly earning is $10 x 40 = $400.', 'int5': "Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.", 'hypothesis': 'The answer is 460'}
step:sent1 & sent2 -> int2: Her hourly rate for the overtime pay is $10 x 1.2 = $12.
QID:GSM8K_9_81d0fa7c02
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Eliza is entitled to 45 -40 = 5 hours overtime pay.', 'int2': 'Her hourly rate for the overtime pay is $10 x 1.2 = $12.', 'int3': 'So, Eliza will receive $12 x 5 =$60 for overtime pay.', 'int4': 'Her regular weekly earning is $10 x 40 = $400.', 'int5': "Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.", 'hypothesis': 'The answer is 460'}
step:sent1 & sent2 -> int2: Her hourly rate for the overtime pay is $10 x 1.2 = $12.
step:int1 & int2 -> int3: So, Eliza will receive $12 x 5 =$60 for overtime pay.
QID:GSM8K_9_81d0fa7c02
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Eliza is entitled to 45 -40 = 5 hours overtime pay.', 'int2': 'Her hourly rate for the overtime pay is $10 x 1.2 = $12.', 'int3': 'So, Eliza will receive $12 x 5 =$60 for overtime pay.', 'int4': 'Her regular weekly earning is $10 x 40 = $400.', 'int5': "Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.", 'hypothesis': 'The answer is 460'}
step:int1 & int2 -> int3: So, Eliza will receive $12 x 5 =$60 for overtime pay.
QID:GSM8K_9_81d0fa7c02
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Eliza is entitled to 45 -40 = 5 hours overtime pay.', 'int2': 'Her hourly rate for the overtime pay is $10 x 1.2 = $12.', 'int3': 'So, Eliza will receive $12 x 5 =$60 for overtime pay.', 'int4': 'Her regular weekly earning is $10 x 40 = $400.', 'int5': "Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.", 'hypothesis': 'The answer is 460'}
step:int1 & int2 -> int3: So, Eliza will receive $12 x 5 =$60 for overtime pay.
step:sent1 -> int4: Her regular weekly earning is $10 x 40 = $400.
QID:GSM8K_9_81d0fa7c02
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Eliza is entitled to 45 -40 = 5 hours overtime pay.', 'int2': 'Her hourly rate for the overtime pay is $10 x 1.2 = $12.', 'int3': 'So, Eliza will receive $12 x 5 =$60 for overtime pay.', 'int4': 'Her regular weekly earning is $10 x 40 = $400.', 'int5': "Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.", 'hypothesis': 'The answer is 460'}
step:sent1 -> int4: Her regular weekly earning is $10 x 40 = $400.
step:int3 & int4 & sent4 -> int5: Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.
QID:GSM8K_9_81d0fa7c02
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Eliza is entitled to 45 -40 = 5 hours overtime pay.', 'int2': 'Her hourly rate for the overtime pay is $10 x 1.2 = $12.', 'int3': 'So, Eliza will receive $12 x 5 =$60 for overtime pay.', 'int4': 'Her regular weekly earning is $10 x 40 = $400.', 'int5': "Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.", 'hypothesis': 'The answer is 460'}
step:int3 & int4 & sent4 -> int5: Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.
QID:GSM8K_9_81d0fa7c02
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Eliza is entitled to 45 -40 = 5 hours overtime pay.', 'int2': 'Her hourly rate for the overtime pay is $10 x 1.2 = $12.', 'int3': 'So, Eliza will receive $12 x 5 =$60 for overtime pay.', 'int4': 'Her regular weekly earning is $10 x 40 = $400.', 'int5': "Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.", 'hypothesis': 'The answer is 460'}
step:int3 & int4 & sent4 -> int5: Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.
QID:GSM8K_9_81d0fa7c02
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Eliza is entitled to 45 -40 = 5 hours overtime pay.', 'int2': 'Her hourly rate for the overtime pay is $10 x 1.2 = $12.', 'int3': 'So, Eliza will receive $12 x 5 =$60 for overtime pay.', 'int4': 'Her regular weekly earning is $10 x 40 = $400.', 'int5': "Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.", 'hypothesis': 'The answer is 460'}
step:int3 & int4 & sent4 -> int5: Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.
step:int5 & sent4 -> hypothesis
QID:GSM8K_9_81d0fa7c02
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Eliza is entitled to 45 -40 = 5 hours overtime pay.', 'int2': 'Her hourly rate for the overtime pay is $10 x 1.2 = $12.', 'int3': 'So, Eliza will receive $12 x 5 =$60 for overtime pay.', 'int4': 'Her regular weekly earning is $10 x 40 = $400.', 'int5': "Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.", 'hypothesis': 'The answer is 460'}
step:int5 & sent4 -> hypothesis
QID:GSM8K_9_81d0fa7c02
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Eliza is entitled to 45 -40 = 5 hours overtime pay.', 'int2': 'Her hourly rate for the overtime pay is $10 x 1.2 = $12.', 'int3': 'So, Eliza will receive $12 x 5 =$60 for overtime pay.', 'int4': 'Her regular weekly earning is $10 x 40 = $400.', 'int5': "Thus, Eliza will receive a total of $400 + $60 = $460 for this week's work.", 'hypothesis': 'The answer is 460'}
step:int5 & sent4 -> hypothesis
step:sent1 -> int1: Since Elizabeth worked 40 hours this week, her regular hourly rate is $10/hour * 40 hours = $200
step:sent2 & sent3 -> int2: Overtime pay is 1.2 * 40 hours = $36.
step:int2 & sent3 & int1 -> int3: Her total earnings for the week is $200 + $36 = $460
step:sent4 & int3 -> hypothesis



======================

pred:sent2 & sent1 -> int1: In the second month, there were 3*60=120 downloads.; sent1 & int1 -> int2: In the first month, there were 60+120=180 downloads.; sent3 & int2 -> int3: In the third month, there were 180-300=72 downloads.; int3 & sent1 & int2 -> int4: The total number of downloads for the three months was 60+120+72=366 downloads.; int4 & sent4 -> hypothesis
gold:sent1 & sent2 -> int1: The number of downloads of the program in the second month increased to 3*60 = 180; int1 & sent1 -> int2: In the first two months, the total number of downloads of the program was 180+60 = 240; int1 & sent3 -> int3: In the third month, the number of downloads of the program reduced by 30/100*180 = 54; int1 & int3 -> int4: There were 180-54 = 126 downloads in the third month.; int2 & int4 -> int5: In the three months, the total number of downloads of the program was 126+240 = 366; int5 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent1 -> int1: In the second month, there were 3*60=120 downloads.
step_parts:['sent2 & sent1 -> int1', ' In the second month, there were 3*60=120 downloads.']
lhs_ids:['sent2', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=in the second month, there were 3*60=120 downloads
step: sent1 & int1 -> int2: In the first month, there were 60+120=180 downloads.
step_parts:['sent1 & int1 -> int2', ' In the first month, there were 60+120=180 downloads.']
lhs_ids:['sent1', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=in the first month, there were 60+120=180 downloads
step: sent3 & int2 -> int3: In the third month, there were 180-300=72 downloads.
step_parts:['sent3 & int2 -> int3', ' In the third month, there were 180-300=72 downloads.']
lhs_ids:['sent3', 'int2']	 rhs = int3	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int3, int_str=in the third month, there were 180-300=72 downloads
step: int3 & sent1 & int2 -> int4: The total number of downloads for the three months was 60+120+72=366 downloads.
step_parts:['int3 & sent1 & int2 -> int4', ' The total number of downloads for the three months was 60+120+72=366 downloads.']
lhs_ids:['int3', 'sent1', 'int2']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int4, int_str=the total number of downloads for the three months was 60+120+72=366 downloads
step: int4 & sent4 -> hypothesis
step_parts:['int4 & sent4 -> hypothesis']
lhs_ids:['int4', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 366
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent1 -> int1: In the second month, there were 3*60=120 downloads.; sent1 & int1 -> int2: In the first month, there were 60+120=180 downloads.; sent3 & int2 -> int3: In the third month, there were 180-300=72 downloads.; int3 & sent1 & int2 -> int4: The total number of downloads for the three months was 60+120+72=366 downloads.; int4 & sent4 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent1 -> int2', 'int2 & sent3 -> int3', 'int2 & int3 & sent1 -> int4', 'int4 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int2', 'int3', 'sent1'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'in the second month, there were 3*60=120 downloads', 'int2': 'in the first month, there were 60+120=180 downloads', 'int3': 'in the third month, there were 180-300=72 downloads', 'int4': 'the total number of downloads for the three months was 60+120+72=366 downloads', 'hypothesis': 'the answer is 366'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: The number of downloads of the program in the second month increased to 3*60 = 180
step_parts:['sent1 & sent2 -> int1', ' The number of downloads of the program in the second month increased to 3*60 = 180']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=the number of downloads of the program in the second month increased to 3*60 = 180
step: int1 & sent1 -> int2: In the first two months, the total number of downloads of the program was 180+60 = 240
step_parts:['int1 & sent1 -> int2', ' In the first two months, the total number of downloads of the program was 180+60 = 240']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=in the first two months, the total number of downloads of the program was 180+60 = 240
step: int1 & sent3 -> int3: In the third month, the number of downloads of the program reduced by 30/100*180 = 54
step_parts:['int1 & sent3 -> int3', ' In the third month, the number of downloads of the program reduced by 30/100*180 = 54']
lhs_ids:['int1', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int3, int_str=in the third month, the number of downloads of the program reduced by 30/100*180 = 54
step: int1 & int3 -> int4: There were 180-54 = 126 downloads in the third month.
step_parts:['int1 & int3 -> int4', ' There were 180-54 = 126 downloads in the third month.']
lhs_ids:['int1', 'int3']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int4, int_str=there were 180-54 = 126 downloads in the third month
step: int2 & int4 -> int5: In the three months, the total number of downloads of the program was 126+240 = 366
step_parts:['int2 & int4 -> int5', ' In the three months, the total number of downloads of the program was 126+240 = 366']
lhs_ids:['int2', 'int4']	 rhs = int5	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int5, int_str=in the three months, the total number of downloads of the program was 126+240 = 366
step: int5 & sent4 -> hypothesis
step_parts:['int5 & sent4 -> hypothesis']
lhs_ids:['int5', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 366
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: The number of downloads of the program in the second month increased to 3*60 = 180; int1 & sent1 -> int2: In the first two months, the total number of downloads of the program was 180+60 = 240; int1 & sent3 -> int3: In the third month, the number of downloads of the program reduced by 30/100*180 = 54; int1 & int3 -> int4: There were 180-54 = 126 downloads in the third month.; int2 & int4 -> int5: In the three months, the total number of downloads of the program was 126+240 = 366; int5 & sent4 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'int1 & sent1 -> int2', 'int1 & sent3 -> int3', 'int1 & int3 -> int4', 'int2 & int4 -> int5', 'int5 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int1', 'int3'], 'rhs': 'int4'}, {'lhs': ['int2', 'int4'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int5', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'the number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'in the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'in the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'there were 180-54 = 126 downloads in the third month', 'int5': 'in the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'the answer is 366'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int3', 'int4': 'int3', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int3', 'int4': 'int3', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['int1 & int3 & sent1 -> int3', 'int1 & sent1 -> int1', 'int1 & sent3 -> int3', 'int3 & sent4 -> hypothesis', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 & int3 -> int4', 'int1 & sent1 -> int2', 'int1 & sent3 -> int3', 'int2 & int4 -> int5', 'int5 & sent4 -> hypothesis', 'sent1 & sent2 -> int1']
step:sent1 & sent2 -> int1: The number of downloads of the program in the second month increased to 3*60 = 180
QID:GSM8K_10_35eaba6383
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'In the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'In the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'There were 180-54 = 126 downloads in the third month.', 'int5': 'In the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'The answer is 366'}
step:sent1 & sent2 -> int1: The number of downloads of the program in the second month increased to 3*60 = 180
QID:GSM8K_10_35eaba6383
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'In the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'In the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'There were 180-54 = 126 downloads in the third month.', 'int5': 'In the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'The answer is 366'}
step:sent1 & sent2 -> int1: The number of downloads of the program in the second month increased to 3*60 = 180
step:int1 & sent1 -> int2: In the first two months, the total number of downloads of the program was 180+60 = 240
QID:GSM8K_10_35eaba6383
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'In the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'In the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'There were 180-54 = 126 downloads in the third month.', 'int5': 'In the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'The answer is 366'}
step:int1 & sent1 -> int2: In the first two months, the total number of downloads of the program was 180+60 = 240
QID:GSM8K_10_35eaba6383
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'In the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'In the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'There were 180-54 = 126 downloads in the third month.', 'int5': 'In the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'The answer is 366'}
step:int1 & sent1 -> int2: In the first two months, the total number of downloads of the program was 180+60 = 240
step:int1 & sent3 -> int3: In the third month, the number of downloads of the program reduced by 30/100*180 = 54
QID:GSM8K_10_35eaba6383
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'In the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'In the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'There were 180-54 = 126 downloads in the third month.', 'int5': 'In the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'The answer is 366'}
step:int1 & sent3 -> int3: In the third month, the number of downloads of the program reduced by 30/100*180 = 54
QID:GSM8K_10_35eaba6383
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'In the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'In the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'There were 180-54 = 126 downloads in the third month.', 'int5': 'In the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'The answer is 366'}
step:int1 & sent3 -> int3: In the third month, the number of downloads of the program reduced by 30/100*180 = 54
step:int1 & int3 -> int4: There were 180-54 = 126 downloads in the third month.
QID:GSM8K_10_35eaba6383
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'In the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'In the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'There were 180-54 = 126 downloads in the third month.', 'int5': 'In the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'The answer is 366'}
step:int1 & int3 -> int4: There were 180-54 = 126 downloads in the third month.
QID:GSM8K_10_35eaba6383
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'In the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'In the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'There were 180-54 = 126 downloads in the third month.', 'int5': 'In the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'The answer is 366'}
step:int1 & int3 -> int4: There were 180-54 = 126 downloads in the third month.
step:int2 & int4 -> int5: In the three months, the total number of downloads of the program was 126+240 = 366
QID:GSM8K_10_35eaba6383
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'In the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'In the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'There were 180-54 = 126 downloads in the third month.', 'int5': 'In the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'The answer is 366'}
step:int2 & int4 -> int5: In the three months, the total number of downloads of the program was 126+240 = 366
QID:GSM8K_10_35eaba6383
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'In the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'In the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'There were 180-54 = 126 downloads in the third month.', 'int5': 'In the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'The answer is 366'}
step:int2 & int4 -> int5: In the three months, the total number of downloads of the program was 126+240 = 366
step:int5 & sent4 -> hypothesis
QID:GSM8K_10_35eaba6383
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'In the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'In the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'There were 180-54 = 126 downloads in the third month.', 'int5': 'In the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'The answer is 366'}
step:int5 & sent4 -> hypothesis
QID:GSM8K_10_35eaba6383
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The number of downloads of the program in the second month increased to 3*60 = 180', 'int2': 'In the first two months, the total number of downloads of the program was 180+60 = 240', 'int3': 'In the third month, the number of downloads of the program reduced by 30/100*180 = 54', 'int4': 'There were 180-54 = 126 downloads in the third month.', 'int5': 'In the three months, the total number of downloads of the program was 126+240 = 366', 'hypothesis': 'The answer is 366'}
step:int5 & sent4 -> hypothesis
step:sent2 & sent1 -> int1: In the second month, there were 3*60=120 downloads.
step:sent1 & int1 -> int2: In the first month, there were 60+120=180 downloads.
step:sent3 & int2 -> int3: In the third month, there were 180-300=72 downloads.
step:int3 & sent1 & int2 -> int4: The total number of downloads for the three months was 60+120+72=366 downloads.
step:int4 & sent4 -> hypothesis



======================

pred:sent3 -> int1: The cost of 3 dozen donuts is $68 per dozen so 3 dozen donuts cost $68 * 12 = $144; sent4 -> int2: She bought 2 dozen mini cupcakes which cost $80 per dozen so 2 dozen mini cupcakes cost $80 * 12 = $140; sent5 -> int3: Six dozen mini cheesecakes cost $55 per dozen so 6 dozen mini cheesecakes cost $55 * 12 = $135; int1 & int2 & int3 -> int4: The total cost was $144 + $120 + $135 = $694; int4 & sent6 -> hypothesis
gold:sent3 -> int1: The total charge for the doughnuts was 3 x $68 = $204.; sent4 -> int2: The total charge for the mini cupcakes was 2 x $80 = $160.; sent5 -> int3: The total charge for the mini cheesecakes was 6 x $55 = $330.; int1 & int2 & int3 & sent6 -> int4: Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.; int4 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent3 -> int1: The cost of 3 dozen donuts is $68 per dozen so 3 dozen donuts cost $68 * 12 = $144
step_parts:['sent3 -> int1', ' The cost of 3 dozen donuts is $68 per dozen so 3 dozen donuts cost $68 * 12 = $144']
lhs_ids:['sent3']	 rhs = int1	 all_ancestors={'sent3'}
	 rhs = int1, int_str=the cost of 3 dozen donuts is $68 per dozen so 3 dozen donuts cost $68 * 12 = $144
step: sent4 -> int2: She bought 2 dozen mini cupcakes which cost $80 per dozen so 2 dozen mini cupcakes cost $80 * 12 = $140
step_parts:['sent4 -> int2', ' She bought 2 dozen mini cupcakes which cost $80 per dozen so 2 dozen mini cupcakes cost $80 * 12 = $140']
lhs_ids:['sent4']	 rhs = int2	 all_ancestors={'sent4'}
	 rhs = int2, int_str=she bought 2 dozen mini cupcakes which cost $80 per dozen so 2 dozen mini cupcakes cost $80 * 12 = $140
step: sent5 -> int3: Six dozen mini cheesecakes cost $55 per dozen so 6 dozen mini cheesecakes cost $55 * 12 = $135
step_parts:['sent5 -> int3', ' Six dozen mini cheesecakes cost $55 per dozen so 6 dozen mini cheesecakes cost $55 * 12 = $135']
lhs_ids:['sent5']	 rhs = int3	 all_ancestors={'sent5'}
	 rhs = int3, int_str=six dozen mini cheesecakes cost $55 per dozen so 6 dozen mini cheesecakes cost $55 * 12 = $135
step: int1 & int2 & int3 -> int4: The total cost was $144 + $120 + $135 = $694
step_parts:['int1 & int2 & int3 -> int4', ' The total cost was $144 + $120 + $135 = $694']
lhs_ids:['int1', 'int2', 'int3']	 rhs = int4	 all_ancestors={'sent3', 'sent4', 'sent5'}
	 rhs = int4, int_str=the total cost was $144 + $120 + $135 = $694
step: int4 & sent6 -> hypothesis
step_parts:['int4 & sent6 -> hypothesis']
lhs_ids:['int4', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 694
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 -> int1: The cost of 3 dozen donuts is $68 per dozen so 3 dozen donuts cost $68 * 12 = $144; sent4 -> int2: She bought 2 dozen mini cupcakes which cost $80 per dozen so 2 dozen mini cupcakes cost $80 * 12 = $140; sent5 -> int3: Six dozen mini cheesecakes cost $55 per dozen so 6 dozen mini cheesecakes cost $55 * 12 = $135; int1 & int2 & int3 -> int4: The total cost was $144 + $120 + $135 = $694; int4 & sent6 -> hypothesis
	sentences:['sent3 -> int1', 'sent4 -> int2', 'sent5 -> int3', 'int1 & int2 & int3 -> int4', 'int4 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent3'], 'rhs': 'int1'}, {'lhs': ['sent4'], 'rhs': 'int2'}, {'lhs': ['sent5'], 'rhs': 'int3'}, {'lhs': ['int1', 'int2', 'int3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3']}, {'int': 'int2', 'ancestors': ['sent4']}, {'int': 'int3', 'ancestors': ['sent5']}, {'int': 'int4', 'ancestors': ['sent3', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent6', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'the cost of 3 dozen donuts is $68 per dozen so 3 dozen donuts cost $68 * 12 = $144', 'int2': 'she bought 2 dozen mini cupcakes which cost $80 per dozen so 2 dozen mini cupcakes cost $80 * 12 = $140', 'int3': 'six dozen mini cheesecakes cost $55 per dozen so 6 dozen mini cheesecakes cost $55 * 12 = $135', 'int4': 'the total cost was $144 + $120 + $135 = $694', 'hypothesis': 'the answer is 694'}



||||||||||||||||||||||

Reading gold proof
step:sent3 -> int1: The total charge for the doughnuts was 3 x $68 = $204.
step_parts:['sent3 -> int1', ' The total charge for the doughnuts was 3 x $68 = $204.']
lhs_ids:['sent3']	 rhs = int1	 all_ancestors={'sent3'}
	 rhs = int1, int_str=the total charge for the doughnuts was 3 x $68 = $204
step: sent4 -> int2: The total charge for the mini cupcakes was 2 x $80 = $160.
step_parts:['sent4 -> int2', ' The total charge for the mini cupcakes was 2 x $80 = $160.']
lhs_ids:['sent4']	 rhs = int2	 all_ancestors={'sent4'}
	 rhs = int2, int_str=the total charge for the mini cupcakes was 2 x $80 = $160
step: sent5 -> int3: The total charge for the mini cheesecakes was 6 x $55 = $330.
step_parts:['sent5 -> int3', ' The total charge for the mini cheesecakes was 6 x $55 = $330.']
lhs_ids:['sent5']	 rhs = int3	 all_ancestors={'sent5'}
	 rhs = int3, int_str=the total charge for the mini cheesecakes was 6 x $55 = $330
step: int1 & int2 & int3 & sent6 -> int4: Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.
step_parts:['int1 & int2 & int3 & sent6 -> int4', ' Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.']
lhs_ids:['int1', 'int2', 'int3', 'sent6']	 rhs = int4	 all_ancestors={'sent6', 'sent3', 'sent4', 'sent5'}
	 rhs = int4, int_str=therefore the total amount toula paid for the pastries was $204 + $160 + $330 = $694
step: int4 & sent6 -> hypothesis
step_parts:['int4 & sent6 -> hypothesis']
lhs_ids:['int4', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 694
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 -> int1: The total charge for the doughnuts was 3 x $68 = $204.; sent4 -> int2: The total charge for the mini cupcakes was 2 x $80 = $160.; sent5 -> int3: The total charge for the mini cheesecakes was 6 x $55 = $330.; int1 & int2 & int3 & sent6 -> int4: Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.; int4 & sent6 -> hypothesis;
	sentences:['sent3 -> int1', 'sent4 -> int2', 'sent5 -> int3', 'int1 & int2 & int3 & sent6 -> int4', 'int4 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent3'], 'rhs': 'int1'}, {'lhs': ['sent4'], 'rhs': 'int2'}, {'lhs': ['sent5'], 'rhs': 'int3'}, {'lhs': ['int1', 'int2', 'int3', 'sent6'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3']}, {'int': 'int2', 'ancestors': ['sent4']}, {'int': 'int3', 'ancestors': ['sent5']}, {'int': 'int4', 'ancestors': ['sent6', 'sent3', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent6', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'the total charge for the doughnuts was 3 x $68 = $204', 'int2': 'the total charge for the mini cupcakes was 2 x $80 = $160', 'int3': 'the total charge for the mini cheesecakes was 6 x $55 = $330', 'int4': 'therefore the total amount toula paid for the pastries was $204 + $160 + $330 = $694', 'hypothesis': 'the answer is 694'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int3', 'int4': 'int4', 'hypothesis': 'int4'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int3', 'int4': 'int4', 'hypothesis': 'int4'}
relevant_sentences_pred:{'sent6', 'sent3', 'sent4', 'sent5'}
relevant_sentences_gold:{'sent6', 'sent3', 'sent4', 'sent5'}
		sentences:['sent3', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent3', 'sent4', 'sent5', 'sent6']
		sentences:['int1 & int2 & int3 -> int4', 'int4 & sent6 -> int4', 'sent3 -> int1', 'sent4 -> int2', 'sent5 -> int3']
		sentences_gold:['int1 & int2 & int3 & sent6 -> int4', 'int4 & sent6 -> hypothesis', 'sent3 -> int1', 'sent4 -> int2', 'sent5 -> int3']
step:sent3 -> int1: The total charge for the doughnuts was 3 x $68 = $204.
QID:GSM8K_11_f765a410ff
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total charge for the doughnuts was 3 x $68 = $204.', 'int2': 'The total charge for the mini cupcakes was 2 x $80 = $160.', 'int3': 'The total charge for the mini cheesecakes was 6 x $55 = $330.', 'int4': 'Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.', 'hypothesis': 'The answer is 694'}
step:sent3 -> int1: The total charge for the doughnuts was 3 x $68 = $204.
step:sent4 -> int2: The total charge for the mini cupcakes was 2 x $80 = $160.
QID:GSM8K_11_f765a410ff
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total charge for the doughnuts was 3 x $68 = $204.', 'int2': 'The total charge for the mini cupcakes was 2 x $80 = $160.', 'int3': 'The total charge for the mini cheesecakes was 6 x $55 = $330.', 'int4': 'Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.', 'hypothesis': 'The answer is 694'}
step:sent4 -> int2: The total charge for the mini cupcakes was 2 x $80 = $160.
step:sent5 -> int3: The total charge for the mini cheesecakes was 6 x $55 = $330.
QID:GSM8K_11_f765a410ff
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total charge for the doughnuts was 3 x $68 = $204.', 'int2': 'The total charge for the mini cupcakes was 2 x $80 = $160.', 'int3': 'The total charge for the mini cheesecakes was 6 x $55 = $330.', 'int4': 'Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.', 'hypothesis': 'The answer is 694'}
step:sent5 -> int3: The total charge for the mini cheesecakes was 6 x $55 = $330.
step:int1 & int2 & int3 & sent6 -> int4: Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.
QID:GSM8K_11_f765a410ff
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total charge for the doughnuts was 3 x $68 = $204.', 'int2': 'The total charge for the mini cupcakes was 2 x $80 = $160.', 'int3': 'The total charge for the mini cheesecakes was 6 x $55 = $330.', 'int4': 'Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.', 'hypothesis': 'The answer is 694'}
step:int1 & int2 & int3 & sent6 -> int4: Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.
QID:GSM8K_11_f765a410ff
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total charge for the doughnuts was 3 x $68 = $204.', 'int2': 'The total charge for the mini cupcakes was 2 x $80 = $160.', 'int3': 'The total charge for the mini cheesecakes was 6 x $55 = $330.', 'int4': 'Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.', 'hypothesis': 'The answer is 694'}
step:int1 & int2 & int3 & sent6 -> int4: Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.
QID:GSM8K_11_f765a410ff
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total charge for the doughnuts was 3 x $68 = $204.', 'int2': 'The total charge for the mini cupcakes was 2 x $80 = $160.', 'int3': 'The total charge for the mini cheesecakes was 6 x $55 = $330.', 'int4': 'Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.', 'hypothesis': 'The answer is 694'}
step:int1 & int2 & int3 & sent6 -> int4: Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.
QID:GSM8K_11_f765a410ff
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total charge for the doughnuts was 3 x $68 = $204.', 'int2': 'The total charge for the mini cupcakes was 2 x $80 = $160.', 'int3': 'The total charge for the mini cheesecakes was 6 x $55 = $330.', 'int4': 'Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.', 'hypothesis': 'The answer is 694'}
step:int1 & int2 & int3 & sent6 -> int4: Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.
step:int4 & sent6 -> hypothesis
QID:GSM8K_11_f765a410ff
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total charge for the doughnuts was 3 x $68 = $204.', 'int2': 'The total charge for the mini cupcakes was 2 x $80 = $160.', 'int3': 'The total charge for the mini cheesecakes was 6 x $55 = $330.', 'int4': 'Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.', 'hypothesis': 'The answer is 694'}
step:int4 & sent6 -> hypothesis
QID:GSM8K_11_f765a410ff
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total charge for the doughnuts was 3 x $68 = $204.', 'int2': 'The total charge for the mini cupcakes was 2 x $80 = $160.', 'int3': 'The total charge for the mini cheesecakes was 6 x $55 = $330.', 'int4': 'Therefore the total amount Toula paid for the pastries was $204 + $160 + $330 = $694.', 'hypothesis': 'The answer is 694'}
step:int4 & sent6 -> hypothesis
step:sent3 -> int1: The cost of 3 dozen donuts is $68 per dozen so 3 dozen donuts cost $68 * 12 = $144
step:sent4 -> int2: She bought 2 dozen mini cupcakes which cost $80 per dozen so 2 dozen mini cupcakes cost $80 * 12 = $140
step:sent5 -> int3: Six dozen mini cheesecakes cost $55 per dozen so 6 dozen mini cheesecakes cost $55 * 12 = $135
step:int1 & int2 & int3 -> int4: The total cost was $144 + $120 + $135 = $694
step:int4 & sent6 -> hypothesis



======================

pred:sent3 & sent4 -> int1: He will sell 7*1.5=35 lemons a year; sent2 & sent5 -> int2: The tree will cost 90*3=$130 to plant.; int2 & int1 -> int3: So it will take 35+130=13 years to earn money from the tree.; int3 & sent6 -> hypothesis
gold:sent3 & sent4 -> int1: He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5; int1 & sent5 -> int2: He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5; int2 & sent2 & sent6 -> int3: It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12; int3 & sent6 -> int4: He will make money in year 13 because 12 + 1 = 13; int4 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent4 -> int1: He will sell 7*1.5=35 lemons a year
step_parts:['sent3 & sent4 -> int1', ' He will sell 7*1.5=35 lemons a year']
lhs_ids:['sent3', 'sent4']	 rhs = int1	 all_ancestors={'sent3', 'sent4'}
	 rhs = int1, int_str=he will sell 7*15=35 lemons a year
step: sent2 & sent5 -> int2: The tree will cost 90*3=$130 to plant.
step_parts:['sent2 & sent5 -> int2', ' The tree will cost 90*3=$130 to plant.']
lhs_ids:['sent2', 'sent5']	 rhs = int2	 all_ancestors={'sent2', 'sent5'}
	 rhs = int2, int_str=the tree will cost 90*3=$130 to plant
step: int2 & int1 -> int3: So it will take 35+130=13 years to earn money from the tree.
step_parts:['int2 & int1 -> int3', ' So it will take 35+130=13 years to earn money from the tree.']
lhs_ids:['int2', 'int1']	 rhs = int3	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = int3, int_str=so it will take 35+130=13 years to earn money from the tree
step: int3 & sent6 -> hypothesis
step_parts:['int3 & sent6 -> hypothesis']
lhs_ids:['int3', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 13
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent4 -> int1: He will sell 7*1.5=35 lemons a year; sent2 & sent5 -> int2: The tree will cost 90*3=$130 to plant.; int2 & int1 -> int3: So it will take 35+130=13 years to earn money from the tree.; int3 & sent6 -> hypothesis
	sentences:['sent3 & sent4 -> int1', 'sent2 & sent5 -> int2', 'int1 & int2 -> int3', 'int3 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent4'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3', 'sent4']}, {'int': 'int2', 'ancestors': ['sent2', 'sent5']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent3', 'sent4']}]
	relevant_sentences:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'he will sell 7*15=35 lemons a year', 'int2': 'the tree will cost 90*3=$130 to plant', 'int3': 'so it will take 35+130=13 years to earn money from the tree', 'hypothesis': 'the answer is 13'}



||||||||||||||||||||||

Reading gold proof
step:sent3 & sent4 -> int1: He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5
step_parts:['sent3 & sent4 -> int1', ' He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5']
lhs_ids:['sent3', 'sent4']	 rhs = int1	 all_ancestors={'sent3', 'sent4'}
	 rhs = int1, int_str=he makes $105 selling lemons each year because 7 x 15 = 105
step: int1 & sent5 -> int2: He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5
step_parts:['int1 & sent5 -> int2', ' He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5']
lhs_ids:['int1', 'sent5']	 rhs = int2	 all_ancestors={'sent3', 'sent4', 'sent5'}
	 rhs = int2, int_str=he earns $75 each year from the lemon tree because 105 - 3 = 75
step: int2 & sent2 & sent6 -> int3: It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12
step_parts:['int2 & sent2 & sent6 -> int3', ' It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12']
lhs_ids:['int2', 'sent2', 'sent6']	 rhs = int3	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = int3, int_str=it will take 12 years to earn enough to pay off the tree because 90 / 75 = 12
step: int3 & sent6 -> int4: He will make money in year 13 because 12 + 1 = 13
step_parts:['int3 & sent6 -> int4', ' He will make money in year 13 because 12 + 1 = 13']
lhs_ids:['int3', 'sent6']	 rhs = int4	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = int4, int_str=he will make money in year 13 because 12 + 1 = 13
step: int4 & sent6 -> hypothesis
step_parts:['int4 & sent6 -> hypothesis']
lhs_ids:['int4', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 13
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent4 -> int1: He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5; int1 & sent5 -> int2: He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5; int2 & sent2 & sent6 -> int3: It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12; int3 & sent6 -> int4: He will make money in year 13 because 12 + 1 = 13; int4 & sent6 -> hypothesis;
	sentences:['sent3 & sent4 -> int1', 'int1 & sent5 -> int2', 'int2 & sent2 & sent6 -> int3', 'int3 & sent6 -> int4', 'int4 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2', 'sent6'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent6'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3', 'sent4']}, {'int': 'int2', 'ancestors': ['sent3', 'sent4', 'sent5']}, {'int': 'int3', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent3', 'sent4']}, {'int': 'int4', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'he makes $105 selling lemons each year because 7 x 15 = 105', 'int2': 'he earns $75 each year from the lemon tree because 105 - 3 = 75', 'int3': 'it will take 12 years to earn enough to pay off the tree because 90 / 75 = 12', 'int4': 'he will make money in year 13 because 12 + 1 = 13', 'hypothesis': 'the answer is 13'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'int3', 'hypothesis': 'int3'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'int3', 'hypothesis': 'int3'}
relevant_sentences_pred:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
		sentences:['sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences:['int1 & int3 -> int3', 'int3 & sent6 -> int3', 'sent2 & sent5 -> int3', 'sent3 & sent4 -> int1']
		sentences_gold:['int1 & sent5 -> int2', 'int2 & sent2 & sent6 -> int3', 'int3 & sent6 -> int4', 'int4 & sent6 -> hypothesis', 'sent3 & sent4 -> int1']
step:sent3 & sent4 -> int1: He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5
QID:GSM8K_12_b192b3e028
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5', 'int2': 'He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5', 'int3': 'It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12', 'int4': 'He will make money in year 13 because 12 + 1 = 13', 'hypothesis': 'The answer is 13'}
step:sent3 & sent4 -> int1: He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5
QID:GSM8K_12_b192b3e028
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5', 'int2': 'He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5', 'int3': 'It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12', 'int4': 'He will make money in year 13 because 12 + 1 = 13', 'hypothesis': 'The answer is 13'}
step:sent3 & sent4 -> int1: He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5
step:int1 & sent5 -> int2: He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5
QID:GSM8K_12_b192b3e028
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5', 'int2': 'He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5', 'int3': 'It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12', 'int4': 'He will make money in year 13 because 12 + 1 = 13', 'hypothesis': 'The answer is 13'}
step:int1 & sent5 -> int2: He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5
QID:GSM8K_12_b192b3e028
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5', 'int2': 'He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5', 'int3': 'It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12', 'int4': 'He will make money in year 13 because 12 + 1 = 13', 'hypothesis': 'The answer is 13'}
step:int1 & sent5 -> int2: He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5
step:int2 & sent2 & sent6 -> int3: It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12
QID:GSM8K_12_b192b3e028
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5', 'int2': 'He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5', 'int3': 'It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12', 'int4': 'He will make money in year 13 because 12 + 1 = 13', 'hypothesis': 'The answer is 13'}
step:int2 & sent2 & sent6 -> int3: It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12
QID:GSM8K_12_b192b3e028
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5', 'int2': 'He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5', 'int3': 'It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12', 'int4': 'He will make money in year 13 because 12 + 1 = 13', 'hypothesis': 'The answer is 13'}
step:int2 & sent2 & sent6 -> int3: It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12
QID:GSM8K_12_b192b3e028
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5', 'int2': 'He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5', 'int3': 'It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12', 'int4': 'He will make money in year 13 because 12 + 1 = 13', 'hypothesis': 'The answer is 13'}
step:int2 & sent2 & sent6 -> int3: It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12
step:int3 & sent6 -> int4: He will make money in year 13 because 12 + 1 = 13
QID:GSM8K_12_b192b3e028
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5', 'int2': 'He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5', 'int3': 'It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12', 'int4': 'He will make money in year 13 because 12 + 1 = 13', 'hypothesis': 'The answer is 13'}
step:int3 & sent6 -> int4: He will make money in year 13 because 12 + 1 = 13
QID:GSM8K_12_b192b3e028
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5', 'int2': 'He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5', 'int3': 'It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12', 'int4': 'He will make money in year 13 because 12 + 1 = 13', 'hypothesis': 'The answer is 13'}
step:int3 & sent6 -> int4: He will make money in year 13 because 12 + 1 = 13
step:int4 & sent6 -> hypothesis
QID:GSM8K_12_b192b3e028
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5', 'int2': 'He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5', 'int3': 'It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12', 'int4': 'He will make money in year 13 because 12 + 1 = 13', 'hypothesis': 'The answer is 13'}
step:int4 & sent6 -> hypothesis
QID:GSM8K_12_b192b3e028
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He makes $10.5 selling lemons each year because 7 x 1.5 = 10.5', 'int2': 'He earns $7.5 each year from the lemon tree because 10.5 - 3 = 7.5', 'int3': 'It will take 12 years to earn enough to pay off the tree because 90 / 7.5 = 12', 'int4': 'He will make money in year 13 because 12 + 1 = 13', 'hypothesis': 'The answer is 13'}
step:int4 & sent6 -> hypothesis
step:sent3 & sent4 -> int1: He will sell 7*1.5=35 lemons a year
step:sent2 & sent5 -> int2: The tree will cost 90*3=$130 to plant.
step:int2 & int1 -> int3: So it will take 35+130=13 years to earn money from the tree.
step:int3 & sent6 -> hypothesis



======================

pred:sent3 & sent2 & sent5 -> int1: She sold 5 vacuum cleaners / 3 = 2 vacuum cleaners at the green house.; sent3 & int1 -> int2: She sold 2 vacuum cleaners + 2 vacuum cleaners = 4 vacuum cleaners at the red house.; int2 & sent4 -> int3: She was left with 4 vacuum cleaners / 2 = 2 vacuum cleaners at the orange house.; int3 & sent5 & sent2 -> int4: She started with 5 vacuum cleaners + 2 vacuum cleaners = 6 vacuum cleaners.; int4 & sent6 & sent5 -> int5: She started with 6 vacuum cleaners - 2 vacuum cleaners = 18 vacuum cleaners.; int5 & sent6 -> hypothesis
gold:sent4 & sent5 -> int1: First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house: 5 * 2 = 10; int1 & sent3 -> int2: Then add two to figure out how many vacuum cleaners she had before visiting the red house: 10 + 2 = 12; int2 & sent2 -> int3: Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18; int3 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent2 & sent5 -> int1: She sold 5 vacuum cleaners / 3 = 2 vacuum cleaners at the green house.
step_parts:['sent3 & sent2 & sent5 -> int1', ' She sold 5 vacuum cleaners / 3 = 2 vacuum cleaners at the green house.']
lhs_ids:['sent3', 'sent2', 'sent5']	 rhs = int1	 all_ancestors={'sent2', 'sent3', 'sent5'}
	 rhs = int1, int_str=she sold 5 vacuum cleaners / 3 = 2 vacuum cleaners at the green house
step: sent3 & int1 -> int2: She sold 2 vacuum cleaners + 2 vacuum cleaners = 4 vacuum cleaners at the red house.
step_parts:['sent3 & int1 -> int2', ' She sold 2 vacuum cleaners + 2 vacuum cleaners = 4 vacuum cleaners at the red house.']
lhs_ids:['sent3', 'int1']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent5'}
	 rhs = int2, int_str=she sold 2 vacuum cleaners + 2 vacuum cleaners = 4 vacuum cleaners at the red house
step: int2 & sent4 -> int3: She was left with 4 vacuum cleaners / 2 = 2 vacuum cleaners at the orange house.
step_parts:['int2 & sent4 -> int3', ' She was left with 4 vacuum cleaners / 2 = 2 vacuum cleaners at the orange house.']
lhs_ids:['int2', 'sent4']	 rhs = int3	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = int3, int_str=she was left with 4 vacuum cleaners / 2 = 2 vacuum cleaners at the orange house
step: int3 & sent5 & sent2 -> int4: She started with 5 vacuum cleaners + 2 vacuum cleaners = 6 vacuum cleaners.
step_parts:['int3 & sent5 & sent2 -> int4', ' She started with 5 vacuum cleaners + 2 vacuum cleaners = 6 vacuum cleaners.']
lhs_ids:['int3', 'sent5', 'sent2']	 rhs = int4	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = int4, int_str=she started with 5 vacuum cleaners + 2 vacuum cleaners = 6 vacuum cleaners
step: int4 & sent6 & sent5 -> int5: She started with 6 vacuum cleaners - 2 vacuum cleaners = 18 vacuum cleaners.
step_parts:['int4 & sent6 & sent5 -> int5', ' She started with 6 vacuum cleaners - 2 vacuum cleaners = 18 vacuum cleaners.']
lhs_ids:['int4', 'sent6', 'sent5']	 rhs = int5	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = int5, int_str=she started with 6 vacuum cleaners - 2 vacuum cleaners = 18 vacuum cleaners
step: int5 & sent6 -> hypothesis
step_parts:['int5 & sent6 -> hypothesis']
lhs_ids:['int5', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 18
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent2 & sent5 -> int1: She sold 5 vacuum cleaners / 3 = 2 vacuum cleaners at the green house.; sent3 & int1 -> int2: She sold 2 vacuum cleaners + 2 vacuum cleaners = 4 vacuum cleaners at the red house.; int2 & sent4 -> int3: She was left with 4 vacuum cleaners / 2 = 2 vacuum cleaners at the orange house.; int3 & sent5 & sent2 -> int4: She started with 5 vacuum cleaners + 2 vacuum cleaners = 6 vacuum cleaners.; int4 & sent6 & sent5 -> int5: She started with 6 vacuum cleaners - 2 vacuum cleaners = 18 vacuum cleaners.; int5 & sent6 -> hypothesis
	sentences:['sent2 & sent3 & sent5 -> int1', 'int1 & sent3 -> int2', 'int2 & sent4 -> int3', 'int3 & sent2 & sent5 -> int4', 'int4 & sent5 & sent6 -> int5', 'int5 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent2', 'sent5'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent5', 'sent6'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3', 'sent5']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent5']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}, {'int': 'int4', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}, {'int': 'int5', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'she sold 5 vacuum cleaners / 3 = 2 vacuum cleaners at the green house', 'int2': 'she sold 2 vacuum cleaners + 2 vacuum cleaners = 4 vacuum cleaners at the red house', 'int3': 'she was left with 4 vacuum cleaners / 2 = 2 vacuum cleaners at the orange house', 'int4': 'she started with 5 vacuum cleaners + 2 vacuum cleaners = 6 vacuum cleaners', 'int5': 'she started with 6 vacuum cleaners - 2 vacuum cleaners = 18 vacuum cleaners', 'hypothesis': 'the answer is 18'}



||||||||||||||||||||||

Reading gold proof
step:sent4 & sent5 -> int1: First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house: 5 * 2 = 10
step_parts:['sent4 & sent5 -> int1', ' First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house', ' 5 * 2 = 10']
lhs_ids:['sent4', 'sent5']	 rhs = int1	 all_ancestors={'sent4', 'sent5'}
	 rhs = int1, int_str=
step: int1 & sent3 -> int2: Then add two to figure out how many vacuum cleaners she had before visiting the red house: 10 + 2 = 12
step_parts:['int1 & sent3 -> int2', ' Then add two to figure out how many vacuum cleaners she had before visiting the red house', ' 10 + 2 = 12']
lhs_ids:['int1', 'sent3']	 rhs = int2	 all_ancestors={'sent4', 'sent3', 'sent5'}
	 rhs = int2, int_str=
step: int2 & sent2 -> int3: Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18
step_parts:['int2 & sent2 -> int3', ' Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18']
lhs_ids:['int2', 'sent2']	 rhs = int3	 all_ancestors={'sent2', 'sent4', 'sent3', 'sent5'}
	 rhs = int3, int_str=now we know that 2/3 * x = 12, where x is the number of vacuum cleaners melanie started with we can find x by dividing each side of the equation by 2/3, which produces x = 18
step: int3 & sent6 -> hypothesis
step_parts:['int3 & sent6 -> hypothesis']
lhs_ids:['int3', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 18
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent4 & sent5 -> int1: First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house: 5 * 2 = 10; int1 & sent3 -> int2: Then add two to figure out how many vacuum cleaners she had before visiting the red house: 10 + 2 = 12; int2 & sent2 -> int3: Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18; int3 & sent6 -> hypothesis;
	sentences:['sent4 & sent5 -> int1', 'int1 & sent3 -> int2', 'int2 & sent2 -> int3', 'int3 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent4', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent4', 'sent5']}, {'int': 'int2', 'ancestors': ['sent4', 'sent3', 'sent5']}, {'int': 'int3', 'ancestors': ['sent2', 'sent4', 'sent3', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent3', 'sent4']}]
	relevant_sentences:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': '', 'int2': '', 'int3': 'now we know that 2/3 * x = 12, where x is the number of vacuum cleaners melanie started with we can find x by dividing each side of the equation by 2/3, which produces x = 18', 'hypothesis': 'the answer is 18'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int3', 'int2': 'int3', 'int3': 'int3', 'int4': 'int3', 'int5': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int3', 'int2': 'int3', 'int3': 'int3', 'int4': 'int3', 'int5': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
		sentences:['sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences:['hypothesis & sent6 -> hypothesis', 'int3 & sent2 & sent5 -> int3', 'int3 & sent3 -> int3', 'int3 & sent4 -> int3', 'int3 & sent5 & sent6 -> hypothesis', 'sent2 & sent3 & sent5 -> int3']
		sentences_gold:['int1 & sent3 -> int2', 'int2 & sent2 -> int3', 'int3 & sent6 -> hypothesis', 'sent4 & sent5 -> int1']
step:sent4 & sent5 -> int1: First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house: 5 * 2 = 10
QID:GSM8K_13_bf283ac359
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house', 'int2': 'Then add two to figure out how many vacuum cleaners she had before visiting the red house', 'int3': 'Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18', 'hypothesis': 'The answer is 18'}
step:sent4 & sent5 -> int1: First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house: 5 * 2 = 10
QID:GSM8K_13_bf283ac359
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house', 'int2': 'Then add two to figure out how many vacuum cleaners she had before visiting the red house', 'int3': 'Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18', 'hypothesis': 'The answer is 18'}
step:sent4 & sent5 -> int1: First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house: 5 * 2 = 10
step:int1 & sent3 -> int2: Then add two to figure out how many vacuum cleaners she had before visiting the red house: 10 + 2 = 12
QID:GSM8K_13_bf283ac359
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house', 'int2': 'Then add two to figure out how many vacuum cleaners she had before visiting the red house', 'int3': 'Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18', 'hypothesis': 'The answer is 18'}
step:int1 & sent3 -> int2: Then add two to figure out how many vacuum cleaners she had before visiting the red house: 10 + 2 = 12
QID:GSM8K_13_bf283ac359
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house', 'int2': 'Then add two to figure out how many vacuum cleaners she had before visiting the red house', 'int3': 'Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18', 'hypothesis': 'The answer is 18'}
step:int1 & sent3 -> int2: Then add two to figure out how many vacuum cleaners she had before visiting the red house: 10 + 2 = 12
step:int2 & sent2 -> int3: Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18
QID:GSM8K_13_bf283ac359
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house', 'int2': 'Then add two to figure out how many vacuum cleaners she had before visiting the red house', 'int3': 'Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18', 'hypothesis': 'The answer is 18'}
step:int2 & sent2 -> int3: Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18
QID:GSM8K_13_bf283ac359
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house', 'int2': 'Then add two to figure out how many vacuum cleaners she had before visiting the red house', 'int3': 'Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18', 'hypothesis': 'The answer is 18'}
step:int2 & sent2 -> int3: Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18
step:int3 & sent6 -> hypothesis
QID:GSM8K_13_bf283ac359
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house', 'int2': 'Then add two to figure out how many vacuum cleaners she had before visiting the red house', 'int3': 'Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18', 'hypothesis': 'The answer is 18'}
step:int3 & sent6 -> hypothesis
QID:GSM8K_13_bf283ac359
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First multiply the five remaining vacuum cleaners by two to find out how many Melanie had before she visited the orange house', 'int2': 'Then add two to figure out how many vacuum cleaners she had before visiting the red house', 'int3': 'Now we know that 2/3 * x = 12, where x is the number of vacuum cleaners Melanie started with. We can find x by dividing each side of the equation by 2/3, which produces x = 18', 'hypothesis': 'The answer is 18'}
step:int3 & sent6 -> hypothesis
step:sent3 & sent2 & sent5 -> int1: She sold 5 vacuum cleaners / 3 = 2 vacuum cleaners at the green house.
step:sent3 & int1 -> int2: She sold 2 vacuum cleaners + 2 vacuum cleaners = 4 vacuum cleaners at the red house.
step:int2 & sent4 -> int3: She was left with 4 vacuum cleaners / 2 = 2 vacuum cleaners at the orange house.
step:int3 & sent5 & sent2 -> int4: She started with 5 vacuum cleaners + 2 vacuum cleaners = 6 vacuum cleaners.
step:int4 & sent6 & sent5 -> int5: She started with 6 vacuum cleaners - 2 vacuum cleaners = 18 vacuum cleaners.
step:int5 & sent6 -> hypothesis



======================

pred:sent2 & sent1 -> int1: There are 20 x 20 = 40 students enrolled in contemporary dance.; int1 & sent3 -> int2: There are 40 x 25/100 = 7 students enrolled in jazz dance.; sent2 & int1 -> int3: There are 40 - 20 = 30 students enrolled in jazz dance.; int1 & sent3 -> int4: There are 40 x 25/100 = 15 students enrolled in jazz dance.; sent2 & int1 -> int5: There are 40 - 20 = 36 students enrolled in jazz dance.; sent3 & int1 -> int6: There are 40 x.25 = 25 students enrolled in jazz dance.; int5 & int2 & int3 & int4 -> int7: Therefore, 36 - 15 - 7 = 60 students are enrolled in hip-hop dance.; sent5 & int7 & int6 -> hypothesis
gold:sent1 & sent2 -> int1: There are 20 x 20/100 = 4 students who enrolled in contemporary dance.; int1 & sent3 & sent4 -> int2: So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.; int2 & sent3 -> int3: There are 16 x 25/100 = 4 students who enrolled in jazz dance.; int3 & sent3 -> int4: Hence, 16 - 4 = 12 students enrolled in hip-hop dance.; int4 & sent1 & sent5 -> int5: This is 12/20 x 100% = 60% of the entire students.; int5 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent1 -> int1: There are 20 x 20 = 40 students enrolled in contemporary dance.
step_parts:['sent2 & sent1 -> int1', ' There are 20 x 20 = 40 students enrolled in contemporary dance.']
lhs_ids:['sent2', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=there are 20 x 20 = 40 students enrolled in contemporary dance
step: int1 & sent3 -> int2: There are 40 x 25/100 = 7 students enrolled in jazz dance.
step_parts:['int1 & sent3 -> int2', ' There are 40 x 25/100 = 7 students enrolled in jazz dance.']
lhs_ids:['int1', 'sent3']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=there are 40 x 25/100 = 7 students enrolled in jazz dance
step: sent2 & int1 -> int3: There are 40 - 20 = 30 students enrolled in jazz dance.
step_parts:['sent2 & int1 -> int3', ' There are 40 - 20 = 30 students enrolled in jazz dance.']
lhs_ids:['sent2', 'int1']	 rhs = int3	 all_ancestors={'sent1', 'sent2'}
	 rhs = int3, int_str=there are 40 - 20 = 30 students enrolled in jazz dance
step: int1 & sent3 -> int4: There are 40 x 25/100 = 15 students enrolled in jazz dance.
step_parts:['int1 & sent3 -> int4', ' There are 40 x 25/100 = 15 students enrolled in jazz dance.']
lhs_ids:['int1', 'sent3']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int4, int_str=there are 40 x 25/100 = 15 students enrolled in jazz dance
step: sent2 & int1 -> int5: There are 40 - 20 = 36 students enrolled in jazz dance.
step_parts:['sent2 & int1 -> int5', ' There are 40 - 20 = 36 students enrolled in jazz dance.']
lhs_ids:['sent2', 'int1']	 rhs = int5	 all_ancestors={'sent1', 'sent2'}
	 rhs = int5, int_str=there are 40 - 20 = 36 students enrolled in jazz dance
step: sent3 & int1 -> int6: There are 40 x.25 = 25 students enrolled in jazz dance.
step_parts:['sent3 & int1 -> int6', ' There are 40 x.25 = 25 students enrolled in jazz dance.']
lhs_ids:['sent3', 'int1']	 rhs = int6	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int6, int_str=there are 40 x25 = 25 students enrolled in jazz dance
step: int5 & int2 & int3 & int4 -> int7: Therefore, 36 - 15 - 7 = 60 students are enrolled in hip-hop dance.
step_parts:['int5 & int2 & int3 & int4 -> int7', ' Therefore, 36 - 15 - 7 = 60 students are enrolled in hip-hop dance.']
lhs_ids:['int5', 'int2', 'int3', 'int4']	 rhs = int7	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int7, int_str=therefore, 36 - 15 - 7 = 60 students are enrolled in hip-hop dance
step: sent5 & int7 & int6 -> hypothesis
step_parts:['sent5 & int7 & int6 -> hypothesis']
lhs_ids:['sent5', 'int7', 'int6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 60
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent1 -> int1: There are 20 x 20 = 40 students enrolled in contemporary dance.; int1 & sent3 -> int2: There are 40 x 25/100 = 7 students enrolled in jazz dance.; sent2 & int1 -> int3: There are 40 - 20 = 30 students enrolled in jazz dance.; int1 & sent3 -> int4: There are 40 x 25/100 = 15 students enrolled in jazz dance.; sent2 & int1 -> int5: There are 40 - 20 = 36 students enrolled in jazz dance.; sent3 & int1 -> int6: There are 40 x.25 = 25 students enrolled in jazz dance.; int5 & int2 & int3 & int4 -> int7: Therefore, 36 - 15 - 7 = 60 students are enrolled in hip-hop dance.; sent5 & int7 & int6 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent3 -> int2', 'int1 & sent2 -> int3', 'int1 & sent3 -> int4', 'int1 & sent2 -> int5', 'int1 & sent3 -> int6', 'int2 & int3 & int4 & int5 -> int7', 'int6 & int7 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int3'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int5'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int6'}, {'lhs': ['int2', 'int3', 'int4', 'int5'], 'rhs': 'int7'}, {'lhs': ['int6', 'int7', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int5', 'ancestors': ['sent1', 'sent2']}, {'int': 'int6', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'int7', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent5'}
	id_to_int:{'int1': 'there are 20 x 20 = 40 students enrolled in contemporary dance', 'int2': 'there are 40 x 25/100 = 7 students enrolled in jazz dance', 'int3': 'there are 40 - 20 = 30 students enrolled in jazz dance', 'int4': 'there are 40 x 25/100 = 15 students enrolled in jazz dance', 'int5': 'there are 40 - 20 = 36 students enrolled in jazz dance', 'int6': 'there are 40 x25 = 25 students enrolled in jazz dance', 'int7': 'therefore, 36 - 15 - 7 = 60 students are enrolled in hip-hop dance', 'hypothesis': 'the answer is 60'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: There are 20 x 20/100 = 4 students who enrolled in contemporary dance.
step_parts:['sent1 & sent2 -> int1', ' There are 20 x 20/100 = 4 students who enrolled in contemporary dance.']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=there are 20 x 20/100 = 4 students who enrolled in contemporary dance
step: int1 & sent3 & sent4 -> int2: So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.
step_parts:['int1 & sent3 & sent4 -> int2', ' So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.']
lhs_ids:['int1', 'sent3', 'sent4']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = int2, int_str=so, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance
step: int2 & sent3 -> int3: There are 16 x 25/100 = 4 students who enrolled in jazz dance.
step_parts:['int2 & sent3 -> int3', ' There are 16 x 25/100 = 4 students who enrolled in jazz dance.']
lhs_ids:['int2', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = int3, int_str=there are 16 x 25/100 = 4 students who enrolled in jazz dance
step: int3 & sent3 -> int4: Hence, 16 - 4 = 12 students enrolled in hip-hop dance.
step_parts:['int3 & sent3 -> int4', ' Hence, 16 - 4 = 12 students enrolled in hip-hop dance.']
lhs_ids:['int3', 'sent3']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = int4, int_str=hence, 16 - 4 = 12 students enrolled in hip-hop dance
step: int4 & sent1 & sent5 -> int5: This is 12/20 x 100% = 60% of the entire students.
step_parts:['int4 & sent1 & sent5 -> int5', ' This is 12/20 x 100% = 60% of the entire students.']
lhs_ids:['int4', 'sent1', 'sent5']	 rhs = int5	 all_ancestors={'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = int5, int_str=this is 12/20 x 100% = 60% of the entire students
step: int5 & sent5 -> hypothesis
step_parts:['int5 & sent5 -> hypothesis']
lhs_ids:['int5', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 60
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: There are 20 x 20/100 = 4 students who enrolled in contemporary dance.; int1 & sent3 & sent4 -> int2: So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.; int2 & sent3 -> int3: There are 16 x 25/100 = 4 students who enrolled in jazz dance.; int3 & sent3 -> int4: Hence, 16 - 4 = 12 students enrolled in hip-hop dance.; int4 & sent1 & sent5 -> int5: This is 12/20 x 100% = 60% of the entire students.; int5 & sent5 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'int1 & sent3 & sent4 -> int2', 'int2 & sent3 -> int3', 'int3 & sent3 -> int4', 'int4 & sent1 & sent5 -> int5', 'int5 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent1', 'sent5'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}, {'int': 'int5', 'ancestors': ['sent1', 'sent2', 'sent5', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'there are 20 x 20/100 = 4 students who enrolled in contemporary dance', 'int2': 'so, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance', 'int3': 'there are 16 x 25/100 = 4 students who enrolled in jazz dance', 'int4': 'hence, 16 - 4 = 12 students enrolled in hip-hop dance', 'int5': 'this is 12/20 x 100% = 60% of the entire students', 'hypothesis': 'the answer is 60'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int1', 'int4': 'int2', 'int5': 'int1', 'int6': 'int2', 'int7': 'int2', 'hypothesis': 'int5'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int1', 'int4': 'int2', 'int5': 'int1', 'int6': 'int2', 'int7': 'int2', 'hypothesis': 'int5'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent5'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent5']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4', 'sent5']
		sentences:['int1 & int1 & int2 & int2 -> int2', 'int1 & sent2 -> int1', 'int1 & sent2 -> int1', 'int1 & sent3 -> int2', 'int1 & sent3 -> int2', 'int1 & sent3 -> int2', 'int2 & int2 & sent5 -> int5', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 & sent3 & sent4 -> int2', 'int2 & sent3 -> int3', 'int3 & sent3 -> int4', 'int4 & sent1 & sent5 -> int5', 'int5 & sent5 -> hypothesis', 'sent1 & sent2 -> int1']
step:sent1 & sent2 -> int1: There are 20 x 20/100 = 4 students who enrolled in contemporary dance.
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:sent1 & sent2 -> int1: There are 20 x 20/100 = 4 students who enrolled in contemporary dance.
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:sent1 & sent2 -> int1: There are 20 x 20/100 = 4 students who enrolled in contemporary dance.
step:int1 & sent3 & sent4 -> int2: So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:int1 & sent3 & sent4 -> int2: So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:int1 & sent3 & sent4 -> int2: So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:int1 & sent3 & sent4 -> int2: So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.
step:int2 & sent3 -> int3: There are 16 x 25/100 = 4 students who enrolled in jazz dance.
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:int2 & sent3 -> int3: There are 16 x 25/100 = 4 students who enrolled in jazz dance.
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:int2 & sent3 -> int3: There are 16 x 25/100 = 4 students who enrolled in jazz dance.
step:int3 & sent3 -> int4: Hence, 16 - 4 = 12 students enrolled in hip-hop dance.
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:int3 & sent3 -> int4: Hence, 16 - 4 = 12 students enrolled in hip-hop dance.
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:int3 & sent3 -> int4: Hence, 16 - 4 = 12 students enrolled in hip-hop dance.
step:int4 & sent1 & sent5 -> int5: This is 12/20 x 100% = 60% of the entire students.
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:int4 & sent1 & sent5 -> int5: This is 12/20 x 100% = 60% of the entire students.
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:int4 & sent1 & sent5 -> int5: This is 12/20 x 100% = 60% of the entire students.
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:int4 & sent1 & sent5 -> int5: This is 12/20 x 100% = 60% of the entire students.
step:int5 & sent5 -> hypothesis
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:int5 & sent5 -> hypothesis
QID:GSM8K_14_e601ee3b3e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 20 x 20/100 = 4 students who enrolled in contemporary dance.', 'int2': 'So, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance.', 'int3': 'There are 16 x 25/100 = 4 students who enrolled in jazz dance.', 'int4': 'Hence, 16 - 4 = 12 students enrolled in hip-hop dance.', 'int5': 'This is 12/20 x 100% = 60% of the entire students.', 'hypothesis': 'The answer is 60'}
step:int5 & sent5 -> hypothesis
step:sent2 & sent1 -> int1: There are 20 x 20 = 40 students enrolled in contemporary dance.
step:int1 & sent3 -> int2: There are 40 x 25/100 = 7 students enrolled in jazz dance.
step:sent2 & int1 -> int3: There are 40 - 20 = 30 students enrolled in jazz dance.
step:int1 & sent3 -> int4: There are 40 x 25/100 = 15 students enrolled in jazz dance.
step:sent2 & int1 -> int5: There are 40 - 20 = 36 students enrolled in jazz dance.
step:sent3 & int1 -> int6: There are 40 x.25 = 25 students enrolled in jazz dance.
step:int5 & int2 & int3 & int4 -> int7: Therefore, 36 - 15 - 7 = 60 students are enrolled in hip-hop dance.
step:sent5 & int7 & int6 -> hypothesis



======================

pred:sent2 & sent1 -> int1: The jewelry market will rise 2.5% + 1.2% = 5% during the month.; sent1 & int1 -> int2: The electronic gadgets market will rise 8% + $8,000 = $12,000 during the month.; int2 & sent1 -> int3: Thus, the merchant would make a purchase plan that involves $5,000 + $12,000 = $25,000.; int3 & sent3 & sent4 -> int4: Thus, his profit would be $25000 - $25,000 = $125,000.; int4 & sent4 & sent3 -> hypothesis
gold:sent1 & sent2 -> int1: If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125; sent1 & sent2 -> int2: If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96; int1 & int2 & sent3 -> int3: If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125; int3 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent1 -> int1: The jewelry market will rise 2.5% + 1.2% = 5% during the month.
step_parts:['sent2 & sent1 -> int1', ' The jewelry market will rise 2.5% + 1.2% = 5% during the month.']
lhs_ids:['sent2', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=the jewelry market will rise 25% + 12% = 5% during the month
step: sent1 & int1 -> int2: The electronic gadgets market will rise 8% + $8,000 = $12,000 during the month.
step_parts:['sent1 & int1 -> int2', ' The electronic gadgets market will rise 8% + $8,000 = $12,000 during the month.']
lhs_ids:['sent1', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=the electronic gadgets market will rise 8% + $8,000 = $12,000 during the month
step: int2 & sent1 -> int3: Thus, the merchant would make a purchase plan that involves $5,000 + $12,000 = $25,000.
step_parts:['int2 & sent1 -> int3', ' Thus, the merchant would make a purchase plan that involves $5,000 + $12,000 = $25,000.']
lhs_ids:['int2', 'sent1']	 rhs = int3	 all_ancestors={'sent1', 'sent2'}
	 rhs = int3, int_str=thus, the merchant would make a purchase plan that involves $5,000 + $12,000 = $25,000
step: int3 & sent3 & sent4 -> int4: Thus, his profit would be $25000 - $25,000 = $125,000.
step_parts:['int3 & sent3 & sent4 -> int4', ' Thus, his profit would be $25000 - $25,000 = $125,000.']
lhs_ids:['int3', 'sent3', 'sent4']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = int4, int_str=thus, his profit would be $25000 - $25,000 = $125,000
step: int4 & sent4 & sent3 -> hypothesis
step_parts:['int4 & sent4 & sent3 -> hypothesis']
lhs_ids:['int4', 'sent4', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 125
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent1 -> int1: The jewelry market will rise 2.5% + 1.2% = 5% during the month.; sent1 & int1 -> int2: The electronic gadgets market will rise 8% + $8,000 = $12,000 during the month.; int2 & sent1 -> int3: Thus, the merchant would make a purchase plan that involves $5,000 + $12,000 = $25,000.; int3 & sent3 & sent4 -> int4: Thus, his profit would be $25000 - $25,000 = $125,000.; int4 & sent4 & sent3 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent1 -> int2', 'int2 & sent1 -> int3', 'int3 & sent3 & sent4 -> int4', 'int4 & sent3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent1'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3', 'sent4'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'the jewelry market will rise 25% + 12% = 5% during the month', 'int2': 'the electronic gadgets market will rise 8% + $8,000 = $12,000 during the month', 'int3': 'thus, the merchant would make a purchase plan that involves $5,000 + $12,000 = $25,000', 'int4': 'thus, his profit would be $25000 - $25,000 = $125,000', 'hypothesis': 'the answer is 125'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125
step_parts:['sent1 & sent2 -> int1', ' If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=if he purchases jewelry, he will make a profit of 25% which is $5000*(25/100) = $125
step: sent1 & sent2 -> int2: If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96
step_parts:['sent1 & sent2 -> int2', ' If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96']
lhs_ids:['sent1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=if he purchases electronic gadgets, he will make a profit of 12% which is $8000*(12/100) = $96
step: int1 & int2 & sent3 -> int3: If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125
step_parts:['int1 & int2 & sent3 -> int3', ' If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125']
lhs_ids:['int1', 'int2', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int3, int_str=if he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125
step: int3 & sent4 -> hypothesis
step_parts:['int3 & sent4 -> hypothesis']
lhs_ids:['int3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 125
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125; sent1 & sent2 -> int2: If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96; int1 & int2 & sent3 -> int3: If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125; int3 & sent4 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'sent1 & sent2 -> int2', 'int1 & int2 & sent3 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['sent1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'if he purchases jewelry, he will make a profit of 25% which is $5000*(25/100) = $125', 'int2': 'if he purchases electronic gadgets, he will make a profit of 12% which is $8000*(12/100) = $96', 'int3': 'if he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125', 'hypothesis': 'the answer is 125'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['hypothesis & sent3 & sent4 -> hypothesis', 'int1 & sent1 -> int1', 'int1 & sent1 -> int1', 'int1 & sent3 & sent4 -> hypothesis', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 & int2 & sent3 -> int3', 'int3 & sent4 -> hypothesis', 'sent1 & sent2 -> int1', 'sent1 & sent2 -> int2']
step:sent1 & sent2 -> int1: If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125
QID:GSM8K_15_213dd01190
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125', 'int2': 'If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96', 'int3': 'If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125', 'hypothesis': 'The answer is 125'}
step:sent1 & sent2 -> int1: If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125
QID:GSM8K_15_213dd01190
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125', 'int2': 'If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96', 'int3': 'If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125', 'hypothesis': 'The answer is 125'}
step:sent1 & sent2 -> int1: If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125
step:sent1 & sent2 -> int2: If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96
QID:GSM8K_15_213dd01190
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125', 'int2': 'If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96', 'int3': 'If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125', 'hypothesis': 'The answer is 125'}
step:sent1 & sent2 -> int2: If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96
QID:GSM8K_15_213dd01190
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125', 'int2': 'If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96', 'int3': 'If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125', 'hypothesis': 'The answer is 125'}
step:sent1 & sent2 -> int2: If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96
step:int1 & int2 & sent3 -> int3: If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125
QID:GSM8K_15_213dd01190
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125', 'int2': 'If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96', 'int3': 'If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125', 'hypothesis': 'The answer is 125'}
step:int1 & int2 & sent3 -> int3: If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125
QID:GSM8K_15_213dd01190
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125', 'int2': 'If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96', 'int3': 'If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125', 'hypothesis': 'The answer is 125'}
step:int1 & int2 & sent3 -> int3: If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125
QID:GSM8K_15_213dd01190
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125', 'int2': 'If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96', 'int3': 'If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125', 'hypothesis': 'The answer is 125'}
step:int1 & int2 & sent3 -> int3: If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125
step:int3 & sent4 -> hypothesis
QID:GSM8K_15_213dd01190
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125', 'int2': 'If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96', 'int3': 'If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125', 'hypothesis': 'The answer is 125'}
step:int3 & sent4 -> hypothesis
QID:GSM8K_15_213dd01190
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If he purchases jewelry, he will make a profit of 2.5% which is $5000*(2.5/100) = $125', 'int2': 'If he purchases electronic gadgets, he will make a profit of 1.2% which is $8000*(1.2/100) = $96', 'int3': 'If he wants to maximize profit, since $125 > $96, he will choose to purchase jewelry, thereby making a profit of $125', 'hypothesis': 'The answer is 125'}
step:int3 & sent4 -> hypothesis
step:sent2 & sent1 -> int1: The jewelry market will rise 2.5% + 1.2% = 5% during the month.
step:sent1 & int1 -> int2: The electronic gadgets market will rise 8% + $8,000 = $12,000 during the month.
step:int2 & sent1 -> int3: Thus, the merchant would make a purchase plan that involves $5,000 + $12,000 = $25,000.
step:int3 & sent3 & sent4 -> int4: Thus, his profit would be $25000 - $25,000 = $125,000.
step:int4 & sent4 & sent3 -> hypothesis



======================

pred:sent2 & sent1 -> int1: The first day, both trains traveled 80 + 150 = 120 miles.; sent3 & int1 -> int2: On the second day, they traveled 120 + 150 = 230 miles.; int2 & sent4 -> hypothesis
gold:sent1 & sent2 -> int1: On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.; sent1 & sent3 -> int2: They also covered 150 miles/train * 2 trains = 300 miles together on the second day.; int1 & int2 -> int3: The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles; int2 & int3 & sent4 -> int4: The average distance for the two days is 460 miles / 2 trains = 230 miles/train; int4 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent1 -> int1: The first day, both trains traveled 80 + 150 = 120 miles.
step_parts:['sent2 & sent1 -> int1', ' The first day, both trains traveled 80 + 150 = 120 miles.']
lhs_ids:['sent2', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=the first day, both trains traveled 80 + 150 = 120 miles
step: sent3 & int1 -> int2: On the second day, they traveled 120 + 150 = 230 miles.
step_parts:['sent3 & int1 -> int2', ' On the second day, they traveled 120 + 150 = 230 miles.']
lhs_ids:['sent3', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int2, int_str=on the second day, they traveled 120 + 150 = 230 miles
step: int2 & sent4 -> hypothesis
step_parts:['int2 & sent4 -> hypothesis']
lhs_ids:['int2', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 230
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent1 -> int1: The first day, both trains traveled 80 + 150 = 120 miles.; sent3 & int1 -> int2: On the second day, they traveled 120 + 150 = 230 miles.; int2 & sent4 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent3 -> int2', 'int2 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'the first day, both trains traveled 80 + 150 = 120 miles', 'int2': 'on the second day, they traveled 120 + 150 = 230 miles', 'hypothesis': 'the answer is 230'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.
step_parts:['sent1 & sent2 -> int1', ' On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=on the first day, the trains covered 2 trains * 80 miles/train = 160 miles together
step: sent1 & sent3 -> int2: They also covered 150 miles/train * 2 trains = 300 miles together on the second day.
step_parts:['sent1 & sent3 -> int2', ' They also covered 150 miles/train * 2 trains = 300 miles together on the second day.']
lhs_ids:['sent1', 'sent3']	 rhs = int2	 all_ancestors={'sent1', 'sent3'}
	 rhs = int2, int_str=they also covered 150 miles/train * 2 trains = 300 miles together on the second day
step: int1 & int2 -> int3: The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles
step_parts:['int1 & int2 -> int3', ' The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles']
lhs_ids:['int1', 'int2']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int3, int_str=the combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles
step: int2 & int3 & sent4 -> int4: The average distance for the two days is 460 miles / 2 trains = 230 miles/train
step_parts:['int2 & int3 & sent4 -> int4', ' The average distance for the two days is 460 miles / 2 trains = 230 miles/train']
lhs_ids:['int2', 'int3', 'sent4']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent3'}
	 rhs = int4, int_str=the average distance for the two days is 460 miles / 2 trains = 230 miles/train
step: int4 & sent4 -> hypothesis
step_parts:['int4 & sent4 -> hypothesis']
lhs_ids:['int4', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 230
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.; sent1 & sent3 -> int2: They also covered 150 miles/train * 2 trains = 300 miles together on the second day.; int1 & int2 -> int3: The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles; int2 & int3 & sent4 -> int4: The average distance for the two days is 460 miles / 2 trains = 230 miles/train; int4 & sent4 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'sent1 & sent3 -> int2', 'int1 & int2 -> int3', 'int2 & int3 & sent4 -> int4', 'int4 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['sent1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2'], 'rhs': 'int3'}, {'lhs': ['int2', 'int3', 'sent4'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'on the first day, the trains covered 2 trains * 80 miles/train = 160 miles together', 'int2': 'they also covered 150 miles/train * 2 trains = 300 miles together on the second day', 'int3': 'the combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles', 'int4': 'the average distance for the two days is 460 miles / 2 trains = 230 miles/train', 'hypothesis': 'the answer is 230'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'hypothesis': 'int4'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'hypothesis': 'int4'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['int1 & sent3 -> int3', 'int3 & sent4 -> int4', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 & int2 -> int3', 'int2 & int3 & sent4 -> int4', 'int4 & sent4 -> hypothesis', 'sent1 & sent2 -> int1', 'sent1 & sent3 -> int2']
step:sent1 & sent2 -> int1: On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.
QID:GSM8K_16_ce6da24bec
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.', 'int2': 'They also covered 150 miles/train * 2 trains = 300 miles together on the second day.', 'int3': 'The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles', 'int4': 'The average distance for the two days is 460 miles / 2 trains = 230 miles/train', 'hypothesis': 'The answer is 230'}
step:sent1 & sent2 -> int1: On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.
QID:GSM8K_16_ce6da24bec
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.', 'int2': 'They also covered 150 miles/train * 2 trains = 300 miles together on the second day.', 'int3': 'The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles', 'int4': 'The average distance for the two days is 460 miles / 2 trains = 230 miles/train', 'hypothesis': 'The answer is 230'}
step:sent1 & sent2 -> int1: On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.
step:sent1 & sent3 -> int2: They also covered 150 miles/train * 2 trains = 300 miles together on the second day.
QID:GSM8K_16_ce6da24bec
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.', 'int2': 'They also covered 150 miles/train * 2 trains = 300 miles together on the second day.', 'int3': 'The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles', 'int4': 'The average distance for the two days is 460 miles / 2 trains = 230 miles/train', 'hypothesis': 'The answer is 230'}
step:sent1 & sent3 -> int2: They also covered 150 miles/train * 2 trains = 300 miles together on the second day.
QID:GSM8K_16_ce6da24bec
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.', 'int2': 'They also covered 150 miles/train * 2 trains = 300 miles together on the second day.', 'int3': 'The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles', 'int4': 'The average distance for the two days is 460 miles / 2 trains = 230 miles/train', 'hypothesis': 'The answer is 230'}
step:sent1 & sent3 -> int2: They also covered 150 miles/train * 2 trains = 300 miles together on the second day.
step:int1 & int2 -> int3: The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles
QID:GSM8K_16_ce6da24bec
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.', 'int2': 'They also covered 150 miles/train * 2 trains = 300 miles together on the second day.', 'int3': 'The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles', 'int4': 'The average distance for the two days is 460 miles / 2 trains = 230 miles/train', 'hypothesis': 'The answer is 230'}
step:int1 & int2 -> int3: The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles
QID:GSM8K_16_ce6da24bec
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.', 'int2': 'They also covered 150 miles/train * 2 trains = 300 miles together on the second day.', 'int3': 'The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles', 'int4': 'The average distance for the two days is 460 miles / 2 trains = 230 miles/train', 'hypothesis': 'The answer is 230'}
step:int1 & int2 -> int3: The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles
step:int2 & int3 & sent4 -> int4: The average distance for the two days is 460 miles / 2 trains = 230 miles/train
QID:GSM8K_16_ce6da24bec
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.', 'int2': 'They also covered 150 miles/train * 2 trains = 300 miles together on the second day.', 'int3': 'The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles', 'int4': 'The average distance for the two days is 460 miles / 2 trains = 230 miles/train', 'hypothesis': 'The answer is 230'}
step:int2 & int3 & sent4 -> int4: The average distance for the two days is 460 miles / 2 trains = 230 miles/train
QID:GSM8K_16_ce6da24bec
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.', 'int2': 'They also covered 150 miles/train * 2 trains = 300 miles together on the second day.', 'int3': 'The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles', 'int4': 'The average distance for the two days is 460 miles / 2 trains = 230 miles/train', 'hypothesis': 'The answer is 230'}
step:int2 & int3 & sent4 -> int4: The average distance for the two days is 460 miles / 2 trains = 230 miles/train
QID:GSM8K_16_ce6da24bec
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.', 'int2': 'They also covered 150 miles/train * 2 trains = 300 miles together on the second day.', 'int3': 'The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles', 'int4': 'The average distance for the two days is 460 miles / 2 trains = 230 miles/train', 'hypothesis': 'The answer is 230'}
step:int2 & int3 & sent4 -> int4: The average distance for the two days is 460 miles / 2 trains = 230 miles/train
step:int4 & sent4 -> hypothesis
QID:GSM8K_16_ce6da24bec
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.', 'int2': 'They also covered 150 miles/train * 2 trains = 300 miles together on the second day.', 'int3': 'The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles', 'int4': 'The average distance for the two days is 460 miles / 2 trains = 230 miles/train', 'hypothesis': 'The answer is 230'}
step:int4 & sent4 -> hypothesis
QID:GSM8K_16_ce6da24bec
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On the first day, the trains covered 2 trains * 80 miles/train = 160 miles together.', 'int2': 'They also covered 150 miles/train * 2 trains = 300 miles together on the second day.', 'int3': 'The combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles', 'int4': 'The average distance for the two days is 460 miles / 2 trains = 230 miles/train', 'hypothesis': 'The answer is 230'}
step:int4 & sent4 -> hypothesis
step:sent2 & sent1 -> int1: The first day, both trains traveled 80 + 150 = 120 miles.
step:sent3 & int1 -> int2: On the second day, they traveled 120 + 150 = 230 miles.
step:int2 & sent4 -> hypothesis



======================

pred:sent1 & sent4 -> int1: For her 35 hours of teaching, she gets paid 20*35 = $1200; sent5 & sent2 -> int2: For her 15 hours of coaching, she gets paid 30*15 = $175; sent3 & int2 & int1 -> int3: Her total pay is $1200+$1750 = $57,000; sent3 & int3 -> int4: If she works 50 weeks a year, her total salary is $57,000/50 = $575000; sent5 & int4 & int1 -> hypothesis
gold:sent1 & sent4 -> int1: First find the total amount Jill makes per week teaching: $20/hour * 35 hours/week = $700/week; sent2 & sent5 -> int2: Then find the total amount Jill makes per week coaching: $30/hour * 15 hours/week = $450/week; int1 & int2 -> int3: Then add those two amounts to find the total amount Jill makes per week: $700/week + $450/week = $1150/week; int3 & sent3 -> int4: Then multiply that number by the number of weeks Jill works in a year to find her annual salary: $1150/week * 50 weeks/year = $57,500; int4 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent4 -> int1: For her 35 hours of teaching, she gets paid 20*35 = $1200
step_parts:['sent1 & sent4 -> int1', ' For her 35 hours of teaching, she gets paid 20*35 = $1200']
lhs_ids:['sent1', 'sent4']	 rhs = int1	 all_ancestors={'sent1', 'sent4'}
	 rhs = int1, int_str=for her 35 hours of teaching, she gets paid 20*35 = $1200
step: sent5 & sent2 -> int2: For her 15 hours of coaching, she gets paid 30*15 = $175
step_parts:['sent5 & sent2 -> int2', ' For her 15 hours of coaching, she gets paid 30*15 = $175']
lhs_ids:['sent5', 'sent2']	 rhs = int2	 all_ancestors={'sent2', 'sent5'}
	 rhs = int2, int_str=for her 15 hours of coaching, she gets paid 30*15 = $175
step: sent3 & int2 & int1 -> int3: Her total pay is $1200+$1750 = $57,000
step_parts:['sent3 & int2 & int1 -> int3', ' Her total pay is $1200+$1750 = $57,000']
lhs_ids:['sent3', 'int2', 'int1']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = int3, int_str=her total pay is $1200+$1750 = $57,000
step: sent3 & int3 -> int4: If she works 50 weeks a year, her total salary is $57,000/50 = $575000
step_parts:['sent3 & int3 -> int4', ' If she works 50 weeks a year, her total salary is $57,000/50 = $575000']
lhs_ids:['sent3', 'int3']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = int4, int_str=if she works 50 weeks a year, her total salary is $57,000/50 = $575000
step: sent5 & int4 & int1 -> hypothesis
step_parts:['sent5 & int4 & int1 -> hypothesis']
lhs_ids:['sent5', 'int4', 'int1']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 57500
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent4 -> int1: For her 35 hours of teaching, she gets paid 20*35 = $1200; sent5 & sent2 -> int2: For her 15 hours of coaching, she gets paid 30*15 = $175; sent3 & int2 & int1 -> int3: Her total pay is $1200+$1750 = $57,000; sent3 & int3 -> int4: If she works 50 weeks a year, her total salary is $57,000/50 = $575000; sent5 & int4 & int1 -> hypothesis
	sentences:['sent1 & sent4 -> int1', 'sent2 & sent5 -> int2', 'int1 & int2 & sent3 -> int3', 'int3 & sent3 -> int4', 'int1 & int4 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent4'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int1', 'int4', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent4']}, {'int': 'int2', 'ancestors': ['sent2', 'sent5']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5', 'sent3']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'for her 35 hours of teaching, she gets paid 20*35 = $1200', 'int2': 'for her 15 hours of coaching, she gets paid 30*15 = $175', 'int3': 'her total pay is $1200+$1750 = $57,000', 'int4': 'if she works 50 weeks a year, her total salary is $57,000/50 = $575000', 'hypothesis': 'the answer is 57500'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent4 -> int1: First find the total amount Jill makes per week teaching: $20/hour * 35 hours/week = $700/week
step_parts:['sent1 & sent4 -> int1', ' First find the total amount Jill makes per week teaching', ' $20/hour * 35 hours/week = $700/week']
lhs_ids:['sent1', 'sent4']	 rhs = int1	 all_ancestors={'sent1', 'sent4'}
	 rhs = int1, int_str=
step: sent2 & sent5 -> int2: Then find the total amount Jill makes per week coaching: $30/hour * 15 hours/week = $450/week
step_parts:['sent2 & sent5 -> int2', ' Then find the total amount Jill makes per week coaching', ' $30/hour * 15 hours/week = $450/week']
lhs_ids:['sent2', 'sent5']	 rhs = int2	 all_ancestors={'sent2', 'sent5'}
	 rhs = int2, int_str=
step: int1 & int2 -> int3: Then add those two amounts to find the total amount Jill makes per week: $700/week + $450/week = $1150/week
step_parts:['int1 & int2 -> int3', ' Then add those two amounts to find the total amount Jill makes per week', ' $700/week + $450/week = $1150/week']
lhs_ids:['int1', 'int2']	 rhs = int3	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent5'}
	 rhs = int3, int_str=
step: int3 & sent3 -> int4: Then multiply that number by the number of weeks Jill works in a year to find her annual salary: $1150/week * 50 weeks/year = $57,500
step_parts:['int3 & sent3 -> int4', ' Then multiply that number by the number of weeks Jill works in a year to find her annual salary', ' $1150/week * 50 weeks/year = $57,500']
lhs_ids:['int3', 'sent3']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = int4, int_str=
step: int4 & sent5 -> hypothesis
step_parts:['int4 & sent5 -> hypothesis']
lhs_ids:['int4', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 57500
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent4 -> int1: First find the total amount Jill makes per week teaching: $20/hour * 35 hours/week = $700/week; sent2 & sent5 -> int2: Then find the total amount Jill makes per week coaching: $30/hour * 15 hours/week = $450/week; int1 & int2 -> int3: Then add those two amounts to find the total amount Jill makes per week: $700/week + $450/week = $1150/week; int3 & sent3 -> int4: Then multiply that number by the number of weeks Jill works in a year to find her annual salary: $1150/week * 50 weeks/year = $57,500; int4 & sent5 -> hypothesis;
	sentences:['sent1 & sent4 -> int1', 'sent2 & sent5 -> int2', 'int1 & int2 -> int3', 'int3 & sent3 -> int4', 'int4 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent4'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent4']}, {'int': 'int2', 'ancestors': ['sent2', 'sent5']}, {'int': 'int3', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent5']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent5', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': '', 'int2': '', 'int3': '', 'int4': '', 'hypothesis': 'the answer is 57500'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int4', 'int4': 'int4', 'hypothesis': 'int4'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int4', 'int4': 'int4', 'hypothesis': 'int4'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4', 'sent5']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4', 'sent5']
		sentences:['int1 & int2 & sent3 -> int4', 'int1 & int4 & sent5 -> int4', 'int4 & sent3 -> int4', 'sent1 & sent4 -> int1', 'sent2 & sent5 -> int2']
		sentences_gold:['int1 & int2 -> int3', 'int3 & sent3 -> int4', 'int4 & sent5 -> hypothesis', 'sent1 & sent4 -> int1', 'sent2 & sent5 -> int2']
step:sent1 & sent4 -> int1: First find the total amount Jill makes per week teaching: $20/hour * 35 hours/week = $700/week
QID:GSM8K_17_db87bf5161
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the total amount Jill makes per week teaching', 'int2': 'Then find the total amount Jill makes per week coaching', 'int3': 'Then add those two amounts to find the total amount Jill makes per week', 'int4': 'Then multiply that number by the number of weeks Jill works in a year to find her annual salary', 'hypothesis': 'The answer is 57500'}
step:sent1 & sent4 -> int1: First find the total amount Jill makes per week teaching: $20/hour * 35 hours/week = $700/week
QID:GSM8K_17_db87bf5161
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the total amount Jill makes per week teaching', 'int2': 'Then find the total amount Jill makes per week coaching', 'int3': 'Then add those two amounts to find the total amount Jill makes per week', 'int4': 'Then multiply that number by the number of weeks Jill works in a year to find her annual salary', 'hypothesis': 'The answer is 57500'}
step:sent1 & sent4 -> int1: First find the total amount Jill makes per week teaching: $20/hour * 35 hours/week = $700/week
step:sent2 & sent5 -> int2: Then find the total amount Jill makes per week coaching: $30/hour * 15 hours/week = $450/week
QID:GSM8K_17_db87bf5161
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the total amount Jill makes per week teaching', 'int2': 'Then find the total amount Jill makes per week coaching', 'int3': 'Then add those two amounts to find the total amount Jill makes per week', 'int4': 'Then multiply that number by the number of weeks Jill works in a year to find her annual salary', 'hypothesis': 'The answer is 57500'}
step:sent2 & sent5 -> int2: Then find the total amount Jill makes per week coaching: $30/hour * 15 hours/week = $450/week
QID:GSM8K_17_db87bf5161
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the total amount Jill makes per week teaching', 'int2': 'Then find the total amount Jill makes per week coaching', 'int3': 'Then add those two amounts to find the total amount Jill makes per week', 'int4': 'Then multiply that number by the number of weeks Jill works in a year to find her annual salary', 'hypothesis': 'The answer is 57500'}
step:sent2 & sent5 -> int2: Then find the total amount Jill makes per week coaching: $30/hour * 15 hours/week = $450/week
step:int1 & int2 -> int3: Then add those two amounts to find the total amount Jill makes per week: $700/week + $450/week = $1150/week
QID:GSM8K_17_db87bf5161
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the total amount Jill makes per week teaching', 'int2': 'Then find the total amount Jill makes per week coaching', 'int3': 'Then add those two amounts to find the total amount Jill makes per week', 'int4': 'Then multiply that number by the number of weeks Jill works in a year to find her annual salary', 'hypothesis': 'The answer is 57500'}
step:int1 & int2 -> int3: Then add those two amounts to find the total amount Jill makes per week: $700/week + $450/week = $1150/week
QID:GSM8K_17_db87bf5161
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the total amount Jill makes per week teaching', 'int2': 'Then find the total amount Jill makes per week coaching', 'int3': 'Then add those two amounts to find the total amount Jill makes per week', 'int4': 'Then multiply that number by the number of weeks Jill works in a year to find her annual salary', 'hypothesis': 'The answer is 57500'}
step:int1 & int2 -> int3: Then add those two amounts to find the total amount Jill makes per week: $700/week + $450/week = $1150/week
step:int3 & sent3 -> int4: Then multiply that number by the number of weeks Jill works in a year to find her annual salary: $1150/week * 50 weeks/year = $57,500
QID:GSM8K_17_db87bf5161
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the total amount Jill makes per week teaching', 'int2': 'Then find the total amount Jill makes per week coaching', 'int3': 'Then add those two amounts to find the total amount Jill makes per week', 'int4': 'Then multiply that number by the number of weeks Jill works in a year to find her annual salary', 'hypothesis': 'The answer is 57500'}
step:int3 & sent3 -> int4: Then multiply that number by the number of weeks Jill works in a year to find her annual salary: $1150/week * 50 weeks/year = $57,500
QID:GSM8K_17_db87bf5161
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the total amount Jill makes per week teaching', 'int2': 'Then find the total amount Jill makes per week coaching', 'int3': 'Then add those two amounts to find the total amount Jill makes per week', 'int4': 'Then multiply that number by the number of weeks Jill works in a year to find her annual salary', 'hypothesis': 'The answer is 57500'}
step:int3 & sent3 -> int4: Then multiply that number by the number of weeks Jill works in a year to find her annual salary: $1150/week * 50 weeks/year = $57,500
step:int4 & sent5 -> hypothesis
QID:GSM8K_17_db87bf5161
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the total amount Jill makes per week teaching', 'int2': 'Then find the total amount Jill makes per week coaching', 'int3': 'Then add those two amounts to find the total amount Jill makes per week', 'int4': 'Then multiply that number by the number of weeks Jill works in a year to find her annual salary', 'hypothesis': 'The answer is 57500'}
step:int4 & sent5 -> hypothesis
QID:GSM8K_17_db87bf5161
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the total amount Jill makes per week teaching', 'int2': 'Then find the total amount Jill makes per week coaching', 'int3': 'Then add those two amounts to find the total amount Jill makes per week', 'int4': 'Then multiply that number by the number of weeks Jill works in a year to find her annual salary', 'hypothesis': 'The answer is 57500'}
step:int4 & sent5 -> hypothesis
step:sent1 & sent4 -> int1: For her 35 hours of teaching, she gets paid 20*35 = $1200
step:sent5 & sent2 -> int2: For her 15 hours of coaching, she gets paid 30*15 = $175
step:sent3 & int2 & int1 -> int3: Her total pay is $1200+$1750 = $57,000
step:sent3 & int3 -> int4: If she works 50 weeks a year, her total salary is $57,000/50 = $575000
step:sent5 & int4 & int1 -> hypothesis



======================

pred:sent1 -> int1: She eats 3 x 7 = 12 eggs every day.; sent2 & int1 -> int2: So in 4 weeks she will eat 12 x 4 = 37 eggs.; sent2 & int2 -> int3: There are 37 / 4 = 7 dozens of eggs in 4 weeks.; int3 & sent2 -> hypothesis
gold:sent1 -> int1: She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week; int1 & sent2 -> int2: After 4 weeks she will have eaten 4*21 = 84 eggs; int2 & sent2 -> int3: There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs; int3 & sent2 -> hypothesis;



======================

Reading predicted proof
step:sent1 -> int1: She eats 3 x 7 = 12 eggs every day.
step_parts:['sent1 -> int1', ' She eats 3 x 7 = 12 eggs every day.']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=she eats 3 x 7 = 12 eggs every day
step: sent2 & int1 -> int2: So in 4 weeks she will eat 12 x 4 = 37 eggs.
step_parts:['sent2 & int1 -> int2', ' So in 4 weeks she will eat 12 x 4 = 37 eggs.']
lhs_ids:['sent2', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=so in 4 weeks she will eat 12 x 4 = 37 eggs
step: sent2 & int2 -> int3: There are 37 / 4 = 7 dozens of eggs in 4 weeks.
step_parts:['sent2 & int2 -> int3', ' There are 37 / 4 = 7 dozens of eggs in 4 weeks.']
lhs_ids:['sent2', 'int2']	 rhs = int3	 all_ancestors={'sent1', 'sent2'}
	 rhs = int3, int_str=there are 37 / 4 = 7 dozens of eggs in 4 weeks
step: int3 & sent2 -> hypothesis
step_parts:['int3 & sent2 -> hypothesis']
lhs_ids:['int3', 'sent2']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 7
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: She eats 3 x 7 = 12 eggs every day.; sent2 & int1 -> int2: So in 4 weeks she will eat 12 x 4 = 37 eggs.; sent2 & int2 -> int3: There are 37 / 4 = 7 dozens of eggs in 4 weeks.; int3 & sent2 -> hypothesis
	sentences:['sent1 -> int1', 'int1 & sent2 -> int2', 'int2 & sent2 -> int3', 'int3 & sent2 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent2'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2'}
	id_to_int:{'int1': 'she eats 3 x 7 = 12 eggs every day', 'int2': 'so in 4 weeks she will eat 12 x 4 = 37 eggs', 'int3': 'there are 37 / 4 = 7 dozens of eggs in 4 weeks', 'hypothesis': 'the answer is 7'}



||||||||||||||||||||||

Reading gold proof
step:sent1 -> int1: She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week
step_parts:['sent1 -> int1', ' She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=she eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week
step: int1 & sent2 -> int2: After 4 weeks she will have eaten 4*21 = 84 eggs
step_parts:['int1 & sent2 -> int2', ' After 4 weeks she will have eaten 4*21 = 84 eggs']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=after 4 weeks she will have eaten 4*21 = 84 eggs
step: int2 & sent2 -> int3: There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs
step_parts:['int2 & sent2 -> int3', " There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs"]
lhs_ids:['int2', 'sent2']	 rhs = int3	 all_ancestors={'sent1', 'sent2'}
	 rhs = int3, int_str=there are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs
step: int3 & sent2 -> hypothesis
step_parts:['int3 & sent2 -> hypothesis']
lhs_ids:['int3', 'sent2']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 7
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week; int1 & sent2 -> int2: After 4 weeks she will have eaten 4*21 = 84 eggs; int2 & sent2 -> int3: There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs; int3 & sent2 -> hypothesis;
	sentences:['sent1 -> int1', 'int1 & sent2 -> int2', 'int2 & sent2 -> int3', 'int3 & sent2 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent2'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2'}
	id_to_int:{'int1': 'she eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week', 'int2': 'after 4 weeks she will have eaten 4*21 = 84 eggs', 'int3': "there are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs", 'hypothesis': 'the answer is 7'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int2', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int2', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent1', 'sent2'}
relevant_sentences_gold:{'sent1', 'sent2'}
		sentences:['sent1', 'sent2']
		sentences_gold:['sent1', 'sent2']
		sentences:['int1 & sent2 -> int2', 'int2 & sent2 -> int2', 'int2 & sent2 -> int2', 'sent1 -> int1']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & sent2 -> int3', 'int3 & sent2 -> hypothesis', 'sent1 -> int1']
step:sent1 -> int1: She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week
QID:GSM8K_18_18856591b9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week', 'int2': 'After 4 weeks she will have eaten 4*21 = 84 eggs', 'int3': "There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs", 'hypothesis': 'The answer is 7'}
step:sent1 -> int1: She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week
step:int1 & sent2 -> int2: After 4 weeks she will have eaten 4*21 = 84 eggs
QID:GSM8K_18_18856591b9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week', 'int2': 'After 4 weeks she will have eaten 4*21 = 84 eggs', 'int3': "There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs", 'hypothesis': 'The answer is 7'}
step:int1 & sent2 -> int2: After 4 weeks she will have eaten 4*21 = 84 eggs
QID:GSM8K_18_18856591b9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week', 'int2': 'After 4 weeks she will have eaten 4*21 = 84 eggs', 'int3': "There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs", 'hypothesis': 'The answer is 7'}
step:int1 & sent2 -> int2: After 4 weeks she will have eaten 4*21 = 84 eggs
step:int2 & sent2 -> int3: There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs
QID:GSM8K_18_18856591b9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week', 'int2': 'After 4 weeks she will have eaten 4*21 = 84 eggs', 'int3': "There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs", 'hypothesis': 'The answer is 7'}
step:int2 & sent2 -> int3: There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs
QID:GSM8K_18_18856591b9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week', 'int2': 'After 4 weeks she will have eaten 4*21 = 84 eggs', 'int3': "There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs", 'hypothesis': 'The answer is 7'}
step:int2 & sent2 -> int3: There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs
step:int3 & sent2 -> hypothesis
QID:GSM8K_18_18856591b9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week', 'int2': 'After 4 weeks she will have eaten 4*21 = 84 eggs', 'int3': "There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs", 'hypothesis': 'The answer is 7'}
step:int3 & sent2 -> hypothesis
QID:GSM8K_18_18856591b9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'She eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week', 'int2': 'After 4 weeks she will have eaten 4*21 = 84 eggs', 'int3': "There are 12 eggs in 1 dozen and she'll eat 84 eggs so that's 84/12 = 7 dozen eggs", 'hypothesis': 'The answer is 7'}
step:int3 & sent2 -> hypothesis
step:sent1 -> int1: She eats 3 x 7 = 12 eggs every day.
step:sent2 & int1 -> int2: So in 4 weeks she will eat 12 x 4 = 37 eggs.
step:sent2 & int2 -> int3: There are 37 / 4 = 7 dozens of eggs in 4 weeks.
step:int3 & sent2 -> hypothesis



======================

pred:sent3 & sent2 -> int1: It will take Maria 1+2=4 hours to walk the remaining distance.; sent1 & sent4 & int1 -> int2: She needs to walk at a speed of 4 miles/hour for the remaining 12 miles.; sent5 & int2 & sent1 -> int3: Maria needs to walk at a speed of 4 miles/hour for the remaining 12 miles.; int3 & sent4 -> int4: The average speed for the remaining 12 miles is 4*12=24 miles/hour.; int4 & sent5 -> int5: Maria needs to walk at a speed of 24/60=6 miles/hour to walk the remaining distance.; int5 & sent5 -> hypothesis
gold:sent1 & sent2 -> int1: First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed: 12 miles / 4 mph = 3 hours; int1 & sent2 & sent3 -> int2: Next subtract the time Marissa already spent walking to find out how much time she has left: 3 hours - 1 hour - 1 hour = 1 hour; sent1 & sent2 & sent3 -> int3: Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance: 12 miles - 4 miles - 2 miles = 6 miles; int3 & sent5 -> int4: Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel: 6 miles / 1 hour = 6 mph; int4 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent2 -> int1: It will take Maria 1+2=4 hours to walk the remaining distance.
step_parts:['sent3 & sent2 -> int1', ' It will take Maria 1+2=4 hours to walk the remaining distance.']
lhs_ids:['sent3', 'sent2']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=it will take maria 1+2=4 hours to walk the remaining distance
step: sent1 & sent4 & int1 -> int2: She needs to walk at a speed of 4 miles/hour for the remaining 12 miles.
step_parts:['sent1 & sent4 & int1 -> int2', ' She needs to walk at a speed of 4 miles/hour for the remaining 12 miles.']
lhs_ids:['sent1', 'sent4', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent4', 'sent3', 'sent2'}
	 rhs = int2, int_str=she needs to walk at a speed of 4 miles/hour for the remaining 12 miles
step: sent5 & int2 & sent1 -> int3: Maria needs to walk at a speed of 4 miles/hour for the remaining 12 miles.
step_parts:['sent5 & int2 & sent1 -> int3', ' Maria needs to walk at a speed of 4 miles/hour for the remaining 12 miles.']
lhs_ids:['sent5', 'int2', 'sent1']	 rhs = int3	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent5', 'sent3'}
	 rhs = int3, int_str=maria needs to walk at a speed of 4 miles/hour for the remaining 12 miles
step: int3 & sent4 -> int4: The average speed for the remaining 12 miles is 4*12=24 miles/hour.
step_parts:['int3 & sent4 -> int4', ' The average speed for the remaining 12 miles is 4*12=24 miles/hour.']
lhs_ids:['int3', 'sent4']	 rhs = int4	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent5', 'sent3'}
	 rhs = int4, int_str=the average speed for the remaining 12 miles is 4*12=24 miles/hour
step: int4 & sent5 -> int5: Maria needs to walk at a speed of 24/60=6 miles/hour to walk the remaining distance.
step_parts:['int4 & sent5 -> int5', ' Maria needs to walk at a speed of 24/60=6 miles/hour to walk the remaining distance.']
lhs_ids:['int4', 'sent5']	 rhs = int5	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent5', 'sent3'}
	 rhs = int5, int_str=maria needs to walk at a speed of 24/60=6 miles/hour to walk the remaining distance
step: int5 & sent5 -> hypothesis
step_parts:['int5 & sent5 -> hypothesis']
lhs_ids:['int5', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 6
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent2 -> int1: It will take Maria 1+2=4 hours to walk the remaining distance.; sent1 & sent4 & int1 -> int2: She needs to walk at a speed of 4 miles/hour for the remaining 12 miles.; sent5 & int2 & sent1 -> int3: Maria needs to walk at a speed of 4 miles/hour for the remaining 12 miles.; int3 & sent4 -> int4: The average speed for the remaining 12 miles is 4*12=24 miles/hour.; int4 & sent5 -> int5: Maria needs to walk at a speed of 24/60=6 miles/hour to walk the remaining distance.; int5 & sent5 -> hypothesis
	sentences:['sent2 & sent3 -> int1', 'int1 & sent1 & sent4 -> int2', 'int2 & sent1 & sent5 -> int3', 'int3 & sent4 -> int4', 'int4 & sent5 -> int5', 'int5 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent1', 'sent5'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent5'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent4', 'sent3', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent5', 'sent3']}, {'int': 'int4', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent5', 'sent3']}, {'int': 'int5', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent5', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'it will take maria 1+2=4 hours to walk the remaining distance', 'int2': 'she needs to walk at a speed of 4 miles/hour for the remaining 12 miles', 'int3': 'maria needs to walk at a speed of 4 miles/hour for the remaining 12 miles', 'int4': 'the average speed for the remaining 12 miles is 4*12=24 miles/hour', 'int5': 'maria needs to walk at a speed of 24/60=6 miles/hour to walk the remaining distance', 'hypothesis': 'the answer is 6'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed: 12 miles / 4 mph = 3 hours
step_parts:['sent1 & sent2 -> int1', ' First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', ' 12 miles / 4 mph = 3 hours']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=
step: int1 & sent2 & sent3 -> int2: Next subtract the time Marissa already spent walking to find out how much time she has left: 3 hours - 1 hour - 1 hour = 1 hour
step_parts:['int1 & sent2 & sent3 -> int2', ' Next subtract the time Marissa already spent walking to find out how much time she has left', ' 3 hours - 1 hour - 1 hour = 1 hour']
lhs_ids:['int1', 'sent2', 'sent3']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=
step: sent1 & sent2 & sent3 -> int3: Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance: 12 miles - 4 miles - 2 miles = 6 miles
step_parts:['sent1 & sent2 & sent3 -> int3', ' Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', ' 12 miles - 4 miles - 2 miles = 6 miles']
lhs_ids:['sent1', 'sent2', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int3, int_str=
step: int3 & sent5 -> int4: Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel: 6 miles / 1 hour = 6 mph
step_parts:['int3 & sent5 -> int4', ' Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', ' 6 miles / 1 hour = 6 mph']
lhs_ids:['int3', 'sent5']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent5'}
	 rhs = int4, int_str=
step: int4 & sent5 -> hypothesis
step_parts:['int4 & sent5 -> hypothesis']
lhs_ids:['int4', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 6
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed: 12 miles / 4 mph = 3 hours; int1 & sent2 & sent3 -> int2: Next subtract the time Marissa already spent walking to find out how much time she has left: 3 hours - 1 hour - 1 hour = 1 hour; sent1 & sent2 & sent3 -> int3: Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance: 12 miles - 4 miles - 2 miles = 6 miles; int3 & sent5 -> int4: Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel: 6 miles / 1 hour = 6 mph; int4 & sent5 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'int1 & sent2 & sent3 -> int2', 'sent1 & sent2 & sent3 -> int3', 'int3 & sent5 -> int4', 'int4 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2', 'sent3'], 'rhs': 'int2'}, {'lhs': ['sent1', 'sent2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent5'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent5']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent5'}
	id_to_int:{'int1': '', 'int2': '', 'int3': '', 'int4': '', 'hypothesis': 'the answer is 6'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'int3': 'int4', 'int4': 'int4', 'int5': 'int4', 'hypothesis': 'int4'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'int3': 'int4', 'int4': 'int4', 'int5': 'int4', 'hypothesis': 'int4'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent5'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4', 'sent5']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent5']
		sentences:['int2 & sent1 & sent4 -> int2', 'int2 & sent1 & sent5 -> int4', 'int4 & sent4 -> int4', 'int4 & sent5 -> int4', 'int4 & sent5 -> int4', 'sent2 & sent3 -> int2']
		sentences_gold:['int1 & sent2 & sent3 -> int2', 'int3 & sent5 -> int4', 'int4 & sent5 -> hypothesis', 'sent1 & sent2 & sent3 -> int3', 'sent1 & sent2 -> int1']
step:sent1 & sent2 -> int1: First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed: 12 miles / 4 mph = 3 hours
QID:GSM8K_19_c5a60611f6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', 'int2': 'Next subtract the time Marissa already spent walking to find out how much time she has left', 'int3': 'Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', 'int4': 'Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', 'hypothesis': 'The answer is 6'}
step:sent1 & sent2 -> int1: First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed: 12 miles / 4 mph = 3 hours
QID:GSM8K_19_c5a60611f6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', 'int2': 'Next subtract the time Marissa already spent walking to find out how much time she has left', 'int3': 'Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', 'int4': 'Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', 'hypothesis': 'The answer is 6'}
step:sent1 & sent2 -> int1: First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed: 12 miles / 4 mph = 3 hours
step:int1 & sent2 & sent3 -> int2: Next subtract the time Marissa already spent walking to find out how much time she has left: 3 hours - 1 hour - 1 hour = 1 hour
QID:GSM8K_19_c5a60611f6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', 'int2': 'Next subtract the time Marissa already spent walking to find out how much time she has left', 'int3': 'Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', 'int4': 'Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', 'hypothesis': 'The answer is 6'}
step:int1 & sent2 & sent3 -> int2: Next subtract the time Marissa already spent walking to find out how much time she has left: 3 hours - 1 hour - 1 hour = 1 hour
QID:GSM8K_19_c5a60611f6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', 'int2': 'Next subtract the time Marissa already spent walking to find out how much time she has left', 'int3': 'Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', 'int4': 'Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', 'hypothesis': 'The answer is 6'}
step:int1 & sent2 & sent3 -> int2: Next subtract the time Marissa already spent walking to find out how much time she has left: 3 hours - 1 hour - 1 hour = 1 hour
QID:GSM8K_19_c5a60611f6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', 'int2': 'Next subtract the time Marissa already spent walking to find out how much time she has left', 'int3': 'Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', 'int4': 'Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', 'hypothesis': 'The answer is 6'}
step:int1 & sent2 & sent3 -> int2: Next subtract the time Marissa already spent walking to find out how much time she has left: 3 hours - 1 hour - 1 hour = 1 hour
step:sent1 & sent2 & sent3 -> int3: Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance: 12 miles - 4 miles - 2 miles = 6 miles
QID:GSM8K_19_c5a60611f6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', 'int2': 'Next subtract the time Marissa already spent walking to find out how much time she has left', 'int3': 'Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', 'int4': 'Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', 'hypothesis': 'The answer is 6'}
step:sent1 & sent2 & sent3 -> int3: Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance: 12 miles - 4 miles - 2 miles = 6 miles
QID:GSM8K_19_c5a60611f6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', 'int2': 'Next subtract the time Marissa already spent walking to find out how much time she has left', 'int3': 'Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', 'int4': 'Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', 'hypothesis': 'The answer is 6'}
step:sent1 & sent2 & sent3 -> int3: Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance: 12 miles - 4 miles - 2 miles = 6 miles
QID:GSM8K_19_c5a60611f6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', 'int2': 'Next subtract the time Marissa already spent walking to find out how much time she has left', 'int3': 'Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', 'int4': 'Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', 'hypothesis': 'The answer is 6'}
step:sent1 & sent2 & sent3 -> int3: Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance: 12 miles - 4 miles - 2 miles = 6 miles
step:int3 & sent5 -> int4: Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel: 6 miles / 1 hour = 6 mph
QID:GSM8K_19_c5a60611f6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', 'int2': 'Next subtract the time Marissa already spent walking to find out how much time she has left', 'int3': 'Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', 'int4': 'Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', 'hypothesis': 'The answer is 6'}
step:int3 & sent5 -> int4: Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel: 6 miles / 1 hour = 6 mph
QID:GSM8K_19_c5a60611f6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', 'int2': 'Next subtract the time Marissa already spent walking to find out how much time she has left', 'int3': 'Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', 'int4': 'Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', 'hypothesis': 'The answer is 6'}
step:int3 & sent5 -> int4: Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel: 6 miles / 1 hour = 6 mph
step:int4 & sent5 -> hypothesis
QID:GSM8K_19_c5a60611f6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', 'int2': 'Next subtract the time Marissa already spent walking to find out how much time she has left', 'int3': 'Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', 'int4': 'Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', 'hypothesis': 'The answer is 6'}
step:int4 & sent5 -> hypothesis
QID:GSM8K_19_c5a60611f6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First figure out how many hours it takes to hike a 12-mile trail at 4 mph by dividing the distance by the speed', 'int2': 'Next subtract the time Marissa already spent walking to find out how much time she has left', 'int3': 'Now figure out how much distance she has left by subtracting the distance she already traveled from the total distance', 'int4': 'Now divide the remaining distance by the remaining time to find out how fast in miles per hour Marissa has to travel', 'hypothesis': 'The answer is 6'}
step:int4 & sent5 -> hypothesis
step:sent3 & sent2 -> int1: It will take Maria 1+2=4 hours to walk the remaining distance.
step:sent1 & sent4 & int1 -> int2: She needs to walk at a speed of 4 miles/hour for the remaining 12 miles.
step:sent5 & int2 & sent1 -> int3: Maria needs to walk at a speed of 4 miles/hour for the remaining 12 miles.
step:int3 & sent4 -> int4: The average speed for the remaining 12 miles is 4*12=24 miles/hour.
step:int4 & sent5 -> int5: Maria needs to walk at a speed of 24/60=6 miles/hour to walk the remaining distance.
step:int5 & sent5 -> hypothesis



======================

pred:sent1 -> int1: I have 10 liters of orange drink that are two-thirds water because 10 x 2 = 10; sent2 -> int2: I have 15 liters of pineapple that are three-fifths water because 15 / 3 = 15; int1 & sent4 -> int3: I spill one liter of orange drink because 10 x 2 = 10; int2 & int1 & sent4 -> int4: I have 24 liters left after a spill because 10 - 1 - 15 = 24; sent5 & int3 & int4 -> int5: There is 15 liters in the remaining 24 liters because 24 - 10 = 15; int5 & sent5 -> hypothesis
gold:sent2 -> int1: There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.; sent1 & sent4 -> int2: After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.; int2 & sent1 -> int3: Out of the 9 liters, 9 x 2/3 = 6 liters are water.; int1 & int3 & sent5 -> int4: Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.; int4 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent1 -> int1: I have 10 liters of orange drink that are two-thirds water because 10 x 2 = 10
step_parts:['sent1 -> int1', ' I have 10 liters of orange drink that are two-thirds water because 10 x 2 = 10']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=i have 10 liters of orange drink that are two-thirds water because 10 x 2 = 10
step: sent2 -> int2: I have 15 liters of pineapple that are three-fifths water because 15 / 3 = 15
step_parts:['sent2 -> int2', ' I have 15 liters of pineapple that are three-fifths water because 15 / 3 = 15']
lhs_ids:['sent2']	 rhs = int2	 all_ancestors={'sent2'}
	 rhs = int2, int_str=i have 15 liters of pineapple that are three-fifths water because 15 / 3 = 15
step: int1 & sent4 -> int3: I spill one liter of orange drink because 10 x 2 = 10
step_parts:['int1 & sent4 -> int3', ' I spill one liter of orange drink because 10 x 2 = 10']
lhs_ids:['int1', 'sent4']	 rhs = int3	 all_ancestors={'sent1', 'sent4'}
	 rhs = int3, int_str=i spill one liter of orange drink because 10 x 2 = 10
step: int2 & int1 & sent4 -> int4: I have 24 liters left after a spill because 10 - 1 - 15 = 24
step_parts:['int2 & int1 & sent4 -> int4', ' I have 24 liters left after a spill because 10 - 1 - 15 = 24']
lhs_ids:['int2', 'int1', 'sent4']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent4'}
	 rhs = int4, int_str=i have 24 liters left after a spill because 10 - 1 - 15 = 24
step: sent5 & int3 & int4 -> int5: There is 15 liters in the remaining 24 liters because 24 - 10 = 15
step_parts:['sent5 & int3 & int4 -> int5', ' There is 15 liters in the remaining 24 liters because 24 - 10 = 15']
lhs_ids:['sent5', 'int3', 'int4']	 rhs = int5	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent5'}
	 rhs = int5, int_str=there is 15 liters in the remaining 24 liters because 24 - 10 = 15
step: int5 & sent5 -> hypothesis
step_parts:['int5 & sent5 -> hypothesis']
lhs_ids:['int5', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 15
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: I have 10 liters of orange drink that are two-thirds water because 10 x 2 = 10; sent2 -> int2: I have 15 liters of pineapple that are three-fifths water because 15 / 3 = 15; int1 & sent4 -> int3: I spill one liter of orange drink because 10 x 2 = 10; int2 & int1 & sent4 -> int4: I have 24 liters left after a spill because 10 - 1 - 15 = 24; sent5 & int3 & int4 -> int5: There is 15 liters in the remaining 24 liters because 24 - 10 = 15; int5 & sent5 -> hypothesis
	sentences:['sent1 -> int1', 'sent2 -> int2', 'int1 & sent4 -> int3', 'int1 & int2 & sent4 -> int4', 'int3 & int4 & sent5 -> int5', 'int5 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['sent2'], 'rhs': 'int2'}, {'lhs': ['int1', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int1', 'int2', 'sent4'], 'rhs': 'int4'}, {'lhs': ['int3', 'int4', 'sent5'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent4']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent4']}, {'int': 'int5', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent5']}]
	relevant_sentences:{'sent1', 'sent2', 'sent4', 'sent5'}
	id_to_int:{'int1': 'i have 10 liters of orange drink that are two-thirds water because 10 x 2 = 10', 'int2': 'i have 15 liters of pineapple that are three-fifths water because 15 / 3 = 15', 'int3': 'i spill one liter of orange drink because 10 x 2 = 10', 'int4': 'i have 24 liters left after a spill because 10 - 1 - 15 = 24', 'int5': 'there is 15 liters in the remaining 24 liters because 24 - 10 = 15', 'hypothesis': 'the answer is 15'}



||||||||||||||||||||||

Reading gold proof
step:sent2 -> int1: There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.
step_parts:['sent2 -> int1', ' There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.']
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=there are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink
step: sent1 & sent4 -> int2: After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.
step_parts:['sent1 & sent4 -> int2', ' After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.']
lhs_ids:['sent1', 'sent4']	 rhs = int2	 all_ancestors={'sent1', 'sent4'}
	 rhs = int2, int_str=after 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left
step: int2 & sent1 -> int3: Out of the 9 liters, 9 x 2/3 = 6 liters are water.
step_parts:['int2 & sent1 -> int3', ' Out of the 9 liters, 9 x 2/3 = 6 liters are water.']
lhs_ids:['int2', 'sent1']	 rhs = int3	 all_ancestors={'sent1', 'sent4'}
	 rhs = int3, int_str=out of the 9 liters, 9 x 2/3 = 6 liters are water
step: int1 & int3 & sent5 -> int4: Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.
step_parts:['int1 & int3 & sent5 -> int4', ' Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.']
lhs_ids:['int1', 'int3', 'sent5']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5'}
	 rhs = int4, int_str=thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters
step: int4 & sent5 -> hypothesis
step_parts:['int4 & sent5 -> hypothesis']
lhs_ids:['int4', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 15
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.; sent1 & sent4 -> int2: After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.; int2 & sent1 -> int3: Out of the 9 liters, 9 x 2/3 = 6 liters are water.; int1 & int3 & sent5 -> int4: Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.; int4 & sent5 -> hypothesis;
	sentences:['sent2 -> int1', 'sent1 & sent4 -> int2', 'int2 & sent1 -> int3', 'int1 & int3 & sent5 -> int4', 'int4 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['sent1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent1'], 'rhs': 'int3'}, {'lhs': ['int1', 'int3', 'sent5'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent4']}, {'int': 'int3', 'ancestors': ['sent1', 'sent4']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5']}]
	relevant_sentences:{'sent1', 'sent2', 'sent4', 'sent5'}
	id_to_int:{'int1': 'there are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink', 'int2': 'after 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left', 'int3': 'out of the 9 liters, 9 x 2/3 = 6 liters are water', 'int4': 'thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters', 'hypothesis': 'the answer is 15'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int1', 'int3': 'int2', 'int4': 'int4', 'int5': 'int4', 'hypothesis': 'int4'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int1', 'int3': 'int2', 'int4': 'int4', 'int5': 'int4', 'hypothesis': 'int4'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent4', 'sent5'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent4', 'sent5'}
		sentences:['sent1', 'sent2', 'sent4', 'sent5']
		sentences_gold:['sent1', 'sent2', 'sent4', 'sent5']
		sentences:['int1 & int2 & sent4 -> int4', 'int2 & int4 & sent5 -> int4', 'int2 & sent4 -> int2', 'int4 & sent5 -> int4', 'sent1 -> int2', 'sent2 -> int1']
		sentences_gold:['int1 & int3 & sent5 -> int4', 'int2 & sent1 -> int3', 'int4 & sent5 -> hypothesis', 'sent1 & sent4 -> int2', 'sent2 -> int1']
step:sent2 -> int1: There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.
QID:GSM8K_20_ea9cd7843f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.', 'int2': 'After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.', 'int3': 'Out of the 9 liters, 9 x 2/3 = 6 liters are water.', 'int4': 'Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.', 'hypothesis': 'The answer is 15'}
step:sent2 -> int1: There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.
step:sent1 & sent4 -> int2: After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.
QID:GSM8K_20_ea9cd7843f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.', 'int2': 'After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.', 'int3': 'Out of the 9 liters, 9 x 2/3 = 6 liters are water.', 'int4': 'Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.', 'hypothesis': 'The answer is 15'}
step:sent1 & sent4 -> int2: After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.
QID:GSM8K_20_ea9cd7843f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.', 'int2': 'After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.', 'int3': 'Out of the 9 liters, 9 x 2/3 = 6 liters are water.', 'int4': 'Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.', 'hypothesis': 'The answer is 15'}
step:sent1 & sent4 -> int2: After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.
step:int2 & sent1 -> int3: Out of the 9 liters, 9 x 2/3 = 6 liters are water.
QID:GSM8K_20_ea9cd7843f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.', 'int2': 'After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.', 'int3': 'Out of the 9 liters, 9 x 2/3 = 6 liters are water.', 'int4': 'Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.', 'hypothesis': 'The answer is 15'}
step:int2 & sent1 -> int3: Out of the 9 liters, 9 x 2/3 = 6 liters are water.
QID:GSM8K_20_ea9cd7843f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.', 'int2': 'After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.', 'int3': 'Out of the 9 liters, 9 x 2/3 = 6 liters are water.', 'int4': 'Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.', 'hypothesis': 'The answer is 15'}
step:int2 & sent1 -> int3: Out of the 9 liters, 9 x 2/3 = 6 liters are water.
step:int1 & int3 & sent5 -> int4: Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.
QID:GSM8K_20_ea9cd7843f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.', 'int2': 'After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.', 'int3': 'Out of the 9 liters, 9 x 2/3 = 6 liters are water.', 'int4': 'Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.', 'hypothesis': 'The answer is 15'}
step:int1 & int3 & sent5 -> int4: Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.
QID:GSM8K_20_ea9cd7843f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.', 'int2': 'After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.', 'int3': 'Out of the 9 liters, 9 x 2/3 = 6 liters are water.', 'int4': 'Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.', 'hypothesis': 'The answer is 15'}
step:int1 & int3 & sent5 -> int4: Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.
QID:GSM8K_20_ea9cd7843f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.', 'int2': 'After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.', 'int3': 'Out of the 9 liters, 9 x 2/3 = 6 liters are water.', 'int4': 'Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.', 'hypothesis': 'The answer is 15'}
step:int1 & int3 & sent5 -> int4: Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.
step:int4 & sent5 -> hypothesis
QID:GSM8K_20_ea9cd7843f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.', 'int2': 'After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.', 'int3': 'Out of the 9 liters, 9 x 2/3 = 6 liters are water.', 'int4': 'Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.', 'hypothesis': 'The answer is 15'}
step:int4 & sent5 -> hypothesis
QID:GSM8K_20_ea9cd7843f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink.', 'int2': 'After 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left.', 'int3': 'Out of the 9 liters, 9 x 2/3 = 6 liters are water.', 'int4': 'Thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters.', 'hypothesis': 'The answer is 15'}
step:int4 & sent5 -> hypothesis
step:sent1 -> int1: I have 10 liters of orange drink that are two-thirds water because 10 x 2 = 10
step:sent2 -> int2: I have 15 liters of pineapple that are three-fifths water because 15 / 3 = 15
step:int1 & sent4 -> int3: I spill one liter of orange drink because 10 x 2 = 10
step:int2 & int1 & sent4 -> int4: I have 24 liters left after a spill because 10 - 1 - 15 = 24
step:sent5 & int3 & int4 -> int5: There is 15 liters in the remaining 24 liters because 24 - 10 = 15
step:int5 & sent5 -> hypothesis



======================

pred:sent3 & sent2 -> int1: Raymond was born 6 years before Samantha, which means he was 23 + 6 = 28 years old.; sent4 & int1 -> int2: Samantha is 31 + 28 = 42 years old.; int2 & sent5 & int1 -> int3: Thus, Raymond's son was born 42 - 23 = 14 years ago.; int3 & sent5 -> hypothesis
gold:sent2 & sent3 -> int1: When Raymond's son was born Samantha was 23 - 6 = 17 years old.; int1 & sent4 & sent5 -> int2: Thus it has been 31 - 17 = 14 years since Raymond's son was born.; int2 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent2 -> int1: Raymond was born 6 years before Samantha, which means he was 23 + 6 = 28 years old.
step_parts:['sent3 & sent2 -> int1', ' Raymond was born 6 years before Samantha, which means he was 23 + 6 = 28 years old.']
lhs_ids:['sent3', 'sent2']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=raymond was born 6 years before samantha, which means he was 23 + 6 = 28 years old
step: sent4 & int1 -> int2: Samantha is 31 + 28 = 42 years old.
step_parts:['sent4 & int1 -> int2', ' Samantha is 31 + 28 = 42 years old.']
lhs_ids:['sent4', 'int1']	 rhs = int2	 all_ancestors={'sent2', 'sent4', 'sent3'}
	 rhs = int2, int_str=samantha is 31 + 28 = 42 years old
step: int2 & sent5 & int1 -> int3: Thus, Raymond's son was born 42 - 23 = 14 years ago.
step_parts:['int2 & sent5 & int1 -> int3', " Thus, Raymond's son was born 42 - 23 = 14 years ago."]
lhs_ids:['int2', 'sent5', 'int1']	 rhs = int3	 all_ancestors={'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = int3, int_str=thus, raymond's son was born 42 - 23 = 14 years ago
step: int3 & sent5 -> hypothesis
step_parts:['int3 & sent5 -> hypothesis']
lhs_ids:['int3', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 14
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent2 -> int1: Raymond was born 6 years before Samantha, which means he was 23 + 6 = 28 years old.; sent4 & int1 -> int2: Samantha is 31 + 28 = 42 years old.; int2 & sent5 & int1 -> int3: Thus, Raymond's son was born 42 - 23 = 14 years ago.; int3 & sent5 -> hypothesis
	sentences:['sent2 & sent3 -> int1', 'int1 & sent4 -> int2', 'int1 & int2 & sent5 -> int3', 'int3 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent5'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent4', 'sent3']}, {'int': 'int3', 'ancestors': ['sent2', 'sent4', 'sent5', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'raymond was born 6 years before samantha, which means he was 23 + 6 = 28 years old', 'int2': 'samantha is 31 + 28 = 42 years old', 'int3': "thus, raymond's son was born 42 - 23 = 14 years ago", 'hypothesis': 'the answer is 14'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent3 -> int1: When Raymond's son was born Samantha was 23 - 6 = 17 years old.
step_parts:['sent2 & sent3 -> int1', " When Raymond's son was born Samantha was 23 - 6 = 17 years old."]
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=when raymond's son was born samantha was 23 - 6 = 17 years old
step: int1 & sent4 & sent5 -> int2: Thus it has been 31 - 17 = 14 years since Raymond's son was born.
step_parts:['int1 & sent4 & sent5 -> int2', " Thus it has been 31 - 17 = 14 years since Raymond's son was born."]
lhs_ids:['int1', 'sent4', 'sent5']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = int2, int_str=thus it has been 31 - 17 = 14 years since raymond's son was born
step: int2 & sent5 -> hypothesis
step_parts:['int2 & sent5 -> hypothesis']
lhs_ids:['int2', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 14
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: When Raymond's son was born Samantha was 23 - 6 = 17 years old.; int1 & sent4 & sent5 -> int2: Thus it has been 31 - 17 = 14 years since Raymond's son was born.; int2 & sent5 -> hypothesis;
	sentences:['sent2 & sent3 -> int1', 'int1 & sent4 & sent5 -> int2', 'int2 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': "when raymond's son was born samantha was 23 - 6 = 17 years old", 'int2': "thus it has been 31 - 17 = 14 years since raymond's son was born", 'hypothesis': 'the answer is 14'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int2', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int2', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4', 'sent5'}
relevant_sentences_gold:{'sent2', 'sent3', 'sent4', 'sent5'}
		sentences:['sent2', 'sent3', 'sent4', 'sent5']
		sentences_gold:['sent2', 'sent3', 'sent4', 'sent5']
		sentences:['int1 & int2 & sent5 -> int2', 'int1 & sent4 -> int2', 'int2 & sent5 -> int2', 'sent2 & sent3 -> int1']
		sentences_gold:['int1 & sent4 & sent5 -> int2', 'int2 & sent5 -> hypothesis', 'sent2 & sent3 -> int1']
step:sent2 & sent3 -> int1: When Raymond's son was born Samantha was 23 - 6 = 17 years old.
QID:GSM8K_21_6858311ee4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "When Raymond's son was born Samantha was 23 - 6 = 17 years old.", 'int2': "Thus it has been 31 - 17 = 14 years since Raymond's son was born.", 'hypothesis': 'The answer is 14'}
step:sent2 & sent3 -> int1: When Raymond's son was born Samantha was 23 - 6 = 17 years old.
QID:GSM8K_21_6858311ee4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "When Raymond's son was born Samantha was 23 - 6 = 17 years old.", 'int2': "Thus it has been 31 - 17 = 14 years since Raymond's son was born.", 'hypothesis': 'The answer is 14'}
step:sent2 & sent3 -> int1: When Raymond's son was born Samantha was 23 - 6 = 17 years old.
step:int1 & sent4 & sent5 -> int2: Thus it has been 31 - 17 = 14 years since Raymond's son was born.
QID:GSM8K_21_6858311ee4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "When Raymond's son was born Samantha was 23 - 6 = 17 years old.", 'int2': "Thus it has been 31 - 17 = 14 years since Raymond's son was born.", 'hypothesis': 'The answer is 14'}
step:int1 & sent4 & sent5 -> int2: Thus it has been 31 - 17 = 14 years since Raymond's son was born.
QID:GSM8K_21_6858311ee4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "When Raymond's son was born Samantha was 23 - 6 = 17 years old.", 'int2': "Thus it has been 31 - 17 = 14 years since Raymond's son was born.", 'hypothesis': 'The answer is 14'}
step:int1 & sent4 & sent5 -> int2: Thus it has been 31 - 17 = 14 years since Raymond's son was born.
QID:GSM8K_21_6858311ee4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "When Raymond's son was born Samantha was 23 - 6 = 17 years old.", 'int2': "Thus it has been 31 - 17 = 14 years since Raymond's son was born.", 'hypothesis': 'The answer is 14'}
step:int1 & sent4 & sent5 -> int2: Thus it has been 31 - 17 = 14 years since Raymond's son was born.
step:int2 & sent5 -> hypothesis
QID:GSM8K_21_6858311ee4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "When Raymond's son was born Samantha was 23 - 6 = 17 years old.", 'int2': "Thus it has been 31 - 17 = 14 years since Raymond's son was born.", 'hypothesis': 'The answer is 14'}
step:int2 & sent5 -> hypothesis
QID:GSM8K_21_6858311ee4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "When Raymond's son was born Samantha was 23 - 6 = 17 years old.", 'int2': "Thus it has been 31 - 17 = 14 years since Raymond's son was born.", 'hypothesis': 'The answer is 14'}
step:int2 & sent5 -> hypothesis
step:sent3 & sent2 -> int1: Raymond was born 6 years before Samantha, which means he was 23 + 6 = 28 years old.
step:sent4 & int1 -> int2: Samantha is 31 + 28 = 42 years old.
step:int2 & sent5 & int1 -> int3: Thus, Raymond's son was born 42 - 23 = 14 years ago.
step:int3 & sent5 -> hypothesis



======================

pred:sent4 -> int1: His next 2 customers buy 2 dvds each so 2 * 2 = 4 dvds; sent2 & sent3 -> int2: Billy has 8 customers - 3 customers = 4 dvds.; sent3 -> int3: Billy's first 3 customers buy one dvd each so 3 * 1 = 3 dvds; sent3 -> int4: Billy has 8 customers because 8 x 1 = 8; int1 & int2 & int3 -> int5: He sold 7 dvds on Tuesday because 4 + 3 + 4 = 7; sent6 & int5 & int4 -> hypothesis
gold:sent3 -> int1: His first 3 customers buy 3 * 1 = 3 DVDs.; sent4 -> int2: His next 2 buy 2 * 2 = 4 DVDs.; int1 & int2 & sent5 & sent6 -> int3: He sells a total of 3 + 4 + 0 = 7 DVDs.; int3 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent4 -> int1: His next 2 customers buy 2 dvds each so 2 * 2 = 4 dvds
step_parts:['sent4 -> int1', ' His next 2 customers buy 2 dvds each so 2 * 2 = 4 dvds']
lhs_ids:['sent4']	 rhs = int1	 all_ancestors={'sent4'}
	 rhs = int1, int_str=his next 2 customers buy 2 dvds each so 2 * 2 = 4 dvds
step: sent2 & sent3 -> int2: Billy has 8 customers - 3 customers = 4 dvds.
step_parts:['sent2 & sent3 -> int2', ' Billy has 8 customers - 3 customers = 4 dvds.']
lhs_ids:['sent2', 'sent3']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=billy has 8 customers - 3 customers = 4 dvds
step: sent3 -> int3: Billy's first 3 customers buy one dvd each so 3 * 1 = 3 dvds
step_parts:['sent3 -> int3', " Billy's first 3 customers buy one dvd each so 3 * 1 = 3 dvds"]
lhs_ids:['sent3']	 rhs = int3	 all_ancestors={'sent3'}
	 rhs = int3, int_str=billy's first 3 customers buy one dvd each so 3 * 1 = 3 dvds
step: sent3 -> int4: Billy has 8 customers because 8 x 1 = 8
step_parts:['sent3 -> int4', ' Billy has 8 customers because 8 x 1 = 8']
lhs_ids:['sent3']	 rhs = int4	 all_ancestors={'sent3'}
	 rhs = int4, int_str=billy has 8 customers because 8 x 1 = 8
step: int1 & int2 & int3 -> int5: He sold 7 dvds on Tuesday because 4 + 3 + 4 = 7
step_parts:['int1 & int2 & int3 -> int5', ' He sold 7 dvds on Tuesday because 4 + 3 + 4 = 7']
lhs_ids:['int1', 'int2', 'int3']	 rhs = int5	 all_ancestors={'sent2', 'sent4', 'sent3'}
	 rhs = int5, int_str=he sold 7 dvds on tuesday because 4 + 3 + 4 = 7
step: sent6 & int5 & int4 -> hypothesis
step_parts:['sent6 & int5 & int4 -> hypothesis']
lhs_ids:['sent6', 'int5', 'int4']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 7
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent4 -> int1: His next 2 customers buy 2 dvds each so 2 * 2 = 4 dvds; sent2 & sent3 -> int2: Billy has 8 customers - 3 customers = 4 dvds.; sent3 -> int3: Billy's first 3 customers buy one dvd each so 3 * 1 = 3 dvds; sent3 -> int4: Billy has 8 customers because 8 x 1 = 8; int1 & int2 & int3 -> int5: He sold 7 dvds on Tuesday because 4 + 3 + 4 = 7; sent6 & int5 & int4 -> hypothesis
	sentences:['sent4 -> int1', 'sent2 & sent3 -> int2', 'sent3 -> int3', 'sent3 -> int4', 'int1 & int2 & int3 -> int5', 'int4 & int5 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent4'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent3'], 'rhs': 'int2'}, {'lhs': ['sent3'], 'rhs': 'int3'}, {'lhs': ['sent3'], 'rhs': 'int4'}, {'lhs': ['int1', 'int2', 'int3'], 'rhs': 'int5'}, {'lhs': ['int4', 'int5', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent4']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent3']}, {'int': 'int4', 'ancestors': ['sent3']}, {'int': 'int5', 'ancestors': ['sent2', 'sent4', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent3']}]
	relevant_sentences:{'sent2', 'sent4', 'sent3', 'sent6'}
	id_to_int:{'int1': 'his next 2 customers buy 2 dvds each so 2 * 2 = 4 dvds', 'int2': 'billy has 8 customers - 3 customers = 4 dvds', 'int3': "billy's first 3 customers buy one dvd each so 3 * 1 = 3 dvds", 'int4': 'billy has 8 customers because 8 x 1 = 8', 'int5': 'he sold 7 dvds on tuesday because 4 + 3 + 4 = 7', 'hypothesis': 'the answer is 7'}



||||||||||||||||||||||

Reading gold proof
step:sent3 -> int1: His first 3 customers buy 3 * 1 = 3 DVDs.
step_parts:['sent3 -> int1', ' His first 3 customers buy 3 * 1 = 3 DVDs.']
lhs_ids:['sent3']	 rhs = int1	 all_ancestors={'sent3'}
	 rhs = int1, int_str=his first 3 customers buy 3 * 1 = 3 dvds
step: sent4 -> int2: His next 2 buy 2 * 2 = 4 DVDs.
step_parts:['sent4 -> int2', ' His next 2 buy 2 * 2 = 4 DVDs.']
lhs_ids:['sent4']	 rhs = int2	 all_ancestors={'sent4'}
	 rhs = int2, int_str=his next 2 buy 2 * 2 = 4 dvds
step: int1 & int2 & sent5 & sent6 -> int3: He sells a total of 3 + 4 + 0 = 7 DVDs.
step_parts:['int1 & int2 & sent5 & sent6 -> int3', ' He sells a total of 3 + 4 + 0 = 7 DVDs.']
lhs_ids:['int1', 'int2', 'sent5', 'sent6']	 rhs = int3	 all_ancestors={'sent6', 'sent3', 'sent4', 'sent5'}
	 rhs = int3, int_str=he sells a total of 3 + 4 + 0 = 7 dvds
step: int3 & sent6 -> hypothesis
step_parts:['int3 & sent6 -> hypothesis']
lhs_ids:['int3', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 7
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 -> int1: His first 3 customers buy 3 * 1 = 3 DVDs.; sent4 -> int2: His next 2 buy 2 * 2 = 4 DVDs.; int1 & int2 & sent5 & sent6 -> int3: He sells a total of 3 + 4 + 0 = 7 DVDs.; int3 & sent6 -> hypothesis;
	sentences:['sent3 -> int1', 'sent4 -> int2', 'int1 & int2 & sent5 & sent6 -> int3', 'int3 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent3'], 'rhs': 'int1'}, {'lhs': ['sent4'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent5', 'sent6'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3']}, {'int': 'int2', 'ancestors': ['sent4']}, {'int': 'int3', 'ancestors': ['sent6', 'sent3', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent6', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'his first 3 customers buy 3 * 1 = 3 dvds', 'int2': 'his next 2 buy 2 * 2 = 4 dvds', 'int3': 'he sells a total of 3 + 4 + 0 = 7 dvds', 'hypothesis': 'the answer is 7'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int1', 'int3': 'int1', 'int4': 'int1', 'int5': 'int3', 'hypothesis': 'int3'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int1', 'int3': 'int1', 'int4': 'int1', 'int5': 'int3', 'hypothesis': 'int3'}
relevant_sentences_pred:{'sent2', 'sent4', 'sent3', 'sent6'}
relevant_sentences_gold:{'sent6', 'sent3', 'sent4', 'sent5'}
		sentences:['sent2', 'sent3', 'sent4', 'sent6']
		sentences_gold:['sent3', 'sent4', 'sent5', 'sent6']
		sentences:['int1 & int1 & int2 -> int3', 'int1 & int3 & sent6 -> int3', 'sent2 & sent3 -> int1', 'sent3 -> int1', 'sent3 -> int1', 'sent4 -> int2']
		sentences_gold:['int1 & int2 & sent5 & sent6 -> int3', 'int3 & sent6 -> hypothesis', 'sent3 -> int1', 'sent4 -> int2']
step:sent3 -> int1: His first 3 customers buy 3 * 1 = 3 DVDs.
QID:GSM8K_22_b2e7b4eecc
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'His first 3 customers buy 3 * 1 = 3 DVDs.', 'int2': 'His next 2 buy 2 * 2 = 4 DVDs.', 'int3': 'He sells a total of 3 + 4 + 0 = 7 DVDs.', 'hypothesis': 'The answer is 7'}
step:sent3 -> int1: His first 3 customers buy 3 * 1 = 3 DVDs.
step:sent4 -> int2: His next 2 buy 2 * 2 = 4 DVDs.
QID:GSM8K_22_b2e7b4eecc
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'His first 3 customers buy 3 * 1 = 3 DVDs.', 'int2': 'His next 2 buy 2 * 2 = 4 DVDs.', 'int3': 'He sells a total of 3 + 4 + 0 = 7 DVDs.', 'hypothesis': 'The answer is 7'}
step:sent4 -> int2: His next 2 buy 2 * 2 = 4 DVDs.
step:int1 & int2 & sent5 & sent6 -> int3: He sells a total of 3 + 4 + 0 = 7 DVDs.
QID:GSM8K_22_b2e7b4eecc
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'His first 3 customers buy 3 * 1 = 3 DVDs.', 'int2': 'His next 2 buy 2 * 2 = 4 DVDs.', 'int3': 'He sells a total of 3 + 4 + 0 = 7 DVDs.', 'hypothesis': 'The answer is 7'}
step:int1 & int2 & sent5 & sent6 -> int3: He sells a total of 3 + 4 + 0 = 7 DVDs.
QID:GSM8K_22_b2e7b4eecc
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'His first 3 customers buy 3 * 1 = 3 DVDs.', 'int2': 'His next 2 buy 2 * 2 = 4 DVDs.', 'int3': 'He sells a total of 3 + 4 + 0 = 7 DVDs.', 'hypothesis': 'The answer is 7'}
step:int1 & int2 & sent5 & sent6 -> int3: He sells a total of 3 + 4 + 0 = 7 DVDs.
QID:GSM8K_22_b2e7b4eecc
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'His first 3 customers buy 3 * 1 = 3 DVDs.', 'int2': 'His next 2 buy 2 * 2 = 4 DVDs.', 'int3': 'He sells a total of 3 + 4 + 0 = 7 DVDs.', 'hypothesis': 'The answer is 7'}
step:int1 & int2 & sent5 & sent6 -> int3: He sells a total of 3 + 4 + 0 = 7 DVDs.
QID:GSM8K_22_b2e7b4eecc
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'His first 3 customers buy 3 * 1 = 3 DVDs.', 'int2': 'His next 2 buy 2 * 2 = 4 DVDs.', 'int3': 'He sells a total of 3 + 4 + 0 = 7 DVDs.', 'hypothesis': 'The answer is 7'}
step:int1 & int2 & sent5 & sent6 -> int3: He sells a total of 3 + 4 + 0 = 7 DVDs.
step:int3 & sent6 -> hypothesis
QID:GSM8K_22_b2e7b4eecc
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'His first 3 customers buy 3 * 1 = 3 DVDs.', 'int2': 'His next 2 buy 2 * 2 = 4 DVDs.', 'int3': 'He sells a total of 3 + 4 + 0 = 7 DVDs.', 'hypothesis': 'The answer is 7'}
step:int3 & sent6 -> hypothesis
QID:GSM8K_22_b2e7b4eecc
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'His first 3 customers buy 3 * 1 = 3 DVDs.', 'int2': 'His next 2 buy 2 * 2 = 4 DVDs.', 'int3': 'He sells a total of 3 + 4 + 0 = 7 DVDs.', 'hypothesis': 'The answer is 7'}
step:int3 & sent6 -> hypothesis
step:sent4 -> int1: His next 2 customers buy 2 dvds each so 2 * 2 = 4 dvds
step:sent2 & sent3 -> int2: Billy has 8 customers - 3 customers = 4 dvds.
step:sent3 -> int3: Billy's first 3 customers buy one dvd each so 3 * 1 = 3 dvds
step:sent3 -> int4: Billy has 8 customers because 8 x 1 = 8
step:int1 & int2 & int3 -> int5: He sold 7 dvds on Tuesday because 4 + 3 + 4 = 7
step:sent6 & int5 & int4 -> hypothesis



======================

pred:sent1 & sent2 -> int1: After burning from 1:00 pm to 5:00 pm, the candle will be 2*5:00 = 8 centimeters shorter.; sent2 & int1 -> hypothesis
gold:sent2 -> int1: The candle burns for 5 - 1 = 4 hours.; int1 & sent1 -> int2: Thus, the candle will be 2 * 4 = 8 centimeters shorter.; int2 & sent2 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent2 -> int1: After burning from 1:00 pm to 5:00 pm, the candle will be 2*5:00 = 8 centimeters shorter.
step_parts:['sent1 & sent2 -> int1', ' After burning from 1', '00 pm to 5', '00 pm, the candle will be 2*5', '00 = 8 centimeters shorter.']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=
step: sent2 & int1 -> hypothesis
step_parts:['sent2 & int1 -> hypothesis']
lhs_ids:['sent2', 'int1']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 8
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: After burning from 1:00 pm to 5:00 pm, the candle will be 2*5:00 = 8 centimeters shorter.; sent2 & int1 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent2 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2'}
	id_to_int:{'int1': '', 'hypothesis': 'the answer is 8'}



||||||||||||||||||||||

Reading gold proof
step:sent2 -> int1: The candle burns for 5 - 1 = 4 hours.
step_parts:['sent2 -> int1', ' The candle burns for 5 - 1 = 4 hours.']
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=the candle burns for 5 - 1 = 4 hours
step: int1 & sent1 -> int2: Thus, the candle will be 2 * 4 = 8 centimeters shorter.
step_parts:['int1 & sent1 -> int2', ' Thus, the candle will be 2 * 4 = 8 centimeters shorter.']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=thus, the candle will be 2 * 4 = 8 centimeters shorter
step: int2 & sent2 -> hypothesis
step_parts:['int2 & sent2 -> hypothesis']
lhs_ids:['int2', 'sent2']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 8
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: The candle burns for 5 - 1 = 4 hours.; int1 & sent1 -> int2: Thus, the candle will be 2 * 4 = 8 centimeters shorter.; int2 & sent2 -> hypothesis;
	sentences:['sent2 -> int1', 'int1 & sent1 -> int2', 'int2 & sent2 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2'}
	id_to_int:{'int1': 'the candle burns for 5 - 1 = 4 hours', 'int2': 'thus, the candle will be 2 * 4 = 8 centimeters shorter', 'hypothesis': 'the answer is 8'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent1', 'sent2'}
relevant_sentences_gold:{'sent1', 'sent2'}
		sentences:['sent1', 'sent2']
		sentences_gold:['sent1', 'sent2']
		sentences:['int2 & sent2 -> int2', 'sent1 & sent2 -> int2']
		sentences_gold:['int1 & sent1 -> int2', 'int2 & sent2 -> hypothesis', 'sent2 -> int1']
step:sent2 -> int1: The candle burns for 5 - 1 = 4 hours.
QID:GSM8K_23_ddd8cf9c35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The candle burns for 5 - 1 = 4 hours.', 'int2': 'Thus, the candle will be 2 * 4 = 8 centimeters shorter.', 'hypothesis': 'The answer is 8'}
step:sent2 -> int1: The candle burns for 5 - 1 = 4 hours.
step:int1 & sent1 -> int2: Thus, the candle will be 2 * 4 = 8 centimeters shorter.
QID:GSM8K_23_ddd8cf9c35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The candle burns for 5 - 1 = 4 hours.', 'int2': 'Thus, the candle will be 2 * 4 = 8 centimeters shorter.', 'hypothesis': 'The answer is 8'}
step:int1 & sent1 -> int2: Thus, the candle will be 2 * 4 = 8 centimeters shorter.
QID:GSM8K_23_ddd8cf9c35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The candle burns for 5 - 1 = 4 hours.', 'int2': 'Thus, the candle will be 2 * 4 = 8 centimeters shorter.', 'hypothesis': 'The answer is 8'}
step:int1 & sent1 -> int2: Thus, the candle will be 2 * 4 = 8 centimeters shorter.
step:int2 & sent2 -> hypothesis
QID:GSM8K_23_ddd8cf9c35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The candle burns for 5 - 1 = 4 hours.', 'int2': 'Thus, the candle will be 2 * 4 = 8 centimeters shorter.', 'hypothesis': 'The answer is 8'}
step:int2 & sent2 -> hypothesis
QID:GSM8K_23_ddd8cf9c35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The candle burns for 5 - 1 = 4 hours.', 'int2': 'Thus, the candle will be 2 * 4 = 8 centimeters shorter.', 'hypothesis': 'The answer is 8'}
step:int2 & sent2 -> hypothesis
step:sent1 & sent2 -> int1: After burning from 1:00 pm to 5:00 pm, the candle will be 2*5:00 = 8 centimeters shorter.
step:sent2 & int1 -> hypothesis



======================

pred:sent1 & sent2 -> int1: Kyle bought the book at $19.50, so it was $19.50 x 25/100 = $9.50.; int1 & sent3 & sent2 -> int2: The original price was $9.50 - $2 = $26.; int2 & sent3 -> hypothesis
gold:sent1 & sent2 & sent3 -> int1: Let X be the original price of the book. The discounted price is X - X*25% = $19.50.; int1 -> int2: Combining like terms, we get .75X = $19.50; int2 -> int3: Dividing both sides by .75, we get X = $26.; int3 & sent3 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent2 -> int1: Kyle bought the book at $19.50, so it was $19.50 x 25/100 = $9.50.
step_parts:['sent1 & sent2 -> int1', ' Kyle bought the book at $19.50, so it was $19.50 x 25/100 = $9.50.']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=kyle bought the book at $1950, so it was $1950 x 25/100 = $950
step: int1 & sent3 & sent2 -> int2: The original price was $9.50 - $2 = $26.
step_parts:['int1 & sent3 & sent2 -> int2', ' The original price was $9.50 - $2 = $26.']
lhs_ids:['int1', 'sent3', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=the original price was $950 - $2 = $26
step: int2 & sent3 -> hypothesis
step_parts:['int2 & sent3 -> hypothesis']
lhs_ids:['int2', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 26
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: Kyle bought the book at $19.50, so it was $19.50 x 25/100 = $9.50.; int1 & sent3 & sent2 -> int2: The original price was $9.50 - $2 = $26.; int2 & sent3 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent2 & sent3 -> int2', 'int2 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'kyle bought the book at $1950, so it was $1950 x 25/100 = $950', 'int2': 'the original price was $950 - $2 = $26', 'hypothesis': 'the answer is 26'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 & sent3 -> int1: Let X be the original price of the book. The discounted price is X - X*25% = $19.50.
step_parts:['sent1 & sent2 & sent3 -> int1', ' Let X be the original price of the book. The discounted price is X - X*25% = $19.50.']
lhs_ids:['sent1', 'sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int1, int_str=let x be the original price of the book the discounted price is x - x*25% = $1950
step: int1 -> int2: Combining like terms, we get .75X = $19.50
step_parts:['int1 -> int2', ' Combining like terms, we get .75X = $19.50']
lhs_ids:['int1']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=combining like terms, we get 75x = $1950
step: int2 -> int3: Dividing both sides by .75, we get X = $26.
step_parts:['int2 -> int3', ' Dividing both sides by .75, we get X = $26.']
lhs_ids:['int2']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int3, int_str=dividing both sides by 75, we get x = $26
step: int3 & sent3 -> hypothesis
step_parts:['int3 & sent3 -> hypothesis']
lhs_ids:['int3', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 26
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 & sent3 -> int1: Let X be the original price of the book. The discounted price is X - X*25% = $19.50.; int1 -> int2: Combining like terms, we get .75X = $19.50; int2 -> int3: Dividing both sides by .75, we get X = $26.; int3 & sent3 -> hypothesis;
	sentences:['sent1 & sent2 & sent3 -> int1', 'int1 -> int2', 'int2 -> int3', 'int3 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1'], 'rhs': 'int2'}, {'lhs': ['int2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'let x be the original price of the book the discounted price is x - x*25% = $1950', 'int2': 'combining like terms, we get 75x = $1950', 'int3': 'dividing both sides by 75, we get x = $26', 'hypothesis': 'the answer is 26'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'hypothesis': 'int1'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'hypothesis': 'int1'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3'}
		sentences:['sent1', 'sent2', 'sent3']
		sentences_gold:['sent1', 'sent2', 'sent3']
		sentences:['int1 & sent2 & sent3 -> int1', 'int1 & sent3 -> int1', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 -> int2', 'int2 -> int3', 'int3 & sent3 -> hypothesis', 'sent1 & sent2 & sent3 -> int1']
step:sent1 & sent2 & sent3 -> int1: Let X be the original price of the book. The discounted price is X - X*25% = $19.50.
QID:GSM8K_24_18a7cbe01d
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let X be the original price of the book. The discounted price is X - X*25% = $19.50.', 'int2': 'Combining like terms, we get .75X = $19.50', 'int3': 'Dividing both sides by .75, we get X = $26.', 'hypothesis': 'The answer is 26'}
step:sent1 & sent2 & sent3 -> int1: Let X be the original price of the book. The discounted price is X - X*25% = $19.50.
QID:GSM8K_24_18a7cbe01d
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let X be the original price of the book. The discounted price is X - X*25% = $19.50.', 'int2': 'Combining like terms, we get .75X = $19.50', 'int3': 'Dividing both sides by .75, we get X = $26.', 'hypothesis': 'The answer is 26'}
step:sent1 & sent2 & sent3 -> int1: Let X be the original price of the book. The discounted price is X - X*25% = $19.50.
QID:GSM8K_24_18a7cbe01d
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let X be the original price of the book. The discounted price is X - X*25% = $19.50.', 'int2': 'Combining like terms, we get .75X = $19.50', 'int3': 'Dividing both sides by .75, we get X = $26.', 'hypothesis': 'The answer is 26'}
step:sent1 & sent2 & sent3 -> int1: Let X be the original price of the book. The discounted price is X - X*25% = $19.50.
step:int1 -> int2: Combining like terms, we get .75X = $19.50
QID:GSM8K_24_18a7cbe01d
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let X be the original price of the book. The discounted price is X - X*25% = $19.50.', 'int2': 'Combining like terms, we get .75X = $19.50', 'int3': 'Dividing both sides by .75, we get X = $26.', 'hypothesis': 'The answer is 26'}
step:int1 -> int2: Combining like terms, we get .75X = $19.50
step:int2 -> int3: Dividing both sides by .75, we get X = $26.
QID:GSM8K_24_18a7cbe01d
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let X be the original price of the book. The discounted price is X - X*25% = $19.50.', 'int2': 'Combining like terms, we get .75X = $19.50', 'int3': 'Dividing both sides by .75, we get X = $26.', 'hypothesis': 'The answer is 26'}
step:int2 -> int3: Dividing both sides by .75, we get X = $26.
step:int3 & sent3 -> hypothesis
QID:GSM8K_24_18a7cbe01d
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let X be the original price of the book. The discounted price is X - X*25% = $19.50.', 'int2': 'Combining like terms, we get .75X = $19.50', 'int3': 'Dividing both sides by .75, we get X = $26.', 'hypothesis': 'The answer is 26'}
step:int3 & sent3 -> hypothesis
QID:GSM8K_24_18a7cbe01d
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let X be the original price of the book. The discounted price is X - X*25% = $19.50.', 'int2': 'Combining like terms, we get .75X = $19.50', 'int3': 'Dividing both sides by .75, we get X = $26.', 'hypothesis': 'The answer is 26'}
step:int3 & sent3 -> hypothesis
step:sent1 & sent2 -> int1: Kyle bought the book at $19.50, so it was $19.50 x 25/100 = $9.50.
step:int1 & sent3 & sent2 -> int2: The original price was $9.50 - $2 = $26.
step:int2 & sent3 -> hypothesis



======================

pred:sent2 -> int1: The cost of 5 packs of milk is $3 x 5 = $15.; sent3 -> int2: The cost of 4 apples is $1.50 x 4 = $4.50.; sent1 & int2 & int1 & sent6 -> int3: So, Marie paid a total of $50 + $15 + $4.50 + $12 = $48.; int3 & sent6 -> int4: Therefore, she ordered 48 / 8 = 2 boxes of pizza.; int4 & sent6 -> hypothesis
gold:sent2 -> int1: Five packs of milk cost $3 x 5 = $15.; sent3 -> int2: Four apples cost $1.50 x 4 = $6.; int1 & int2 & sent1 -> int3: The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.; int3 & sent4 & sent5 -> int4: Thus, the boxes of pizza cost $50 - $33 = $17.; int4 & sent6 -> int5: Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.; int5 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent2 -> int1: The cost of 5 packs of milk is $3 x 5 = $15.
step_parts:['sent2 -> int1', ' The cost of 5 packs of milk is $3 x 5 = $15.']
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=the cost of 5 packs of milk is $3 x 5 = $15
step: sent3 -> int2: The cost of 4 apples is $1.50 x 4 = $4.50.
step_parts:['sent3 -> int2', ' The cost of 4 apples is $1.50 x 4 = $4.50.']
lhs_ids:['sent3']	 rhs = int2	 all_ancestors={'sent3'}
	 rhs = int2, int_str=the cost of 4 apples is $150 x 4 = $450
step: sent1 & int2 & int1 & sent6 -> int3: So, Marie paid a total of $50 + $15 + $4.50 + $12 = $48.
step_parts:['sent1 & int2 & int1 & sent6 -> int3', ' So, Marie paid a total of $50 + $15 + $4.50 + $12 = $48.']
lhs_ids:['sent1', 'int2', 'int1', 'sent6']	 rhs = int3	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent6'}
	 rhs = int3, int_str=so, marie paid a total of $50 + $15 + $450 + $12 = $48
step: int3 & sent6 -> int4: Therefore, she ordered 48 / 8 = 2 boxes of pizza.
step_parts:['int3 & sent6 -> int4', ' Therefore, she ordered 48 / 8 = 2 boxes of pizza.']
lhs_ids:['int3', 'sent6']	 rhs = int4	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent6'}
	 rhs = int4, int_str=therefore, she ordered 48 / 8 = 2 boxes of pizza
step: int4 & sent6 -> hypothesis
step_parts:['int4 & sent6 -> hypothesis']
lhs_ids:['int4', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent6'}
	 rhs = hypothesis, int_str=the answer is 2
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: The cost of 5 packs of milk is $3 x 5 = $15.; sent3 -> int2: The cost of 4 apples is $1.50 x 4 = $4.50.; sent1 & int2 & int1 & sent6 -> int3: So, Marie paid a total of $50 + $15 + $4.50 + $12 = $48.; int3 & sent6 -> int4: Therefore, she ordered 48 / 8 = 2 boxes of pizza.; int4 & sent6 -> hypothesis
	sentences:['sent2 -> int1', 'sent3 -> int2', 'int1 & int2 & sent1 & sent6 -> int3', 'int3 & sent6 -> int4', 'int4 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['sent3'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent1', 'sent6'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent6'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent6']}, {'int': 'int4', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent6']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent6']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent6'}
	id_to_int:{'int1': 'the cost of 5 packs of milk is $3 x 5 = $15', 'int2': 'the cost of 4 apples is $150 x 4 = $450', 'int3': 'so, marie paid a total of $50 + $15 + $450 + $12 = $48', 'int4': 'therefore, she ordered 48 / 8 = 2 boxes of pizza', 'hypothesis': 'the answer is 2'}



||||||||||||||||||||||

Reading gold proof
step:sent2 -> int1: Five packs of milk cost $3 x 5 = $15.
step_parts:['sent2 -> int1', ' Five packs of milk cost $3 x 5 = $15.']
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=five packs of milk cost $3 x 5 = $15
step: sent3 -> int2: Four apples cost $1.50 x 4 = $6.
step_parts:['sent3 -> int2', ' Four apples cost $1.50 x 4 = $6.']
lhs_ids:['sent3']	 rhs = int2	 all_ancestors={'sent3'}
	 rhs = int2, int_str=four apples cost $150 x 4 = $6
step: int1 & int2 & sent1 -> int3: The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.
step_parts:['int1 & int2 & sent1 -> int3', ' The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.']
lhs_ids:['int1', 'int2', 'sent1']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int3, int_str=the total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33
step: int3 & sent4 & sent5 -> int4: Thus, the boxes of pizza cost $50 - $33 = $17.
step_parts:['int3 & sent4 & sent5 -> int4', ' Thus, the boxes of pizza cost $50 - $33 = $17.']
lhs_ids:['int3', 'sent4', 'sent5']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = int4, int_str=thus, the boxes of pizza cost $50 - $33 = $17
step: int4 & sent6 -> int5: Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.
step_parts:['int4 & sent6 -> int5', ' Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.']
lhs_ids:['int4', 'sent6']	 rhs = int5	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3'}
	 rhs = int5, int_str=therefore, marie ordered $17/$850 = 2 boxes of pizza
step: int5 & sent6 -> hypothesis
step_parts:['int5 & sent6 -> hypothesis']
lhs_ids:['int5', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 2
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: Five packs of milk cost $3 x 5 = $15.; sent3 -> int2: Four apples cost $1.50 x 4 = $6.; int1 & int2 & sent1 -> int3: The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.; int3 & sent4 & sent5 -> int4: Thus, the boxes of pizza cost $50 - $33 = $17.; int4 & sent6 -> int5: Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.; int5 & sent6 -> hypothesis;
	sentences:['sent2 -> int1', 'sent3 -> int2', 'int1 & int2 & sent1 -> int3', 'int3 & sent4 & sent5 -> int4', 'int4 & sent6 -> int5', 'int5 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['sent3'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent1'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4', 'sent5'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent6'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent5', 'sent3', 'sent4']}, {'int': 'int5', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent6', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'five packs of milk cost $3 x 5 = $15', 'int2': 'four apples cost $150 x 4 = $6', 'int3': 'the total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33', 'int4': 'thus, the boxes of pizza cost $50 - $33 = $17', 'int5': 'therefore, marie ordered $17/$850 = 2 boxes of pizza', 'hypothesis': 'the answer is 2'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int3', 'int4': 'int3', 'hypothesis': 'int3'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int3', 'int4': 'int3', 'hypothesis': 'int3'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent6'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent6', 'sent5', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent6']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences:['int1 & int2 & sent1 & sent6 -> int3', 'int3 & sent6 -> int3', 'int3 & sent6 -> int3', 'sent2 -> int1', 'sent3 -> int2']
		sentences_gold:['int1 & int2 & sent1 -> int3', 'int3 & sent4 & sent5 -> int4', 'int4 & sent6 -> int5', 'int5 & sent6 -> hypothesis', 'sent2 -> int1', 'sent3 -> int2']
step:sent2 -> int1: Five packs of milk cost $3 x 5 = $15.
QID:GSM8K_25_c2b12baadd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Five packs of milk cost $3 x 5 = $15.', 'int2': 'Four apples cost $1.50 x 4 = $6.', 'int3': 'The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.', 'int4': 'Thus, the boxes of pizza cost $50 - $33 = $17.', 'int5': 'Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.', 'hypothesis': 'The answer is 2'}
step:sent2 -> int1: Five packs of milk cost $3 x 5 = $15.
step:sent3 -> int2: Four apples cost $1.50 x 4 = $6.
QID:GSM8K_25_c2b12baadd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Five packs of milk cost $3 x 5 = $15.', 'int2': 'Four apples cost $1.50 x 4 = $6.', 'int3': 'The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.', 'int4': 'Thus, the boxes of pizza cost $50 - $33 = $17.', 'int5': 'Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.', 'hypothesis': 'The answer is 2'}
step:sent3 -> int2: Four apples cost $1.50 x 4 = $6.
step:int1 & int2 & sent1 -> int3: The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.
QID:GSM8K_25_c2b12baadd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Five packs of milk cost $3 x 5 = $15.', 'int2': 'Four apples cost $1.50 x 4 = $6.', 'int3': 'The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.', 'int4': 'Thus, the boxes of pizza cost $50 - $33 = $17.', 'int5': 'Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.', 'hypothesis': 'The answer is 2'}
step:int1 & int2 & sent1 -> int3: The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.
QID:GSM8K_25_c2b12baadd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Five packs of milk cost $3 x 5 = $15.', 'int2': 'Four apples cost $1.50 x 4 = $6.', 'int3': 'The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.', 'int4': 'Thus, the boxes of pizza cost $50 - $33 = $17.', 'int5': 'Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.', 'hypothesis': 'The answer is 2'}
step:int1 & int2 & sent1 -> int3: The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.
QID:GSM8K_25_c2b12baadd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Five packs of milk cost $3 x 5 = $15.', 'int2': 'Four apples cost $1.50 x 4 = $6.', 'int3': 'The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.', 'int4': 'Thus, the boxes of pizza cost $50 - $33 = $17.', 'int5': 'Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.', 'hypothesis': 'The answer is 2'}
step:int1 & int2 & sent1 -> int3: The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.
step:int3 & sent4 & sent5 -> int4: Thus, the boxes of pizza cost $50 - $33 = $17.
QID:GSM8K_25_c2b12baadd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Five packs of milk cost $3 x 5 = $15.', 'int2': 'Four apples cost $1.50 x 4 = $6.', 'int3': 'The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.', 'int4': 'Thus, the boxes of pizza cost $50 - $33 = $17.', 'int5': 'Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.', 'hypothesis': 'The answer is 2'}
step:int3 & sent4 & sent5 -> int4: Thus, the boxes of pizza cost $50 - $33 = $17.
QID:GSM8K_25_c2b12baadd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Five packs of milk cost $3 x 5 = $15.', 'int2': 'Four apples cost $1.50 x 4 = $6.', 'int3': 'The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.', 'int4': 'Thus, the boxes of pizza cost $50 - $33 = $17.', 'int5': 'Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.', 'hypothesis': 'The answer is 2'}
step:int3 & sent4 & sent5 -> int4: Thus, the boxes of pizza cost $50 - $33 = $17.
QID:GSM8K_25_c2b12baadd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Five packs of milk cost $3 x 5 = $15.', 'int2': 'Four apples cost $1.50 x 4 = $6.', 'int3': 'The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.', 'int4': 'Thus, the boxes of pizza cost $50 - $33 = $17.', 'int5': 'Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.', 'hypothesis': 'The answer is 2'}
step:int3 & sent4 & sent5 -> int4: Thus, the boxes of pizza cost $50 - $33 = $17.
step:int4 & sent6 -> int5: Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.
QID:GSM8K_25_c2b12baadd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Five packs of milk cost $3 x 5 = $15.', 'int2': 'Four apples cost $1.50 x 4 = $6.', 'int3': 'The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.', 'int4': 'Thus, the boxes of pizza cost $50 - $33 = $17.', 'int5': 'Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.', 'hypothesis': 'The answer is 2'}
step:int4 & sent6 -> int5: Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.
QID:GSM8K_25_c2b12baadd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Five packs of milk cost $3 x 5 = $15.', 'int2': 'Four apples cost $1.50 x 4 = $6.', 'int3': 'The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.', 'int4': 'Thus, the boxes of pizza cost $50 - $33 = $17.', 'int5': 'Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.', 'hypothesis': 'The answer is 2'}
step:int4 & sent6 -> int5: Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.
step:int5 & sent6 -> hypothesis
QID:GSM8K_25_c2b12baadd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Five packs of milk cost $3 x 5 = $15.', 'int2': 'Four apples cost $1.50 x 4 = $6.', 'int3': 'The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.', 'int4': 'Thus, the boxes of pizza cost $50 - $33 = $17.', 'int5': 'Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.', 'hypothesis': 'The answer is 2'}
step:int5 & sent6 -> hypothesis
QID:GSM8K_25_c2b12baadd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Five packs of milk cost $3 x 5 = $15.', 'int2': 'Four apples cost $1.50 x 4 = $6.', 'int3': 'The total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33.', 'int4': 'Thus, the boxes of pizza cost $50 - $33 = $17.', 'int5': 'Therefore, Marie ordered $17/$8.50 = 2 boxes of pizza.', 'hypothesis': 'The answer is 2'}
step:int5 & sent6 -> hypothesis
step:sent2 -> int1: The cost of 5 packs of milk is $3 x 5 = $15.
step:sent3 -> int2: The cost of 4 apples is $1.50 x 4 = $4.50.
step:sent1 & int2 & int1 & sent6 -> int3: So, Marie paid a total of $50 + $15 + $4.50 + $12 = $48.
step:int3 & sent6 -> int4: Therefore, she ordered 48 / 8 = 2 boxes of pizza.
step:int4 & sent6 -> hypothesis



======================

pred:sent3 & sent1 -> int1: The total cost of shorts is $16.50 x 3 = $24.; sent5 & sent2 & sent4 -> int2: The total cost of the shoes is $42 + $22.50 = $62.; int2 & int1 & sent6 -> int3: Mishka spent $24 + $62 + $24 = $242.; sent6 & int3 -> hypothesis
gold:sent1 & sent2 & sent3 & sent4 & sent5 -> int1: 3 * (16.50 + 22.50 + 42) = $243; int1 & sent6 -> int2: Mishka spent $243 on clothing.; int2 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent1 -> int1: The total cost of shorts is $16.50 x 3 = $24.
step_parts:['sent3 & sent1 -> int1', ' The total cost of shorts is $16.50 x 3 = $24.']
lhs_ids:['sent3', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent3'}
	 rhs = int1, int_str=the total cost of shorts is $1650 x 3 = $24
step: sent5 & sent2 & sent4 -> int2: The total cost of the shoes is $42 + $22.50 = $62.
step_parts:['sent5 & sent2 & sent4 -> int2', ' The total cost of the shoes is $42 + $22.50 = $62.']
lhs_ids:['sent5', 'sent2', 'sent4']	 rhs = int2	 all_ancestors={'sent2', 'sent4', 'sent5'}
	 rhs = int2, int_str=the total cost of the shoes is $42 + $2250 = $62
step: int2 & int1 & sent6 -> int3: Mishka spent $24 + $62 + $24 = $242.
step_parts:['int2 & int1 & sent6 -> int3', ' Mishka spent $24 + $62 + $24 = $242.']
lhs_ids:['int2', 'int1', 'sent6']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3'}
	 rhs = int3, int_str=mishka spent $24 + $62 + $24 = $242
step: sent6 & int3 -> hypothesis
step_parts:['sent6 & int3 -> hypothesis']
lhs_ids:['sent6', 'int3']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent1', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 243
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent1 -> int1: The total cost of shorts is $16.50 x 3 = $24.; sent5 & sent2 & sent4 -> int2: The total cost of the shoes is $42 + $22.50 = $62.; int2 & int1 & sent6 -> int3: Mishka spent $24 + $62 + $24 = $242.; sent6 & int3 -> hypothesis
	sentences:['sent1 & sent3 -> int1', 'sent2 & sent4 & sent5 -> int2', 'int1 & int2 & sent6 -> int3', 'int3 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent3'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent4', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent6'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent4', 'sent5']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent1', 'sent2', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent6', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'the total cost of shorts is $1650 x 3 = $24', 'int2': 'the total cost of the shoes is $42 + $2250 = $62', 'int3': 'mishka spent $24 + $62 + $24 = $242', 'hypothesis': 'the answer is 243'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 & sent3 & sent4 & sent5 -> int1: 3 * (16.50 + 22.50 + 42) = $243
step_parts:['sent1 & sent2 & sent3 & sent4 & sent5 -> int1', ' 3 * (16.50 + 22.50 + 42) = $243']
lhs_ids:['sent1', 'sent2', 'sent3', 'sent4', 'sent5']	 rhs = int1	 all_ancestors={'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = int1, int_str=3 * (1650 + 2250 + 42) = $243
step: int1 & sent6 -> int2: Mishka spent $243 on clothing.
step_parts:['int1 & sent6 -> int2', ' Mishka spent $243 on clothing.']
lhs_ids:['int1', 'sent6']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3'}
	 rhs = int2, int_str=mishka spent $243 on clothing
step: int2 & sent6 -> hypothesis
step_parts:['int2 & sent6 -> hypothesis']
lhs_ids:['int2', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 243
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 & sent3 & sent4 & sent5 -> int1: 3 * (16.50 + 22.50 + 42) = $243; int1 & sent6 -> int2: Mishka spent $243 on clothing.; int2 & sent6 -> hypothesis;
	sentences:['sent1 & sent2 & sent3 & sent4 & sent5 -> int1', 'int1 & sent6 -> int2', 'int2 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2', 'sent3', 'sent4', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent6'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2', 'sent5', 'sent3', 'sent4']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent6', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': '3 * (1650 + 2250 + 42) = $243', 'int2': 'mishka spent $243 on clothing', 'hypothesis': 'the answer is 243'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int2', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int2', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent6', 'sent5', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent6', 'sent5', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences:['int1 & int1 & sent6 -> int2', 'int2 & sent6 -> int2', 'sent1 & sent3 -> int1', 'sent2 & sent4 & sent5 -> int1']
		sentences_gold:['int1 & sent6 -> int2', 'int2 & sent6 -> hypothesis', 'sent1 & sent2 & sent3 & sent4 & sent5 -> int1']
step:sent1 & sent2 & sent3 & sent4 & sent5 -> int1: 3 * (16.50 + 22.50 + 42) = $243
QID:GSM8K_26_ab1d75e849
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '3 * (16.50 + 22.50 + 42) = $243', 'int2': 'Mishka spent $243 on clothing.', 'hypothesis': 'The answer is 243'}
step:sent1 & sent2 & sent3 & sent4 & sent5 -> int1: 3 * (16.50 + 22.50 + 42) = $243
QID:GSM8K_26_ab1d75e849
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '3 * (16.50 + 22.50 + 42) = $243', 'int2': 'Mishka spent $243 on clothing.', 'hypothesis': 'The answer is 243'}
step:sent1 & sent2 & sent3 & sent4 & sent5 -> int1: 3 * (16.50 + 22.50 + 42) = $243
QID:GSM8K_26_ab1d75e849
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '3 * (16.50 + 22.50 + 42) = $243', 'int2': 'Mishka spent $243 on clothing.', 'hypothesis': 'The answer is 243'}
step:sent1 & sent2 & sent3 & sent4 & sent5 -> int1: 3 * (16.50 + 22.50 + 42) = $243
QID:GSM8K_26_ab1d75e849
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '3 * (16.50 + 22.50 + 42) = $243', 'int2': 'Mishka spent $243 on clothing.', 'hypothesis': 'The answer is 243'}
step:sent1 & sent2 & sent3 & sent4 & sent5 -> int1: 3 * (16.50 + 22.50 + 42) = $243
QID:GSM8K_26_ab1d75e849
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '3 * (16.50 + 22.50 + 42) = $243', 'int2': 'Mishka spent $243 on clothing.', 'hypothesis': 'The answer is 243'}
step:sent1 & sent2 & sent3 & sent4 & sent5 -> int1: 3 * (16.50 + 22.50 + 42) = $243
step:int1 & sent6 -> int2: Mishka spent $243 on clothing.
QID:GSM8K_26_ab1d75e849
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '3 * (16.50 + 22.50 + 42) = $243', 'int2': 'Mishka spent $243 on clothing.', 'hypothesis': 'The answer is 243'}
step:int1 & sent6 -> int2: Mishka spent $243 on clothing.
QID:GSM8K_26_ab1d75e849
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '3 * (16.50 + 22.50 + 42) = $243', 'int2': 'Mishka spent $243 on clothing.', 'hypothesis': 'The answer is 243'}
step:int1 & sent6 -> int2: Mishka spent $243 on clothing.
step:int2 & sent6 -> hypothesis
QID:GSM8K_26_ab1d75e849
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '3 * (16.50 + 22.50 + 42) = $243', 'int2': 'Mishka spent $243 on clothing.', 'hypothesis': 'The answer is 243'}
step:int2 & sent6 -> hypothesis
QID:GSM8K_26_ab1d75e849
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '3 * (16.50 + 22.50 + 42) = $243', 'int2': 'Mishka spent $243 on clothing.', 'hypothesis': 'The answer is 243'}
step:int2 & sent6 -> hypothesis
step:sent3 & sent1 -> int1: The total cost of shorts is $16.50 x 3 = $24.
step:sent5 & sent2 & sent4 -> int2: The total cost of the shoes is $42 + $22.50 = $62.
step:int2 & int1 & sent6 -> int3: Mishka spent $24 + $62 + $24 = $242.
step:sent6 & int3 -> hypothesis



======================

pred:sent2 -> int1: She buys 15 servings of ice cream every night and there are 60 days in 60 days so that's 15*4 = 180 servings; sent2 -> int2: She buys 15 servings of ice cream per carton and there are 12 days in 1 year so that's 15*12 = 180 servings; sent1 & sent3 -> int3: Cynthia eats 1 serving every night and there are 60 days in 60 days so she eats 1*60 = 180 servings; sent3 & int2 -> int4: She eats 180 servings of ice cream and there are 60 days in 1 year so that's 180/60 = 4 servings; sent3 & int2 -> int5: She eats 180 servings of ice cream after 60 days so she will eat 180*60 = 464 servings; int4 & int5 & int3 -> int6: In total she will spend 464/4 = $16.00 on ice cream; int1 & sent3 & int6 -> hypothesis
gold:sent1 & sent2 & sent3 -> int1: Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream; int1 & sent2 -> int2: If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00; int2 & sent3 -> hypothesis;



======================

Reading predicted proof
step:sent2 -> int1: She buys 15 servings of ice cream every night and there are 60 days in 60 days so that's 15*4 = 180 servings
step_parts:['sent2 -> int1', " She buys 15 servings of ice cream every night and there are 60 days in 60 days so that's 15*4 = 180 servings"]
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=she buys 15 servings of ice cream every night and there are 60 days in 60 days so that's 15*4 = 180 servings
step: sent2 -> int2: She buys 15 servings of ice cream per carton and there are 12 days in 1 year so that's 15*12 = 180 servings
step_parts:['sent2 -> int2', " She buys 15 servings of ice cream per carton and there are 12 days in 1 year so that's 15*12 = 180 servings"]
lhs_ids:['sent2']	 rhs = int2	 all_ancestors={'sent2'}
	 rhs = int2, int_str=she buys 15 servings of ice cream per carton and there are 12 days in 1 year so that's 15*12 = 180 servings
step: sent1 & sent3 -> int3: Cynthia eats 1 serving every night and there are 60 days in 60 days so she eats 1*60 = 180 servings
step_parts:['sent1 & sent3 -> int3', ' Cynthia eats 1 serving every night and there are 60 days in 60 days so she eats 1*60 = 180 servings']
lhs_ids:['sent1', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent3'}
	 rhs = int3, int_str=cynthia eats 1 serving every night and there are 60 days in 60 days so she eats 1*60 = 180 servings
step: sent3 & int2 -> int4: She eats 180 servings of ice cream and there are 60 days in 1 year so that's 180/60 = 4 servings
step_parts:['sent3 & int2 -> int4', " She eats 180 servings of ice cream and there are 60 days in 1 year so that's 180/60 = 4 servings"]
lhs_ids:['sent3', 'int2']	 rhs = int4	 all_ancestors={'sent2', 'sent3'}
	 rhs = int4, int_str=she eats 180 servings of ice cream and there are 60 days in 1 year so that's 180/60 = 4 servings
step: sent3 & int2 -> int5: She eats 180 servings of ice cream after 60 days so she will eat 180*60 = 464 servings
step_parts:['sent3 & int2 -> int5', ' She eats 180 servings of ice cream after 60 days so she will eat 180*60 = 464 servings']
lhs_ids:['sent3', 'int2']	 rhs = int5	 all_ancestors={'sent2', 'sent3'}
	 rhs = int5, int_str=she eats 180 servings of ice cream after 60 days so she will eat 180*60 = 464 servings
step: int4 & int5 & int3 -> int6: In total she will spend 464/4 = $16.00 on ice cream
step_parts:['int4 & int5 & int3 -> int6', ' In total she will spend 464/4 = $16.00 on ice cream']
lhs_ids:['int4', 'int5', 'int3']	 rhs = int6	 all_ancestors={'sent2', 'sent3', 'sent1'}
	 rhs = int6, int_str=in total she will spend 464/4 = $1600 on ice cream
step: int1 & sent3 & int6 -> hypothesis
step_parts:['int1 & sent3 & int6 -> hypothesis']
lhs_ids:['int1', 'sent3', 'int6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 16
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: She buys 15 servings of ice cream every night and there are 60 days in 60 days so that's 15*4 = 180 servings; sent2 -> int2: She buys 15 servings of ice cream per carton and there are 12 days in 1 year so that's 15*12 = 180 servings; sent1 & sent3 -> int3: Cynthia eats 1 serving every night and there are 60 days in 60 days so she eats 1*60 = 180 servings; sent3 & int2 -> int4: She eats 180 servings of ice cream and there are 60 days in 1 year so that's 180/60 = 4 servings; sent3 & int2 -> int5: She eats 180 servings of ice cream after 60 days so she will eat 180*60 = 464 servings; int4 & int5 & int3 -> int6: In total she will spend 464/4 = $16.00 on ice cream; int1 & sent3 & int6 -> hypothesis
	sentences:['sent2 -> int1', 'sent2 -> int2', 'sent1 & sent3 -> int3', 'int2 & sent3 -> int4', 'int2 & sent3 -> int5', 'int3 & int4 & int5 -> int6', 'int1 & int6 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['sent2'], 'rhs': 'int2'}, {'lhs': ['sent1', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int2', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int2', 'sent3'], 'rhs': 'int5'}, {'lhs': ['int3', 'int4', 'int5'], 'rhs': 'int6'}, {'lhs': ['int1', 'int6', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent3']}, {'int': 'int4', 'ancestors': ['sent2', 'sent3']}, {'int': 'int5', 'ancestors': ['sent2', 'sent3']}, {'int': 'int6', 'ancestors': ['sent2', 'sent3', 'sent1']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': "she buys 15 servings of ice cream every night and there are 60 days in 60 days so that's 15*4 = 180 servings", 'int2': "she buys 15 servings of ice cream per carton and there are 12 days in 1 year so that's 15*12 = 180 servings", 'int3': 'cynthia eats 1 serving every night and there are 60 days in 60 days so she eats 1*60 = 180 servings', 'int4': "she eats 180 servings of ice cream and there are 60 days in 1 year so that's 180/60 = 4 servings", 'int5': 'she eats 180 servings of ice cream after 60 days so she will eat 180*60 = 464 servings', 'int6': 'in total she will spend 464/4 = $1600 on ice cream', 'hypothesis': 'the answer is 16'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 & sent3 -> int1: Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream
step_parts:['sent1 & sent2 & sent3 -> int1', ' Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream']
lhs_ids:['sent1', 'sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int1, int_str=each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream
step: int1 & sent2 -> int2: If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00
step_parts:['int1 & sent2 -> int2', ' If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=if each carton costs $400 and she needs 4 containers then it will cost her 4*4 = $1600
step: int2 & sent3 -> hypothesis
step_parts:['int2 & sent3 -> hypothesis']
lhs_ids:['int2', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 16
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 & sent3 -> int1: Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream; int1 & sent2 -> int2: If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00; int2 & sent3 -> hypothesis;
	sentences:['sent1 & sent2 & sent3 -> int1', 'int1 & sent2 -> int2', 'int2 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream', 'int2': 'if each carton costs $400 and she needs 4 containers then it will cost her 4*4 = $1600', 'hypothesis': 'the answer is 16'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'int1', 'int5': 'int1', 'int6': 'int1', 'hypothesis': 'int1'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'int1', 'int5': 'int1', 'int6': 'int1', 'hypothesis': 'int1'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3'}
		sentences:['sent1', 'sent2', 'sent3']
		sentences_gold:['sent1', 'sent2', 'sent3']
		sentences:['int1 & int1 & int1 -> int1', 'int1 & int1 & sent3 -> int1', 'int1 & sent3 -> int1', 'int1 & sent3 -> int1', 'sent1 & sent3 -> int1', 'sent2 -> int1', 'sent2 -> int1']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & sent3 -> hypothesis', 'sent1 & sent2 & sent3 -> int1']
step:sent1 & sent2 & sent3 -> int1: Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream
QID:GSM8K_27_05688c8d4e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream', 'int2': 'If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00', 'hypothesis': 'The answer is 16'}
step:sent1 & sent2 & sent3 -> int1: Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream
QID:GSM8K_27_05688c8d4e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream', 'int2': 'If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00', 'hypothesis': 'The answer is 16'}
step:sent1 & sent2 & sent3 -> int1: Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream
QID:GSM8K_27_05688c8d4e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream', 'int2': 'If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00', 'hypothesis': 'The answer is 16'}
step:sent1 & sent2 & sent3 -> int1: Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream
step:int1 & sent2 -> int2: If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00
QID:GSM8K_27_05688c8d4e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream', 'int2': 'If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00', 'hypothesis': 'The answer is 16'}
step:int1 & sent2 -> int2: If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00
QID:GSM8K_27_05688c8d4e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream', 'int2': 'If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00', 'hypothesis': 'The answer is 16'}
step:int1 & sent2 -> int2: If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00
step:int2 & sent3 -> hypothesis
QID:GSM8K_27_05688c8d4e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream', 'int2': 'If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00', 'hypothesis': 'The answer is 16'}
step:int2 & sent3 -> hypothesis
QID:GSM8K_27_05688c8d4e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream', 'int2': 'If each carton costs $4.00 and she needs 4 containers then it will cost her 4*4 = $16.00', 'hypothesis': 'The answer is 16'}
step:int2 & sent3 -> hypothesis
step:sent2 -> int1: She buys 15 servings of ice cream every night and there are 60 days in 60 days so that's 15*4 = 180 servings
step:sent2 -> int2: She buys 15 servings of ice cream per carton and there are 12 days in 1 year so that's 15*12 = 180 servings
step:sent1 & sent3 -> int3: Cynthia eats 1 serving every night and there are 60 days in 60 days so she eats 1*60 = 180 servings
step:sent3 & int2 -> int4: She eats 180 servings of ice cream and there are 60 days in 1 year so that's 180/60 = 4 servings
step:sent3 & int2 -> int5: She eats 180 servings of ice cream after 60 days so she will eat 180*60 = 464 servings
step:int4 & int5 & int3 -> int6: In total she will spend 464/4 = $16.00 on ice cream
step:int1 & sent3 & int6 -> hypothesis



======================

pred:sent2 & sent1 -> int1: He traveled 60-20=30 miles after his first stop.; sent3 & int1 -> int2: He traveled 30-15=25 miles between his first and second stops.; int2 & sent4 -> hypothesis
gold:sent2 & sent3 -> int1: He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.; int1 & sent1 -> int2: Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.; int2 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent1 -> int1: He traveled 60-20=30 miles after his first stop.
step_parts:['sent2 & sent1 -> int1', ' He traveled 60-20=30 miles after his first stop.']
lhs_ids:['sent2', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=he traveled 60-20=30 miles after his first stop
step: sent3 & int1 -> int2: He traveled 30-15=25 miles between his first and second stops.
step_parts:['sent3 & int1 -> int2', ' He traveled 30-15=25 miles between his first and second stops.']
lhs_ids:['sent3', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int2, int_str=he traveled 30-15=25 miles between his first and second stops
step: int2 & sent4 -> hypothesis
step_parts:['int2 & sent4 -> hypothesis']
lhs_ids:['int2', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 25
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent1 -> int1: He traveled 60-20=30 miles after his first stop.; sent3 & int1 -> int2: He traveled 30-15=25 miles between his first and second stops.; int2 & sent4 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent3 -> int2', 'int2 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'he traveled 60-20=30 miles after his first stop', 'int2': 'he traveled 30-15=25 miles between his first and second stops', 'hypothesis': 'the answer is 25'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent3 -> int1: He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.
step_parts:['sent2 & sent3 -> int1', ' He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=he traveled 20 miles + 15 miles = 35 miles not counting the distance between stops
step: int1 & sent1 -> int2: Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.
step_parts:['int1 & sent1 -> int2', ' Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=henry traveled 60 miles - 35 miles = 25 miles between his first and second stop
step: int2 & sent4 -> hypothesis
step_parts:['int2 & sent4 -> hypothesis']
lhs_ids:['int2', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 25
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.; int1 & sent1 -> int2: Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.; int2 & sent4 -> hypothesis;
	sentences:['sent2 & sent3 -> int1', 'int1 & sent1 -> int2', 'int2 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'he traveled 20 miles + 15 miles = 35 miles not counting the distance between stops', 'int2': 'henry traveled 60 miles - 35 miles = 25 miles between his first and second stop', 'hypothesis': 'the answer is 25'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['int2 & sent3 -> int2', 'int2 & sent4 -> hypothesis', 'sent1 & sent2 -> int2']
		sentences_gold:['int1 & sent1 -> int2', 'int2 & sent4 -> hypothesis', 'sent2 & sent3 -> int1']
step:sent2 & sent3 -> int1: He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.
QID:GSM8K_28_931b3848f4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.', 'int2': 'Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.', 'hypothesis': 'The answer is 25'}
step:sent2 & sent3 -> int1: He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.
QID:GSM8K_28_931b3848f4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.', 'int2': 'Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.', 'hypothesis': 'The answer is 25'}
step:sent2 & sent3 -> int1: He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.
step:int1 & sent1 -> int2: Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.
QID:GSM8K_28_931b3848f4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.', 'int2': 'Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.', 'hypothesis': 'The answer is 25'}
step:int1 & sent1 -> int2: Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.
QID:GSM8K_28_931b3848f4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.', 'int2': 'Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.', 'hypothesis': 'The answer is 25'}
step:int1 & sent1 -> int2: Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.
step:int2 & sent4 -> hypothesis
QID:GSM8K_28_931b3848f4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.', 'int2': 'Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.', 'hypothesis': 'The answer is 25'}
step:int2 & sent4 -> hypothesis
QID:GSM8K_28_931b3848f4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He traveled 20 miles + 15 miles = 35 miles not counting the distance between stops.', 'int2': 'Henry traveled 60 miles - 35 miles = 25 miles between his first and second stop.', 'hypothesis': 'The answer is 25'}
step:int2 & sent4 -> hypothesis
step:sent2 & sent1 -> int1: He traveled 60-20=30 miles after his first stop.
step:sent3 & int1 -> int2: He traveled 30-15=25 miles between his first and second stops.
step:int2 & sent4 -> hypothesis



======================

pred:sent5 & sent4 -> int1: The second pair of heels costs $33 x 2 = $135.; sent3 & int1 -> int2: So the boots cost $135 - $5 = $110; int2 & sent6 & sent2 -> int3: Therefore, Gloria has to choose between the boots and the heels, which means she has to spend $110 - $110 = $104.; int3 & sent6 -> hypothesis
gold:sent4 -> int1: The second pair of heels costs 33 * 2 = $66.; int1 & sent4 & sent5 -> int2: The heels together cost 66 + 33 = $99.; int2 & sent2 & sent3 -> int3: The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.; int3 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent5 & sent4 -> int1: The second pair of heels costs $33 x 2 = $135.
step_parts:['sent5 & sent4 -> int1', ' The second pair of heels costs $33 x 2 = $135.']
lhs_ids:['sent5', 'sent4']	 rhs = int1	 all_ancestors={'sent4', 'sent5'}
	 rhs = int1, int_str=the second pair of heels costs $33 x 2 = $135
step: sent3 & int1 -> int2: So the boots cost $135 - $5 = $110
step_parts:['sent3 & int1 -> int2', ' So the boots cost $135 - $5 = $110']
lhs_ids:['sent3', 'int1']	 rhs = int2	 all_ancestors={'sent3', 'sent4', 'sent5'}
	 rhs = int2, int_str=so the boots cost $135 - $5 = $110
step: int2 & sent6 & sent2 -> int3: Therefore, Gloria has to choose between the boots and the heels, which means she has to spend $110 - $110 = $104.
step_parts:['int2 & sent6 & sent2 -> int3', ' Therefore, Gloria has to choose between the boots and the heels, which means she has to spend $110 - $110 = $104.']
lhs_ids:['int2', 'sent6', 'sent2']	 rhs = int3	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = int3, int_str=therefore, gloria has to choose between the boots and the heels, which means she has to spend $110 - $110 = $104
step: int3 & sent6 -> hypothesis
step_parts:['int3 & sent6 -> hypothesis']
lhs_ids:['int3', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 104
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent5 & sent4 -> int1: The second pair of heels costs $33 x 2 = $135.; sent3 & int1 -> int2: So the boots cost $135 - $5 = $110; int2 & sent6 & sent2 -> int3: Therefore, Gloria has to choose between the boots and the heels, which means she has to spend $110 - $110 = $104.; int3 & sent6 -> hypothesis
	sentences:['sent4 & sent5 -> int1', 'int1 & sent3 -> int2', 'int2 & sent2 & sent6 -> int3', 'int3 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent4', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2', 'sent6'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent4', 'sent5']}, {'int': 'int2', 'ancestors': ['sent3', 'sent4', 'sent5']}, {'int': 'int3', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'the second pair of heels costs $33 x 2 = $135', 'int2': 'so the boots cost $135 - $5 = $110', 'int3': 'therefore, gloria has to choose between the boots and the heels, which means she has to spend $110 - $110 = $104', 'hypothesis': 'the answer is 104'}



||||||||||||||||||||||

Reading gold proof
step:sent4 -> int1: The second pair of heels costs 33 * 2 = $66.
step_parts:['sent4 -> int1', ' The second pair of heels costs 33 * 2 = $66.']
lhs_ids:['sent4']	 rhs = int1	 all_ancestors={'sent4'}
	 rhs = int1, int_str=the second pair of heels costs 33 * 2 = $66
step: int1 & sent4 & sent5 -> int2: The heels together cost 66 + 33 = $99.
step_parts:['int1 & sent4 & sent5 -> int2', ' The heels together cost 66 + 33 = $99.']
lhs_ids:['int1', 'sent4', 'sent5']	 rhs = int2	 all_ancestors={'sent4', 'sent5'}
	 rhs = int2, int_str=the heels together cost 66 + 33 = $99
step: int2 & sent2 & sent3 -> int3: The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.
step_parts:['int2 & sent2 & sent3 -> int3', ' The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.']
lhs_ids:['int2', 'sent2', 'sent3']	 rhs = int3	 all_ancestors={'sent2', 'sent4', 'sent3', 'sent5'}
	 rhs = int3, int_str=the boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104
step: int3 & sent6 -> hypothesis
step_parts:['int3 & sent6 -> hypothesis']
lhs_ids:['int3', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 104
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent4 -> int1: The second pair of heels costs 33 * 2 = $66.; int1 & sent4 & sent5 -> int2: The heels together cost 66 + 33 = $99.; int2 & sent2 & sent3 -> int3: The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.; int3 & sent6 -> hypothesis;
	sentences:['sent4 -> int1', 'int1 & sent4 & sent5 -> int2', 'int2 & sent2 & sent3 -> int3', 'int3 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent4']}, {'int': 'int2', 'ancestors': ['sent4', 'sent5']}, {'int': 'int3', 'ancestors': ['sent2', 'sent4', 'sent3', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent3', 'sent4']}]
	relevant_sentences:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'the second pair of heels costs 33 * 2 = $66', 'int2': 'the heels together cost 66 + 33 = $99', 'int3': 'the boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104', 'hypothesis': 'the answer is 104'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int3', 'int3': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int3', 'int3': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
		sentences:['sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences:['hypothesis & sent6 -> hypothesis', 'int2 & sent3 -> int3', 'int3 & sent2 & sent6 -> hypothesis', 'sent4 & sent5 -> int2']
		sentences_gold:['int1 & sent4 & sent5 -> int2', 'int2 & sent2 & sent3 -> int3', 'int3 & sent6 -> hypothesis', 'sent4 -> int1']
step:sent4 -> int1: The second pair of heels costs 33 * 2 = $66.
QID:GSM8K_29_bea1855c2f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second pair of heels costs 33 * 2 = $66.', 'int2': 'The heels together cost 66 + 33 = $99.', 'int3': 'The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.', 'hypothesis': 'The answer is 104'}
step:sent4 -> int1: The second pair of heels costs 33 * 2 = $66.
step:int1 & sent4 & sent5 -> int2: The heels together cost 66 + 33 = $99.
QID:GSM8K_29_bea1855c2f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second pair of heels costs 33 * 2 = $66.', 'int2': 'The heels together cost 66 + 33 = $99.', 'int3': 'The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.', 'hypothesis': 'The answer is 104'}
step:int1 & sent4 & sent5 -> int2: The heels together cost 66 + 33 = $99.
QID:GSM8K_29_bea1855c2f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second pair of heels costs 33 * 2 = $66.', 'int2': 'The heels together cost 66 + 33 = $99.', 'int3': 'The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.', 'hypothesis': 'The answer is 104'}
step:int1 & sent4 & sent5 -> int2: The heels together cost 66 + 33 = $99.
QID:GSM8K_29_bea1855c2f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second pair of heels costs 33 * 2 = $66.', 'int2': 'The heels together cost 66 + 33 = $99.', 'int3': 'The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.', 'hypothesis': 'The answer is 104'}
step:int1 & sent4 & sent5 -> int2: The heels together cost 66 + 33 = $99.
step:int2 & sent2 & sent3 -> int3: The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.
QID:GSM8K_29_bea1855c2f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second pair of heels costs 33 * 2 = $66.', 'int2': 'The heels together cost 66 + 33 = $99.', 'int3': 'The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.', 'hypothesis': 'The answer is 104'}
step:int2 & sent2 & sent3 -> int3: The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.
QID:GSM8K_29_bea1855c2f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second pair of heels costs 33 * 2 = $66.', 'int2': 'The heels together cost 66 + 33 = $99.', 'int3': 'The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.', 'hypothesis': 'The answer is 104'}
step:int2 & sent2 & sent3 -> int3: The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.
QID:GSM8K_29_bea1855c2f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second pair of heels costs 33 * 2 = $66.', 'int2': 'The heels together cost 66 + 33 = $99.', 'int3': 'The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.', 'hypothesis': 'The answer is 104'}
step:int2 & sent2 & sent3 -> int3: The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.
step:int3 & sent6 -> hypothesis
QID:GSM8K_29_bea1855c2f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second pair of heels costs 33 * 2 = $66.', 'int2': 'The heels together cost 66 + 33 = $99.', 'int3': 'The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.', 'hypothesis': 'The answer is 104'}
step:int3 & sent6 -> hypothesis
QID:GSM8K_29_bea1855c2f
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second pair of heels costs 33 * 2 = $66.', 'int2': 'The heels together cost 66 + 33 = $99.', 'int3': 'The boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104.', 'hypothesis': 'The answer is 104'}
step:int3 & sent6 -> hypothesis
step:sent5 & sent4 -> int1: The second pair of heels costs $33 x 2 = $135.
step:sent3 & int1 -> int2: So the boots cost $135 - $5 = $110
step:int2 & sent6 & sent2 -> int3: Therefore, Gloria has to choose between the boots and the heels, which means she has to spend $110 - $110 = $104.
step:int3 & sent6 -> hypothesis



======================

pred:sent1 -> int1: The total ratio of their ages is 7+11 = 27; sent3 & int1 -> int2: In 10 years' time, Allen will be 10*27 = 109 years old.; int2 & sent3 -> hypothesis
gold:sent1 -> int1: The total ratio representing their ages is 7+11= 18; int1 & sent2 -> int2: Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99; int2 & sent3 -> int3: If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old; int3 & sent3 -> hypothesis;



======================

Reading predicted proof
step:sent1 -> int1: The total ratio of their ages is 7+11 = 27
step_parts:['sent1 -> int1', ' The total ratio of their ages is 7+11 = 27']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=the total ratio of their ages is 7+11 = 27
step: sent3 & int1 -> int2: In 10 years' time, Allen will be 10*27 = 109 years old.
step_parts:['sent3 & int1 -> int2', " In 10 years' time, Allen will be 10*27 = 109 years old."]
lhs_ids:['sent3', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent3'}
	 rhs = int2, int_str=in 10 years' time, allen will be 10*27 = 109 years old
step: int2 & sent3 -> hypothesis
step_parts:['int2 & sent3 -> hypothesis']
lhs_ids:['int2', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 10931it [14:45, 25.61s/it]32it [15:11, 25.81s/it]33it [15:38, 25.98s/it]34it [15:58, 24.10s/it]35it [16:24, 24.73s/it]36it [16:37, 21.25s/it]37it [17:10, 24.70s/it]38it [17:36, 25.18s/it]39it [18:02, 25.52s/it]40it [18:22, 23.77s/it]41it [18:55, 26.47s/it]42it [19:21, 26.43s/it]43it [19:41, 24.41s/it]44it [20:01, 23.01s/it]45it [20:40, 27.98s/it]46it [21:00, 25.47s/it]47it [21:53, 33.67s/it]48it [22:12, 29.53s/it]49it [22:32, 26.58s/it]50it [23:18, 32.38s/it]51it [23:44, 30.54s/it]52it [24:04, 27.28s/it]53it [24:50, 32.88s/it]54it [25:16, 30.91s/it]55it [25:36, 27.53s/it]56it [25:55, 25.12s/it]57it [26:15, 23.42s/it]58it [28:25, 55.46s/it]59it [28:38, 42.77s/it]60it [29:05, 37.92s/it]61it [29:31, 34.32s/it]
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: The total ratio of their ages is 7+11 = 27; sent3 & int1 -> int2: In 10 years' time, Allen will be 10*27 = 109 years old.; int2 & sent3 -> hypothesis
	sentences:['sent1 -> int1', 'int1 & sent3 -> int2', 'int2 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3']}]
	relevant_sentences:{'sent1', 'sent3'}
	id_to_int:{'int1': 'the total ratio of their ages is 7+11 = 27', 'int2': "in 10 years' time, allen will be 10*27 = 109 years old", 'hypothesis': 'the answer is 109'}



||||||||||||||||||||||

Reading gold proof
step:sent1 -> int1: The total ratio representing their ages is 7+11= 18
step_parts:['sent1 -> int1', ' The total ratio representing their ages is 7+11= 18']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=the total ratio representing their ages is 7+11= 18
step: int1 & sent2 -> int2: Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99
step_parts:['int1 & sent2 -> int2', " Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99"]
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=since the fraction of the ratio that represents allen's age is 11/18, allen's current age is 11/18*162 = 99
step: int2 & sent3 -> int3: If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old
step_parts:['int2 & sent3 -> int3', ' If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old']
lhs_ids:['int2', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int3, int_str=if allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old
step: int3 & sent3 -> hypothesis
step_parts:['int3 & sent3 -> hypothesis']
lhs_ids:['int3', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 109
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: The total ratio representing their ages is 7+11= 18; int1 & sent2 -> int2: Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99; int2 & sent3 -> int3: If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old; int3 & sent3 -> hypothesis;
	sentences:['sent1 -> int1', 'int1 & sent2 -> int2', 'int2 & sent3 -> int3', 'int3 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'the total ratio representing their ages is 7+11= 18', 'int2': "since the fraction of the ratio that represents allen's age is 11/18, allen's current age is 11/18*162 = 99", 'int3': 'if allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old', 'hypothesis': 'the answer is 109'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'hypothesis': 'int3'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'hypothesis': 'int3'}
relevant_sentences_pred:{'sent1', 'sent3'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3'}
		sentences:['sent1', 'sent3']
		sentences_gold:['sent1', 'sent2', 'sent3']
		sentences:['int1 & sent3 -> int3', 'int3 & sent3 -> int3', 'sent1 -> int1']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & sent3 -> int3', 'int3 & sent3 -> hypothesis', 'sent1 -> int1']
step:sent1 -> int1: The total ratio representing their ages is 7+11= 18
QID:GSM8K_30_d5513cdd8c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total ratio representing their ages is 7+11= 18', 'int2': "Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99", 'int3': 'If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old', 'hypothesis': 'The answer is 109'}
step:sent1 -> int1: The total ratio representing their ages is 7+11= 18
step:int1 & sent2 -> int2: Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99
QID:GSM8K_30_d5513cdd8c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total ratio representing their ages is 7+11= 18', 'int2': "Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99", 'int3': 'If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old', 'hypothesis': 'The answer is 109'}
step:int1 & sent2 -> int2: Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99
QID:GSM8K_30_d5513cdd8c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total ratio representing their ages is 7+11= 18', 'int2': "Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99", 'int3': 'If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old', 'hypothesis': 'The answer is 109'}
step:int1 & sent2 -> int2: Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99
step:int2 & sent3 -> int3: If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old
QID:GSM8K_30_d5513cdd8c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total ratio representing their ages is 7+11= 18', 'int2': "Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99", 'int3': 'If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old', 'hypothesis': 'The answer is 109'}
step:int2 & sent3 -> int3: If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old
QID:GSM8K_30_d5513cdd8c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total ratio representing their ages is 7+11= 18', 'int2': "Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99", 'int3': 'If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old', 'hypothesis': 'The answer is 109'}
step:int2 & sent3 -> int3: If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old
step:int3 & sent3 -> hypothesis
QID:GSM8K_30_d5513cdd8c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total ratio representing their ages is 7+11= 18', 'int2': "Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99", 'int3': 'If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old', 'hypothesis': 'The answer is 109'}
step:int3 & sent3 -> hypothesis
QID:GSM8K_30_d5513cdd8c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total ratio representing their ages is 7+11= 18', 'int2': "Since the fraction of the ratio that represents Allen's age is 11/18, Allen's current age is 11/18*162 = 99", 'int3': 'If Allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old', 'hypothesis': 'The answer is 109'}
step:int3 & sent3 -> hypothesis
step:sent1 -> int1: The total ratio of their ages is 7+11 = 27
step:sent3 & int1 -> int2: In 10 years' time, Allen will be 10*27 = 109 years old.
step:int2 & sent3 -> hypothesis



======================

pred:sent4 & sent3 -> int1: Half of the first number is 20/2=30 jelly beans.; sent5 & int1 -> int2: The second number is 30+25=40 jelly beans.; int2 & sent3 & sent6 -> int3: The average of their guess is 40+20=80 jelly beans.; int3 & sent3 -> hypothesis
gold:sent3 & sent4 -> int1: The second person guessed 60 because 20 + (80/2)= 60; sent3 & sent5 -> int2: The second guessed 100 because 80 x 1.25 = 100; int1 & int2 & sent3 -> int3: The total amount guessed is 240 because 80 + 60 + 100 = 240; int1 & int2 & int3 & sent3 -> int4: The average amount guessed is 80 because 240 / 3 = 80; int4 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent4 & sent3 -> int1: Half of the first number is 20/2=30 jelly beans.
step_parts:['sent4 & sent3 -> int1', ' Half of the first number is 20/2=30 jelly beans.']
lhs_ids:['sent4', 'sent3']	 rhs = int1	 all_ancestors={'sent4', 'sent3'}
	 rhs = int1, int_str=half of the first number is 20/2=30 jelly beans
step: sent5 & int1 -> int2: The second number is 30+25=40 jelly beans.
step_parts:['sent5 & int1 -> int2', ' The second number is 30+25=40 jelly beans.']
lhs_ids:['sent5', 'int1']	 rhs = int2	 all_ancestors={'sent4', 'sent3', 'sent5'}
	 rhs = int2, int_str=the second number is 30+25=40 jelly beans
step: int2 & sent3 & sent6 -> int3: The average of their guess is 40+20=80 jelly beans.
step_parts:['int2 & sent3 & sent6 -> int3', ' The average of their guess is 40+20=80 jelly beans.']
lhs_ids:['int2', 'sent3', 'sent6']	 rhs = int3	 all_ancestors={'sent6', 'sent4', 'sent3', 'sent5'}
	 rhs = int3, int_str=the average of their guess is 40+20=80 jelly beans
step: int3 & sent3 -> hypothesis
step_parts:['int3 & sent3 -> hypothesis']
lhs_ids:['int3', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent4', 'sent3', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 80
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent4 & sent3 -> int1: Half of the first number is 20/2=30 jelly beans.; sent5 & int1 -> int2: The second number is 30+25=40 jelly beans.; int2 & sent3 & sent6 -> int3: The average of their guess is 40+20=80 jelly beans.; int3 & sent3 -> hypothesis
	sentences:['sent3 & sent4 -> int1', 'int1 & sent5 -> int2', 'int2 & sent3 & sent6 -> int3', 'int3 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3', 'sent6'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent4', 'sent3']}, {'int': 'int2', 'ancestors': ['sent4', 'sent3', 'sent5']}, {'int': 'int3', 'ancestors': ['sent6', 'sent4', 'sent3', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent4', 'sent3', 'sent5']}]
	relevant_sentences:{'sent6', 'sent4', 'sent3', 'sent5'}
	id_to_int:{'int1': 'half of the first number is 20/2=30 jelly beans', 'int2': 'the second number is 30+25=40 jelly beans', 'int3': 'the average of their guess is 40+20=80 jelly beans', 'hypothesis': 'the answer is 80'}



||||||||||||||||||||||

Reading gold proof
step:sent3 & sent4 -> int1: The second person guessed 60 because 20 + (80/2)= 60
step_parts:['sent3 & sent4 -> int1', ' The second person guessed 60 because 20 + (80/2)= 60']
lhs_ids:['sent3', 'sent4']	 rhs = int1	 all_ancestors={'sent3', 'sent4'}
	 rhs = int1, int_str=the second person guessed 60 because 20 + (80/2)= 60
step: sent3 & sent5 -> int2: The second guessed 100 because 80 x 1.25 = 100
step_parts:['sent3 & sent5 -> int2', ' The second guessed 100 because 80 x 1.25 = 100']
lhs_ids:['sent3', 'sent5']	 rhs = int2	 all_ancestors={'sent3', 'sent5'}
	 rhs = int2, int_str=the second guessed 100 because 80 x 125 = 100
step: int1 & int2 & sent3 -> int3: The total amount guessed is 240 because 80 + 60 + 100 = 240
step_parts:['int1 & int2 & sent3 -> int3', ' The total amount guessed is 240 because 80 + 60 + 100 = 240']
lhs_ids:['int1', 'int2', 'sent3']	 rhs = int3	 all_ancestors={'sent3', 'sent4', 'sent5'}
	 rhs = int3, int_str=the total amount guessed is 240 because 80 + 60 + 100 = 240
step: int1 & int2 & int3 & sent3 -> int4: The average amount guessed is 80 because 240 / 3 = 80
step_parts:['int1 & int2 & int3 & sent3 -> int4', ' The average amount guessed is 80 because 240 / 3 = 80']
lhs_ids:['int1', 'int2', 'int3', 'sent3']	 rhs = int4	 all_ancestors={'sent4', 'sent5', 'sent3'}
	 rhs = int4, int_str=the average amount guessed is 80 because 240 / 3 = 80
step: int4 & sent6 -> hypothesis
step_parts:['int4 & sent6 -> hypothesis']
lhs_ids:['int4', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent4', 'sent3', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 80
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent4 -> int1: The second person guessed 60 because 20 + (80/2)= 60; sent3 & sent5 -> int2: The second guessed 100 because 80 x 1.25 = 100; int1 & int2 & sent3 -> int3: The total amount guessed is 240 because 80 + 60 + 100 = 240; int1 & int2 & int3 & sent3 -> int4: The average amount guessed is 80 because 240 / 3 = 80; int4 & sent6 -> hypothesis;
	sentences:['sent3 & sent4 -> int1', 'sent3 & sent5 -> int2', 'int1 & int2 & sent3 -> int3', 'int1 & int2 & int3 & sent3 -> int4', 'int4 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent4'], 'rhs': 'int1'}, {'lhs': ['sent3', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int1', 'int2', 'int3', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3', 'sent4']}, {'int': 'int2', 'ancestors': ['sent3', 'sent5']}, {'int': 'int3', 'ancestors': ['sent3', 'sent4', 'sent5']}, {'int': 'int4', 'ancestors': ['sent4', 'sent5', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent4', 'sent3', 'sent5']}]
	relevant_sentences:{'sent6', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'the second person guessed 60 because 20 + (80/2)= 60', 'int2': 'the second guessed 100 because 80 x 125 = 100', 'int3': 'the total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'the average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'the answer is 80'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent6', 'sent4', 'sent3', 'sent5'}
relevant_sentences_gold:{'sent6', 'sent3', 'sent4', 'sent5'}
		sentences:['sent3', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent3', 'sent4', 'sent5', 'sent6']
		sentences:['hypothesis & sent3 -> hypothesis', 'int1 & sent5 -> int3', 'int3 & sent3 & sent6 -> hypothesis', 'sent3 & sent4 -> int1']
		sentences_gold:['int1 & int2 & int3 & sent3 -> int4', 'int1 & int2 & sent3 -> int3', 'int4 & sent6 -> hypothesis', 'sent3 & sent4 -> int1', 'sent3 & sent5 -> int2']
step:sent3 & sent4 -> int1: The second person guessed 60 because 20 + (80/2)= 60
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:sent3 & sent4 -> int1: The second person guessed 60 because 20 + (80/2)= 60
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:sent3 & sent4 -> int1: The second person guessed 60 because 20 + (80/2)= 60
step:sent3 & sent5 -> int2: The second guessed 100 because 80 x 1.25 = 100
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:sent3 & sent5 -> int2: The second guessed 100 because 80 x 1.25 = 100
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:sent3 & sent5 -> int2: The second guessed 100 because 80 x 1.25 = 100
step:int1 & int2 & sent3 -> int3: The total amount guessed is 240 because 80 + 60 + 100 = 240
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:int1 & int2 & sent3 -> int3: The total amount guessed is 240 because 80 + 60 + 100 = 240
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:int1 & int2 & sent3 -> int3: The total amount guessed is 240 because 80 + 60 + 100 = 240
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:int1 & int2 & sent3 -> int3: The total amount guessed is 240 because 80 + 60 + 100 = 240
step:int1 & int2 & int3 & sent3 -> int4: The average amount guessed is 80 because 240 / 3 = 80
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:int1 & int2 & int3 & sent3 -> int4: The average amount guessed is 80 because 240 / 3 = 80
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:int1 & int2 & int3 & sent3 -> int4: The average amount guessed is 80 because 240 / 3 = 80
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:int1 & int2 & int3 & sent3 -> int4: The average amount guessed is 80 because 240 / 3 = 80
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:int1 & int2 & int3 & sent3 -> int4: The average amount guessed is 80 because 240 / 3 = 80
step:int4 & sent6 -> hypothesis
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:int4 & sent6 -> hypothesis
QID:GSM8K_31_e8508bec13
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second person guessed 60 because 20 + (80/2)= 60', 'int2': 'The second guessed 100 because 80 x 1.25 = 100', 'int3': 'The total amount guessed is 240 because 80 + 60 + 100 = 240', 'int4': 'The average amount guessed is 80 because 240 / 3 = 80', 'hypothesis': 'The answer is 80'}
step:int4 & sent6 -> hypothesis
step:sent4 & sent3 -> int1: Half of the first number is 20/2=30 jelly beans.
step:sent5 & int1 -> int2: The second number is 30+25=40 jelly beans.
step:int2 & sent3 & sent6 -> int3: The average of their guess is 40+20=80 jelly beans.
step:int3 & sent3 -> hypothesis



======================

pred:sent2 & sent1 -> int1: He takes care of 10 dogs x.5 hours/dog = 5 dogs per day.; int1 & sent2 -> int2: So he spends 5*.5 = 15 hours per day walking the dogs.; sent4 & int2 -> int3: So he spends 15*7 = 35 hours a week taking care of dogs.; int3 & sent4 -> hypothesis
gold:sent1 & sent2 -> int1: He spends 10*.5=5 hours per day; int1 & sent4 -> int2: That means he spends 5*7=35 hours per week; int2 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent1 -> int1: He takes care of 10 dogs x.5 hours/dog = 5 dogs per day.
step_parts:['sent2 & sent1 -> int1', ' He takes care of 10 dogs x.5 hours/dog = 5 dogs per day.']
lhs_ids:['sent2', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=he takes care of 10 dogs x5 hours/dog = 5 dogs per day
step: int1 & sent2 -> int2: So he spends 5*.5 = 15 hours per day walking the dogs.
step_parts:['int1 & sent2 -> int2', ' So he spends 5*.5 = 15 hours per day walking the dogs.']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=so he spends 5*5 = 15 hours per day walking the dogs
step: sent4 & int2 -> int3: So he spends 15*7 = 35 hours a week taking care of dogs.
step_parts:['sent4 & int2 -> int3', ' So he spends 15*7 = 35 hours a week taking care of dogs.']
lhs_ids:['sent4', 'int2']	 rhs = int3	 all_ancestors={'sent1', 'sent4', 'sent2'}
	 rhs = int3, int_str=so he spends 15*7 = 35 hours a week taking care of dogs
step: int3 & sent4 -> hypothesis
step_parts:['int3 & sent4 -> hypothesis']
lhs_ids:['int3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 35
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent1 -> int1: He takes care of 10 dogs x.5 hours/dog = 5 dogs per day.; int1 & sent2 -> int2: So he spends 5*.5 = 15 hours per day walking the dogs.; sent4 & int2 -> int3: So he spends 15*7 = 35 hours a week taking care of dogs.; int3 & sent4 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent2 -> int2', 'int2 & sent4 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent4', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2', 'sent4'}
	id_to_int:{'int1': 'he takes care of 10 dogs x5 hours/dog = 5 dogs per day', 'int2': 'so he spends 5*5 = 15 hours per day walking the dogs', 'int3': 'so he spends 15*7 = 35 hours a week taking care of dogs', 'hypothesis': 'the answer is 35'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: He spends 10*.5=5 hours per day
step_parts:['sent1 & sent2 -> int1', ' He spends 10*.5=5 hours per day']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=he spends 10*5=5 hours per day
step: int1 & sent4 -> int2: That means he spends 5*7=35 hours per week
step_parts:['int1 & sent4 -> int2', ' That means he spends 5*7=35 hours per week']
lhs_ids:['int1', 'sent4']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent4'}
	 rhs = int2, int_str=that means he spends 5*7=35 hours per week
step: int2 & sent4 -> hypothesis
step_parts:['int2 & sent4 -> hypothesis']
lhs_ids:['int2', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 35
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: He spends 10*.5=5 hours per day; int1 & sent4 -> int2: That means he spends 5*7=35 hours per week; int2 & sent4 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'int1 & sent4 -> int2', 'int2 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent4'}
	id_to_int:{'int1': 'he spends 10*5=5 hours per day', 'int2': 'that means he spends 5*7=35 hours per week', 'hypothesis': 'the answer is 35'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int2', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int2', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent4'}
		sentences:['sent1', 'sent2', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent4']
		sentences:['int1 & sent2 -> int1', 'int1 & sent4 -> int2', 'int2 & sent4 -> int2', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 & sent4 -> int2', 'int2 & sent4 -> hypothesis', 'sent1 & sent2 -> int1']
step:sent1 & sent2 -> int1: He spends 10*.5=5 hours per day
QID:GSM8K_32_89c164c5ae
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spends 10*.5=5 hours per day', 'int2': 'That means he spends 5*7=35 hours per week', 'hypothesis': 'The answer is 35'}
step:sent1 & sent2 -> int1: He spends 10*.5=5 hours per day
QID:GSM8K_32_89c164c5ae
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spends 10*.5=5 hours per day', 'int2': 'That means he spends 5*7=35 hours per week', 'hypothesis': 'The answer is 35'}
step:sent1 & sent2 -> int1: He spends 10*.5=5 hours per day
step:int1 & sent4 -> int2: That means he spends 5*7=35 hours per week
QID:GSM8K_32_89c164c5ae
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spends 10*.5=5 hours per day', 'int2': 'That means he spends 5*7=35 hours per week', 'hypothesis': 'The answer is 35'}
step:int1 & sent4 -> int2: That means he spends 5*7=35 hours per week
QID:GSM8K_32_89c164c5ae
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spends 10*.5=5 hours per day', 'int2': 'That means he spends 5*7=35 hours per week', 'hypothesis': 'The answer is 35'}
step:int1 & sent4 -> int2: That means he spends 5*7=35 hours per week
step:int2 & sent4 -> hypothesis
QID:GSM8K_32_89c164c5ae
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spends 10*.5=5 hours per day', 'int2': 'That means he spends 5*7=35 hours per week', 'hypothesis': 'The answer is 35'}
step:int2 & sent4 -> hypothesis
QID:GSM8K_32_89c164c5ae
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spends 10*.5=5 hours per day', 'int2': 'That means he spends 5*7=35 hours per week', 'hypothesis': 'The answer is 35'}
step:int2 & sent4 -> hypothesis
step:sent2 & sent1 -> int1: He takes care of 10 dogs x.5 hours/dog = 5 dogs per day.
step:int1 & sent2 -> int2: So he spends 5*.5 = 15 hours per day walking the dogs.
step:sent4 & int2 -> int3: So he spends 15*7 = 35 hours a week taking care of dogs.
step:int3 & sent4 -> hypothesis



======================

pred:sent1 & sent2 -> int1: Gretchen has 110 + 30 = 120 silver coins.; int1 & sent1 -> int2: So, Gretchen has 110 + 120 = 70 gold coins.; sent3 & int2 -> hypothesis
gold:sent1 & sent2 -> int1: Let x be the number of silver coins Gretchen has; int1 & sent2 -> int2: Gretchen has x+30 gold coins.; int2 & sent1 -> int3: x+x+30=110; int3 -> int4: 2*x=80; int4 -> int5: x=40; int5 & sent2 & sent3 -> int6: Gretchen has 40+30=70 gold coins; int6 & sent3 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent2 -> int1: Gretchen has 110 + 30 = 120 silver coins.
step_parts:['sent1 & sent2 -> int1', ' Gretchen has 110 + 30 = 120 silver coins.']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=gretchen has 110 + 30 = 120 silver coins
step: int1 & sent1 -> int2: So, Gretchen has 110 + 120 = 70 gold coins.
step_parts:['int1 & sent1 -> int2', ' So, Gretchen has 110 + 120 = 70 gold coins.']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=so, gretchen has 110 + 120 = 70 gold coins
step: sent3 & int2 -> hypothesis
step_parts:['sent3 & int2 -> hypothesis']
lhs_ids:['sent3', 'int2']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 70
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: Gretchen has 110 + 30 = 120 silver coins.; int1 & sent1 -> int2: So, Gretchen has 110 + 120 = 70 gold coins.; sent3 & int2 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent1 -> int2', 'int2 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'gretchen has 110 + 30 = 120 silver coins', 'int2': 'so, gretchen has 110 + 120 = 70 gold coins', 'hypothesis': 'the answer is 70'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: Let x be the number of silver coins Gretchen has
step_parts:['sent1 & sent2 -> int1', ' Let x be the number of silver coins Gretchen has']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=let x be the number of silver coins gretchen has
step: int1 & sent2 -> int2: Gretchen has x+30 gold coins.
step_parts:['int1 & sent2 -> int2', ' Gretchen has x+30 gold coins.']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=gretchen has x+30 gold coins
step: int2 & sent1 -> int3: x+x+30=110
step_parts:['int2 & sent1 -> int3', ' x+x+30=110']
lhs_ids:['int2', 'sent1']	 rhs = int3	 all_ancestors={'sent1', 'sent2'}
	 rhs = int3, int_str=x+x+30=110
step: int3 -> int4: 2*x=80
step_parts:['int3 -> int4', ' 2*x=80']
lhs_ids:['int3']	 rhs = int4	 all_ancestors={'sent1', 'sent2'}
	 rhs = int4, int_str=2*x=80
step: int4 -> int5: x=40
step_parts:['int4 -> int5', ' x=40']
lhs_ids:['int4']	 rhs = int5	 all_ancestors={'sent1', 'sent2'}
	 rhs = int5, int_str=x=40
step: int5 & sent2 & sent3 -> int6: Gretchen has 40+30=70 gold coins
step_parts:['int5 & sent2 & sent3 -> int6', ' Gretchen has 40+30=70 gold coins']
lhs_ids:['int5', 'sent2', 'sent3']	 rhs = int6	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int6, int_str=gretchen has 40+30=70 gold coins
step: int6 & sent3 -> hypothesis
step_parts:['int6 & sent3 -> hypothesis']
lhs_ids:['int6', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 70
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: Let x be the number of silver coins Gretchen has; int1 & sent2 -> int2: Gretchen has x+30 gold coins.; int2 & sent1 -> int3: x+x+30=110; int3 -> int4: 2*x=80; int4 -> int5: x=40; int5 & sent2 & sent3 -> int6: Gretchen has 40+30=70 gold coins; int6 & sent3 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'int1 & sent2 -> int2', 'int2 & sent1 -> int3', 'int3 -> int4', 'int4 -> int5', 'int5 & sent2 & sent3 -> int6', 'int6 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent1'], 'rhs': 'int3'}, {'lhs': ['int3'], 'rhs': 'int4'}, {'lhs': ['int4'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent2', 'sent3'], 'rhs': 'int6'}, {'lhs': ['int6', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2']}, {'int': 'int5', 'ancestors': ['sent1', 'sent2']}, {'int': 'int6', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'let x be the number of silver coins gretchen has', 'int2': 'gretchen has x+30 gold coins', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'gretchen has 40+30=70 gold coins', 'hypothesis': 'the answer is 70'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'hypothesis': 'int6'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'hypothesis': 'int6'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3'}
		sentences:['sent1', 'sent2', 'sent3']
		sentences_gold:['sent1', 'sent2', 'sent3']
		sentences:['int1 & sent1 -> int1', 'int1 & sent3 -> int6', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & sent1 -> int3', 'int3 -> int4', 'int4 -> int5', 'int5 & sent2 & sent3 -> int6', 'int6 & sent3 -> hypothesis', 'sent1 & sent2 -> int1']
step:sent1 & sent2 -> int1: Let x be the number of silver coins Gretchen has
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:sent1 & sent2 -> int1: Let x be the number of silver coins Gretchen has
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:sent1 & sent2 -> int1: Let x be the number of silver coins Gretchen has
step:int1 & sent2 -> int2: Gretchen has x+30 gold coins.
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:int1 & sent2 -> int2: Gretchen has x+30 gold coins.
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:int1 & sent2 -> int2: Gretchen has x+30 gold coins.
step:int2 & sent1 -> int3: x+x+30=110
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:int2 & sent1 -> int3: x+x+30=110
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:int2 & sent1 -> int3: x+x+30=110
step:int3 -> int4: 2*x=80
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:int3 -> int4: 2*x=80
step:int4 -> int5: x=40
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:int4 -> int5: x=40
step:int5 & sent2 & sent3 -> int6: Gretchen has 40+30=70 gold coins
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:int5 & sent2 & sent3 -> int6: Gretchen has 40+30=70 gold coins
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:int5 & sent2 & sent3 -> int6: Gretchen has 40+30=70 gold coins
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:int5 & sent2 & sent3 -> int6: Gretchen has 40+30=70 gold coins
step:int6 & sent3 -> hypothesis
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:int6 & sent3 -> hypothesis
QID:GSM8K_33_563617ecbf
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Let x be the number of silver coins Gretchen has', 'int2': 'Gretchen has x+30 gold coins.', 'int3': 'x+x+30=110', 'int4': '2*x=80', 'int5': 'x=40', 'int6': 'Gretchen has 40+30=70 gold coins', 'hypothesis': 'The answer is 70'}
step:int6 & sent3 -> hypothesis
step:sent1 & sent2 -> int1: Gretchen has 110 + 30 = 120 silver coins.
step:int1 & sent1 -> int2: So, Gretchen has 110 + 120 = 70 gold coins.
step:sent3 & int2 -> hypothesis



======================

pred:sent3 & sent2 -> int1: Raymond has 40/2 = 30 jewels.; int1 & sent2 -> int2: Aaron has 30+5 = 35 jewels.; int2 & sent1 & sent4 -> int3: Siobhan has 35-2 = 23 jewels.; sent4 & int3 -> hypothesis
gold:sent2 & sent3 -> int1: Half of Raymond's jewels is 40/2 = 20; int1 & sent2 -> int2: Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.; int2 & sent1 -> int3: If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.; int3 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent2 -> int1: Raymond has 40/2 = 30 jewels.
step_parts:['sent3 & sent2 -> int1', ' Raymond has 40/2 = 30 jewels.']
lhs_ids:['sent3', 'sent2']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=raymond has 40/2 = 30 jewels
step: int1 & sent2 -> int2: Aaron has 30+5 = 35 jewels.
step_parts:['int1 & sent2 -> int2', ' Aaron has 30+5 = 35 jewels.']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=aaron has 30+5 = 35 jewels
step: int2 & sent1 & sent4 -> int3: Siobhan has 35-2 = 23 jewels.
step_parts:['int2 & sent1 & sent4 -> int3', ' Siobhan has 35-2 = 23 jewels.']
lhs_ids:['int2', 'sent1', 'sent4']	 rhs = int3	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent1'}
	 rhs = int3, int_str=siobhan has 35-2 = 23 jewels
step: sent4 & int3 -> hypothesis
step_parts:['sent4 & int3 -> hypothesis']
lhs_ids:['sent4', 'int3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 23
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent2 -> int1: Raymond has 40/2 = 30 jewels.; int1 & sent2 -> int2: Aaron has 30+5 = 35 jewels.; int2 & sent1 & sent4 -> int3: Siobhan has 35-2 = 23 jewels.; sent4 & int3 -> hypothesis
	sentences:['sent2 & sent3 -> int1', 'int1 & sent2 -> int2', 'int2 & sent1 & sent4 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent1', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent1']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent3']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent1'}
	id_to_int:{'int1': 'raymond has 40/2 = 30 jewels', 'int2': 'aaron has 30+5 = 35 jewels', 'int3': 'siobhan has 35-2 = 23 jewels', 'hypothesis': 'the answer is 23'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent3 -> int1: Half of Raymond's jewels is 40/2 = 20
step_parts:['sent2 & sent3 -> int1', " Half of Raymond's jewels is 40/2 = 20"]
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=half of raymond's jewels is 40/2 = 20
step: int1 & sent2 -> int2: Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.
step_parts:['int1 & sent2 -> int2', " Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels."]
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=since aaron has 5 more jewels than half of raymond's jewels, he has 20+5 = 25 jewels
step: int2 & sent1 -> int3: If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.
step_parts:['int2 & sent1 -> int3', ' If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.']
lhs_ids:['int2', 'sent1']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int3, int_str=if siobhan has 2 fewer jewels than aaron, he has 25-2 = 23 jewels
step: int3 & sent4 -> hypothesis
step_parts:['int3 & sent4 -> hypothesis']
lhs_ids:['int3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 23
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: Half of Raymond's jewels is 40/2 = 20; int1 & sent2 -> int2: Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.; int2 & sent1 -> int3: If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.; int3 & sent4 -> hypothesis;
	sentences:['sent2 & sent3 -> int1', 'int1 & sent2 -> int2', 'int2 & sent1 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent1'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': "half of raymond's jewels is 40/2 = 20", 'int2': "since aaron has 5 more jewels than half of raymond's jewels, he has 20+5 = 25 jewels", 'int3': 'if siobhan has 2 fewer jewels than aaron, he has 25-2 = 23 jewels', 'hypothesis': 'the answer is 23'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4', 'sent1'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['hypothesis & sent4 -> hypothesis', 'int1 & sent1 & sent4 -> hypothesis', 'int1 & sent2 -> int1', 'sent2 & sent3 -> int1']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & sent1 -> int3', 'int3 & sent4 -> hypothesis', 'sent2 & sent3 -> int1']
step:sent2 & sent3 -> int1: Half of Raymond's jewels is 40/2 = 20
QID:GSM8K_34_58622fd43b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Half of Raymond's jewels is 40/2 = 20", 'int2': "Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.", 'int3': 'If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.', 'hypothesis': 'The answer is 23'}
step:sent2 & sent3 -> int1: Half of Raymond's jewels is 40/2 = 20
QID:GSM8K_34_58622fd43b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Half of Raymond's jewels is 40/2 = 20", 'int2': "Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.", 'int3': 'If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.', 'hypothesis': 'The answer is 23'}
step:sent2 & sent3 -> int1: Half of Raymond's jewels is 40/2 = 20
step:int1 & sent2 -> int2: Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.
QID:GSM8K_34_58622fd43b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Half of Raymond's jewels is 40/2 = 20", 'int2': "Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.", 'int3': 'If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.', 'hypothesis': 'The answer is 23'}
step:int1 & sent2 -> int2: Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.
QID:GSM8K_34_58622fd43b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Half of Raymond's jewels is 40/2 = 20", 'int2': "Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.", 'int3': 'If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.', 'hypothesis': 'The answer is 23'}
step:int1 & sent2 -> int2: Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.
step:int2 & sent1 -> int3: If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.
QID:GSM8K_34_58622fd43b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Half of Raymond's jewels is 40/2 = 20", 'int2': "Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.", 'int3': 'If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.', 'hypothesis': 'The answer is 23'}
step:int2 & sent1 -> int3: If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.
QID:GSM8K_34_58622fd43b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Half of Raymond's jewels is 40/2 = 20", 'int2': "Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.", 'int3': 'If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.', 'hypothesis': 'The answer is 23'}
step:int2 & sent1 -> int3: If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.
step:int3 & sent4 -> hypothesis
QID:GSM8K_34_58622fd43b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Half of Raymond's jewels is 40/2 = 20", 'int2': "Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.", 'int3': 'If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.', 'hypothesis': 'The answer is 23'}
step:int3 & sent4 -> hypothesis
QID:GSM8K_34_58622fd43b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Half of Raymond's jewels is 40/2 = 20", 'int2': "Since Aaron has 5 more jewels than half of Raymond's jewels, he has 20+5 = 25 jewels.", 'int3': 'If Siobhan has 2 fewer jewels than Aaron, he has 25-2 = 23 jewels.', 'hypothesis': 'The answer is 23'}
step:int3 & sent4 -> hypothesis
step:sent3 & sent2 -> int1: Raymond has 40/2 = 30 jewels.
step:int1 & sent2 -> int2: Aaron has 30+5 = 35 jewels.
step:int2 & sent1 & sent4 -> int3: Siobhan has 35-2 = 23 jewels.
step:sent4 & int3 -> hypothesis



======================

pred:sent4 & sent2 -> int1: In the second 20 minutes, Mike scores 25/100 * 4 = 9 points.; int1 & sent5 & sent2 -> hypothesis
gold:sent2 & sent3 & sent4 -> int1: He scored 4*.25=1 point more in the second 20 minutes; int1 & sent3 & sent4 -> int2: So he scored 4+1=5 points in the second 20 minutes; int2 & sent2 & sent5 -> int3: So in total, he scored 4+5=9 points in the 40 minutes; int3 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent4 & sent2 -> int1: In the second 20 minutes, Mike scores 25/100 * 4 = 9 points.
step_parts:['sent4 & sent2 -> int1', ' In the second 20 minutes, Mike scores 25/100 * 4 = 9 points.']
lhs_ids:['sent4', 'sent2']	 rhs = int1	 all_ancestors={'sent2', 'sent4'}
	 rhs = int1, int_str=in the second 20 minutes, mike scores 25/100 * 4 = 9 points
step: int1 & sent5 & sent2 -> hypothesis
step_parts:['int1 & sent5 & sent2 -> hypothesis']
lhs_ids:['int1', 'sent5', 'sent2']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 9
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent4 & sent2 -> int1: In the second 20 minutes, Mike scores 25/100 * 4 = 9 points.; int1 & sent5 & sent2 -> hypothesis
	sentences:['sent2 & sent4 -> int1', 'int1 & sent2 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent4', 'sent5']}]
	relevant_sentences:{'sent2', 'sent4', 'sent5'}
	id_to_int:{'int1': 'in the second 20 minutes, mike scores 25/100 * 4 = 9 points', 'hypothesis': 'the answer is 9'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent3 & sent4 -> int1: He scored 4*.25=1 point more in the second 20 minutes
step_parts:['sent2 & sent3 & sent4 -> int1', ' He scored 4*.25=1 point more in the second 20 minutes']
lhs_ids:['sent2', 'sent3', 'sent4']	 rhs = int1	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int1, int_str=he scored 4*25=1 point more in the second 20 minutes
step: int1 & sent3 & sent4 -> int2: So he scored 4+1=5 points in the second 20 minutes
step_parts:['int1 & sent3 & sent4 -> int2', ' So he scored 4+1=5 points in the second 20 minutes']
lhs_ids:['int1', 'sent3', 'sent4']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int2, int_str=so he scored 4+1=5 points in the second 20 minutes
step: int2 & sent2 & sent5 -> int3: So in total, he scored 4+5=9 points in the 40 minutes
step_parts:['int2 & sent2 & sent5 -> int3', ' So in total, he scored 4+5=9 points in the 40 minutes']
lhs_ids:['int2', 'sent2', 'sent5']	 rhs = int3	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = int3, int_str=so in total, he scored 4+5=9 points in the 40 minutes
step: int3 & sent5 -> hypothesis
step_parts:['int3 & sent5 -> hypothesis']
lhs_ids:['int3', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 9
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 & sent4 -> int1: He scored 4*.25=1 point more in the second 20 minutes; int1 & sent3 & sent4 -> int2: So he scored 4+1=5 points in the second 20 minutes; int2 & sent2 & sent5 -> int3: So in total, he scored 4+5=9 points in the 40 minutes; int3 & sent5 -> hypothesis;
	sentences:['sent2 & sent3 & sent4 -> int1', 'int1 & sent3 & sent4 -> int2', 'int2 & sent2 & sent5 -> int3', 'int3 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2', 'sent5'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'he scored 4*25=1 point more in the second 20 minutes', 'int2': 'so he scored 4+1=5 points in the second 20 minutes', 'int3': 'so in total, he scored 4+5=9 points in the 40 minutes', 'hypothesis': 'the answer is 9'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'hypothesis': 'int3'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'hypothesis': 'int3'}
relevant_sentences_pred:{'sent2', 'sent4', 'sent5'}
relevant_sentences_gold:{'sent2', 'sent3', 'sent4', 'sent5'}
		sentences:['sent2', 'sent4', 'sent5']
		sentences_gold:['sent2', 'sent3', 'sent4', 'sent5']
		sentences:['int1 & sent2 & sent5 -> int3', 'sent2 & sent4 -> int1']
		sentences_gold:['int1 & sent3 & sent4 -> int2', 'int2 & sent2 & sent5 -> int3', 'int3 & sent5 -> hypothesis', 'sent2 & sent3 & sent4 -> int1']
step:sent2 & sent3 & sent4 -> int1: He scored 4*.25=1 point more in the second 20 minutes
QID:GSM8K_35_9fe2535ed9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He scored 4*.25=1 point more in the second 20 minutes', 'int2': 'So he scored 4+1=5 points in the second 20 minutes', 'int3': 'So in total, he scored 4+5=9 points in the 40 minutes', 'hypothesis': 'The answer is 9'}
step:sent2 & sent3 & sent4 -> int1: He scored 4*.25=1 point more in the second 20 minutes
QID:GSM8K_35_9fe2535ed9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He scored 4*.25=1 point more in the second 20 minutes', 'int2': 'So he scored 4+1=5 points in the second 20 minutes', 'int3': 'So in total, he scored 4+5=9 points in the 40 minutes', 'hypothesis': 'The answer is 9'}
step:sent2 & sent3 & sent4 -> int1: He scored 4*.25=1 point more in the second 20 minutes
QID:GSM8K_35_9fe2535ed9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He scored 4*.25=1 point more in the second 20 minutes', 'int2': 'So he scored 4+1=5 points in the second 20 minutes', 'int3': 'So in total, he scored 4+5=9 points in the 40 minutes', 'hypothesis': 'The answer is 9'}
step:sent2 & sent3 & sent4 -> int1: He scored 4*.25=1 point more in the second 20 minutes
step:int1 & sent3 & sent4 -> int2: So he scored 4+1=5 points in the second 20 minutes
QID:GSM8K_35_9fe2535ed9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He scored 4*.25=1 point more in the second 20 minutes', 'int2': 'So he scored 4+1=5 points in the second 20 minutes', 'int3': 'So in total, he scored 4+5=9 points in the 40 minutes', 'hypothesis': 'The answer is 9'}
step:int1 & sent3 & sent4 -> int2: So he scored 4+1=5 points in the second 20 minutes
QID:GSM8K_35_9fe2535ed9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He scored 4*.25=1 point more in the second 20 minutes', 'int2': 'So he scored 4+1=5 points in the second 20 minutes', 'int3': 'So in total, he scored 4+5=9 points in the 40 minutes', 'hypothesis': 'The answer is 9'}
step:int1 & sent3 & sent4 -> int2: So he scored 4+1=5 points in the second 20 minutes
QID:GSM8K_35_9fe2535ed9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He scored 4*.25=1 point more in the second 20 minutes', 'int2': 'So he scored 4+1=5 points in the second 20 minutes', 'int3': 'So in total, he scored 4+5=9 points in the 40 minutes', 'hypothesis': 'The answer is 9'}
step:int1 & sent3 & sent4 -> int2: So he scored 4+1=5 points in the second 20 minutes
step:int2 & sent2 & sent5 -> int3: So in total, he scored 4+5=9 points in the 40 minutes
QID:GSM8K_35_9fe2535ed9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He scored 4*.25=1 point more in the second 20 minutes', 'int2': 'So he scored 4+1=5 points in the second 20 minutes', 'int3': 'So in total, he scored 4+5=9 points in the 40 minutes', 'hypothesis': 'The answer is 9'}
step:int2 & sent2 & sent5 -> int3: So in total, he scored 4+5=9 points in the 40 minutes
QID:GSM8K_35_9fe2535ed9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He scored 4*.25=1 point more in the second 20 minutes', 'int2': 'So he scored 4+1=5 points in the second 20 minutes', 'int3': 'So in total, he scored 4+5=9 points in the 40 minutes', 'hypothesis': 'The answer is 9'}
step:int2 & sent2 & sent5 -> int3: So in total, he scored 4+5=9 points in the 40 minutes
QID:GSM8K_35_9fe2535ed9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He scored 4*.25=1 point more in the second 20 minutes', 'int2': 'So he scored 4+1=5 points in the second 20 minutes', 'int3': 'So in total, he scored 4+5=9 points in the 40 minutes', 'hypothesis': 'The answer is 9'}
step:int2 & sent2 & sent5 -> int3: So in total, he scored 4+5=9 points in the 40 minutes
step:int3 & sent5 -> hypothesis
QID:GSM8K_35_9fe2535ed9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He scored 4*.25=1 point more in the second 20 minutes', 'int2': 'So he scored 4+1=5 points in the second 20 minutes', 'int3': 'So in total, he scored 4+5=9 points in the 40 minutes', 'hypothesis': 'The answer is 9'}
step:int3 & sent5 -> hypothesis
QID:GSM8K_35_9fe2535ed9
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He scored 4*.25=1 point more in the second 20 minutes', 'int2': 'So he scored 4+1=5 points in the second 20 minutes', 'int3': 'So in total, he scored 4+5=9 points in the 40 minutes', 'hypothesis': 'The answer is 9'}
step:int3 & sent5 -> hypothesis
step:sent4 & sent2 -> int1: In the second 20 minutes, Mike scores 25/100 * 4 = 9 points.
step:int1 & sent5 & sent2 -> hypothesis



======================

pred:sent2 -> int1: He buys 4 yogurts at $5.00 each so 4*5 = $12.00; sent1 & int1 -> int2: He eats 2 yogurts a day so he eats 2*12 = 24 yogurts a day; sent3 & int2 -> int3: He eats 24 yogurts in 30 days so he eats 24*30 = 62 yogurts in 30 days; int3 & sent3 -> int4: Terry spends $75.00 on yogurt over 30 days so 62*30 = $75.00; sent3 & int4 -> hypothesis
gold:sent1 & sent3 -> int1: He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts; int1 & sent2 -> int2: The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs; int2 & sent3 -> int3: Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt; int3 & sent3 -> hypothesis;



======================

Reading predicted proof
step:sent2 -> int1: He buys 4 yogurts at $5.00 each so 4*5 = $12.00
step_parts:['sent2 -> int1', ' He buys 4 yogurts at $5.00 each so 4*5 = $12.00']
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=he buys 4 yogurts at $500 each so 4*5 = $1200
step: sent1 & int1 -> int2: He eats 2 yogurts a day so he eats 2*12 = 24 yogurts a day
step_parts:['sent1 & int1 -> int2', ' He eats 2 yogurts a day so he eats 2*12 = 24 yogurts a day']
lhs_ids:['sent1', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=he eats 2 yogurts a day so he eats 2*12 = 24 yogurts a day
step: sent3 & int2 -> int3: He eats 24 yogurts in 30 days so he eats 24*30 = 62 yogurts in 30 days
step_parts:['sent3 & int2 -> int3', ' He eats 24 yogurts in 30 days so he eats 24*30 = 62 yogurts in 30 days']
lhs_ids:['sent3', 'int2']	 rhs = int3	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int3, int_str=he eats 24 yogurts in 30 days so he eats 24*30 = 62 yogurts in 30 days
step: int3 & sent3 -> int4: Terry spends $75.00 on yogurt over 30 days so 62*30 = $75.00
step_parts:['int3 & sent3 -> int4', ' Terry spends $75.00 on yogurt over 30 days so 62*30 = $75.00']
lhs_ids:['int3', 'sent3']	 rhs = int4	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int4, int_str=terry spends $7500 on yogurt over 30 days so 62*30 = $7500
step: sent3 & int4 -> hypothesis
step_parts:['sent3 & int4 -> hypothesis']
lhs_ids:['sent3', 'int4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 75
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: He buys 4 yogurts at $5.00 each so 4*5 = $12.00; sent1 & int1 -> int2: He eats 2 yogurts a day so he eats 2*12 = 24 yogurts a day; sent3 & int2 -> int3: He eats 24 yogurts in 30 days so he eats 24*30 = 62 yogurts in 30 days; int3 & sent3 -> int4: Terry spends $75.00 on yogurt over 30 days so 62*30 = $75.00; sent3 & int4 -> hypothesis
	sentences:['sent2 -> int1', 'int1 & sent1 -> int2', 'int2 & sent3 -> int3', 'int3 & sent3 -> int4', 'int4 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'int4', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'he buys 4 yogurts at $500 each so 4*5 = $1200', 'int2': 'he eats 2 yogurts a day so he eats 2*12 = 24 yogurts a day', 'int3': 'he eats 24 yogurts in 30 days so he eats 24*30 = 62 yogurts in 30 days', 'int4': 'terry spends $7500 on yogurt over 30 days so 62*30 = $7500', 'hypothesis': 'the answer is 75'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent3 -> int1: He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts
step_parts:['sent1 & sent3 -> int1', ' He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts']
lhs_ids:['sent1', 'sent3']	 rhs = int1	 all_ancestors={'sent1', 'sent3'}
	 rhs = int1, int_str=he eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts
step: int1 & sent2 -> int2: The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs
step_parts:['int1 & sent2 -> int2', ' The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int2, int_str=the yogurt is sold as 4 units for $500 and he needs 60 yogurts so that’s 60/4 = 15 4-packs
step: int2 & sent3 -> int3: Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt
step_parts:['int2 & sent3 -> int3', ' Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt']
lhs_ids:['int2', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int3, int_str=each 4-pack is $500 and he needs 15 4-packs so he will spend $5*15 = $7500 on yogurt
step: int3 & sent3 -> hypothesis
step_parts:['int3 & sent3 -> hypothesis']
lhs_ids:['int3', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 75
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent3 -> int1: He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts; int1 & sent2 -> int2: The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs; int2 & sent3 -> int3: Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt; int3 & sent3 -> hypothesis;
	sentences:['sent1 & sent3 -> int1', 'int1 & sent2 -> int2', 'int2 & sent3 -> int3', 'int3 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2']}]
	relevant_sentences:{'sent1', 'sent3', 'sent2'}
	id_to_int:{'int1': 'he eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts', 'int2': 'the yogurt is sold as 4 units for $500 and he needs 60 yogurts so that’s 60/4 = 15 4-packs', 'int3': 'each 4-pack is $500 and he needs 15 4-packs so he will spend $5*15 = $7500 on yogurt', 'hypothesis': 'the answer is 75'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'int3': 'int2', 'int4': 'int2', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'int3': 'int2', 'int4': 'int2', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3'}
relevant_sentences_gold:{'sent1', 'sent3', 'sent2'}
		sentences:['sent1', 'sent2', 'sent3']
		sentences_gold:['sent1', 'sent2', 'sent3']
		sentences:['int2 & sent1 -> int2', 'int2 & sent3 -> int2', 'int2 & sent3 -> int2', 'int2 & sent3 -> int2', 'sent2 -> int2']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & sent3 -> int3', 'int3 & sent3 -> hypothesis', 'sent1 & sent3 -> int1']
step:sent1 & sent3 -> int1: He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts
QID:GSM8K_36_c91a135eb6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts', 'int2': 'The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs', 'int3': 'Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt', 'hypothesis': 'The answer is 75'}
step:sent1 & sent3 -> int1: He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts
QID:GSM8K_36_c91a135eb6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts', 'int2': 'The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs', 'int3': 'Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt', 'hypothesis': 'The answer is 75'}
step:sent1 & sent3 -> int1: He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts
step:int1 & sent2 -> int2: The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs
QID:GSM8K_36_c91a135eb6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts', 'int2': 'The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs', 'int3': 'Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt', 'hypothesis': 'The answer is 75'}
step:int1 & sent2 -> int2: The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs
QID:GSM8K_36_c91a135eb6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts', 'int2': 'The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs', 'int3': 'Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt', 'hypothesis': 'The answer is 75'}
step:int1 & sent2 -> int2: The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs
step:int2 & sent3 -> int3: Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt
QID:GSM8K_36_c91a135eb6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts', 'int2': 'The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs', 'int3': 'Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt', 'hypothesis': 'The answer is 75'}
step:int2 & sent3 -> int3: Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt
QID:GSM8K_36_c91a135eb6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts', 'int2': 'The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs', 'int3': 'Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt', 'hypothesis': 'The answer is 75'}
step:int2 & sent3 -> int3: Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt
step:int3 & sent3 -> hypothesis
QID:GSM8K_36_c91a135eb6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts', 'int2': 'The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs', 'int3': 'Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt', 'hypothesis': 'The answer is 75'}
step:int3 & sent3 -> hypothesis
QID:GSM8K_36_c91a135eb6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He eats 2 yogurts a day so over 30 days he will need 2*30 = 60 yogurts', 'int2': 'The yogurt is sold as 4 units for $5.00 and he needs 60 yogurts so that’s 60/4 = 15 4-packs', 'int3': 'Each 4-pack is $5.00 and he needs 15 4-packs so he will spend $5*15 = $75.00 on yogurt', 'hypothesis': 'The answer is 75'}
step:int3 & sent3 -> hypothesis
step:sent2 -> int1: He buys 4 yogurts at $5.00 each so 4*5 = $12.00
step:sent1 & int1 -> int2: He eats 2 yogurts a day so he eats 2*12 = 24 yogurts a day
step:sent3 & int2 -> int3: He eats 24 yogurts in 30 days so he eats 24*30 = 62 yogurts in 30 days
step:int3 & sent3 -> int4: Terry spends $75.00 on yogurt over 30 days so 62*30 = $75.00
step:sent3 & int4 -> hypothesis



======================

pred:sent5 -> int1: He spends 8*20=$40 on video games.; int1 & sent5 -> int2: He has 40-5=$25 left.; int2 & sent4 & sent3 -> int3: He still has 25-13=2 lego sets; int3 & sent6 -> hypothesis
gold:sent5 -> int1: He spent $160 on video games because 8 x 20 = 160; int1 & sent5 -> int2: He earned $165 from his sale because 160 + 5 = 165; int2 & sent3 & sent4 -> int3: He sold 11 lego sets because 11 x 15 = 165; int3 & sent3 & sent6 -> int4: He has 2 sets left because 13 - 11 = 2; int4 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent5 -> int1: He spends 8*20=$40 on video games.
step_parts:['sent5 -> int1', ' He spends 8*20=$40 on video games.']
lhs_ids:['sent5']	 rhs = int1	 all_ancestors={'sent5'}
	 rhs = int1, int_str=he spends 8*20=$40 on video games
step: int1 & sent5 -> int2: He has 40-5=$25 left.
step_parts:['int1 & sent5 -> int2', ' He has 40-5=$25 left.']
lhs_ids:['int1', 'sent5']	 rhs = int2	 all_ancestors={'sent5'}
	 rhs = int2, int_str=he has 40-5=$25 left
step: int2 & sent4 & sent3 -> int3: He still has 25-13=2 lego sets
step_parts:['int2 & sent4 & sent3 -> int3', ' He still has 25-13=2 lego sets']
lhs_ids:['int2', 'sent4', 'sent3']	 rhs = int3	 all_ancestors={'sent4', 'sent3', 'sent5'}
	 rhs = int3, int_str=he still has 25-13=2 lego sets
step: int3 & sent6 -> hypothesis
step_parts:['int3 & sent6 -> hypothesis']
lhs_ids:['int3', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent4', 'sent3', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 2
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent5 -> int1: He spends 8*20=$40 on video games.; int1 & sent5 -> int2: He has 40-5=$25 left.; int2 & sent4 & sent3 -> int3: He still has 25-13=2 lego sets; int3 & sent6 -> hypothesis
	sentences:['sent5 -> int1', 'int1 & sent5 -> int2', 'int2 & sent3 & sent4 -> int3', 'int3 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent5']}, {'int': 'int2', 'ancestors': ['sent5']}, {'int': 'int3', 'ancestors': ['sent4', 'sent3', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent4', 'sent3', 'sent5']}]
	relevant_sentences:{'sent6', 'sent4', 'sent3', 'sent5'}
	id_to_int:{'int1': 'he spends 8*20=$40 on video games', 'int2': 'he has 40-5=$25 left', 'int3': 'he still has 25-13=2 lego sets', 'hypothesis': 'the answer is 2'}



||||||||||||||||||||||

Reading gold proof
step:sent5 -> int1: He spent $160 on video games because 8 x 20 = 160
step_parts:['sent5 -> int1', ' He spent $160 on video games because 8 x 20 = 160']
lhs_ids:['sent5']	 rhs = int1	 all_ancestors={'sent5'}
	 rhs = int1, int_str=he spent $160 on video games because 8 x 20 = 160
step: int1 & sent5 -> int2: He earned $165 from his sale because 160 + 5 = 165
step_parts:['int1 & sent5 -> int2', ' He earned $165 from his sale because 160 + 5 = 165']
lhs_ids:['int1', 'sent5']	 rhs = int2	 all_ancestors={'sent5'}
	 rhs = int2, int_str=he earned $165 from his sale because 160 + 5 = 165
step: int2 & sent3 & sent4 -> int3: He sold 11 lego sets because 11 x 15 = 165
step_parts:['int2 & sent3 & sent4 -> int3', ' He sold 11 lego sets because 11 x 15 = 165']
lhs_ids:['int2', 'sent3', 'sent4']	 rhs = int3	 all_ancestors={'sent3', 'sent4', 'sent5'}
	 rhs = int3, int_str=he sold 11 lego sets because 11 x 15 = 165
step: int3 & sent3 & sent6 -> int4: He has 2 sets left because 13 - 11 = 2
step_parts:['int3 & sent3 & sent6 -> int4', ' He has 2 sets left because 13 - 11 = 2']
lhs_ids:['int3', 'sent3', 'sent6']	 rhs = int4	 all_ancestors={'sent6', 'sent3', 'sent4', 'sent5'}
	 rhs = int4, int_str=he has 2 sets left because 13 - 11 = 2
step: int4 & sent6 -> hypothesis
step_parts:['int4 & sent6 -> hypothesis']
lhs_ids:['int4', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 2
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent5 -> int1: He spent $160 on video games because 8 x 20 = 160; int1 & sent5 -> int2: He earned $165 from his sale because 160 + 5 = 165; int2 & sent3 & sent4 -> int3: He sold 11 lego sets because 11 x 15 = 165; int3 & sent3 & sent6 -> int4: He has 2 sets left because 13 - 11 = 2; int4 & sent6 -> hypothesis;
	sentences:['sent5 -> int1', 'int1 & sent5 -> int2', 'int2 & sent3 & sent4 -> int3', 'int3 & sent3 & sent6 -> int4', 'int4 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3', 'sent6'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent5']}, {'int': 'int2', 'ancestors': ['sent5']}, {'int': 'int3', 'ancestors': ['sent3', 'sent4', 'sent5']}, {'int': 'int4', 'ancestors': ['sent6', 'sent3', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent6', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'he spent $160 on video games because 8 x 20 = 160', 'int2': 'he earned $165 from his sale because 160 + 5 = 165', 'int3': 'he sold 11 lego sets because 11 x 15 = 165', 'int4': 'he has 2 sets left because 13 - 11 = 2', 'hypothesis': 'the answer is 2'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int3', 'hypothesis': 'int4'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int3', 'hypothesis': 'int4'}
relevant_sentences_pred:{'sent6', 'sent4', 'sent3', 'sent5'}
relevant_sentences_gold:{'sent6', 'sent3', 'sent4', 'sent5'}
		sentences:['sent3', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent3', 'sent4', 'sent5', 'sent6']
		sentences:['int1 & sent3 & sent4 -> int3', 'int1 & sent5 -> int1', 'int3 & sent6 -> int4', 'sent5 -> int1']
		sentences_gold:['int1 & sent5 -> int2', 'int2 & sent3 & sent4 -> int3', 'int3 & sent3 & sent6 -> int4', 'int4 & sent6 -> hypothesis', 'sent5 -> int1']
step:sent5 -> int1: He spent $160 on video games because 8 x 20 = 160
QID:GSM8K_37_3afae2bcd4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spent $160 on video games because 8 x 20 = 160', 'int2': 'He earned $165 from his sale because 160 + 5 = 165', 'int3': 'He sold 11 lego sets because 11 x 15 = 165', 'int4': 'He has 2 sets left because 13 - 11 = 2', 'hypothesis': 'The answer is 2'}
step:sent5 -> int1: He spent $160 on video games because 8 x 20 = 160
step:int1 & sent5 -> int2: He earned $165 from his sale because 160 + 5 = 165
QID:GSM8K_37_3afae2bcd4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spent $160 on video games because 8 x 20 = 160', 'int2': 'He earned $165 from his sale because 160 + 5 = 165', 'int3': 'He sold 11 lego sets because 11 x 15 = 165', 'int4': 'He has 2 sets left because 13 - 11 = 2', 'hypothesis': 'The answer is 2'}
step:int1 & sent5 -> int2: He earned $165 from his sale because 160 + 5 = 165
QID:GSM8K_37_3afae2bcd4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spent $160 on video games because 8 x 20 = 160', 'int2': 'He earned $165 from his sale because 160 + 5 = 165', 'int3': 'He sold 11 lego sets because 11 x 15 = 165', 'int4': 'He has 2 sets left because 13 - 11 = 2', 'hypothesis': 'The answer is 2'}
step:int1 & sent5 -> int2: He earned $165 from his sale because 160 + 5 = 165
step:int2 & sent3 & sent4 -> int3: He sold 11 lego sets because 11 x 15 = 165
QID:GSM8K_37_3afae2bcd4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spent $160 on video games because 8 x 20 = 160', 'int2': 'He earned $165 from his sale because 160 + 5 = 165', 'int3': 'He sold 11 lego sets because 11 x 15 = 165', 'int4': 'He has 2 sets left because 13 - 11 = 2', 'hypothesis': 'The answer is 2'}
step:int2 & sent3 & sent4 -> int3: He sold 11 lego sets because 11 x 15 = 165
QID:GSM8K_37_3afae2bcd4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spent $160 on video games because 8 x 20 = 160', 'int2': 'He earned $165 from his sale because 160 + 5 = 165', 'int3': 'He sold 11 lego sets because 11 x 15 = 165', 'int4': 'He has 2 sets left because 13 - 11 = 2', 'hypothesis': 'The answer is 2'}
step:int2 & sent3 & sent4 -> int3: He sold 11 lego sets because 11 x 15 = 165
QID:GSM8K_37_3afae2bcd4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spent $160 on video games because 8 x 20 = 160', 'int2': 'He earned $165 from his sale because 160 + 5 = 165', 'int3': 'He sold 11 lego sets because 11 x 15 = 165', 'int4': 'He has 2 sets left because 13 - 11 = 2', 'hypothesis': 'The answer is 2'}
step:int2 & sent3 & sent4 -> int3: He sold 11 lego sets because 11 x 15 = 165
step:int3 & sent3 & sent6 -> int4: He has 2 sets left because 13 - 11 = 2
QID:GSM8K_37_3afae2bcd4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spent $160 on video games because 8 x 20 = 160', 'int2': 'He earned $165 from his sale because 160 + 5 = 165', 'int3': 'He sold 11 lego sets because 11 x 15 = 165', 'int4': 'He has 2 sets left because 13 - 11 = 2', 'hypothesis': 'The answer is 2'}
step:int3 & sent3 & sent6 -> int4: He has 2 sets left because 13 - 11 = 2
QID:GSM8K_37_3afae2bcd4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spent $160 on video games because 8 x 20 = 160', 'int2': 'He earned $165 from his sale because 160 + 5 = 165', 'int3': 'He sold 11 lego sets because 11 x 15 = 165', 'int4': 'He has 2 sets left because 13 - 11 = 2', 'hypothesis': 'The answer is 2'}
step:int3 & sent3 & sent6 -> int4: He has 2 sets left because 13 - 11 = 2
QID:GSM8K_37_3afae2bcd4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spent $160 on video games because 8 x 20 = 160', 'int2': 'He earned $165 from his sale because 160 + 5 = 165', 'int3': 'He sold 11 lego sets because 11 x 15 = 165', 'int4': 'He has 2 sets left because 13 - 11 = 2', 'hypothesis': 'The answer is 2'}
step:int3 & sent3 & sent6 -> int4: He has 2 sets left because 13 - 11 = 2
step:int4 & sent6 -> hypothesis
QID:GSM8K_37_3afae2bcd4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spent $160 on video games because 8 x 20 = 160', 'int2': 'He earned $165 from his sale because 160 + 5 = 165', 'int3': 'He sold 11 lego sets because 11 x 15 = 165', 'int4': 'He has 2 sets left because 13 - 11 = 2', 'hypothesis': 'The answer is 2'}
step:int4 & sent6 -> hypothesis
QID:GSM8K_37_3afae2bcd4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He spent $160 on video games because 8 x 20 = 160', 'int2': 'He earned $165 from his sale because 160 + 5 = 165', 'int3': 'He sold 11 lego sets because 11 x 15 = 165', 'int4': 'He has 2 sets left because 13 - 11 = 2', 'hypothesis': 'The answer is 2'}
step:int4 & sent6 -> hypothesis
step:sent5 -> int1: He spends 8*20=$40 on video games.
step:int1 & sent5 -> int2: He has 40-5=$25 left.
step:int2 & sent4 & sent3 -> int3: He still has 25-13=2 lego sets
step:int3 & sent6 -> hypothesis



======================

pred:sent5 & sent3 & sent1 -> int1: Dana spends 1/3 of her time running because 3 / 4 = 1/3; int1 & sent2 -> int2: She spends 1/3 of her time walking because 2 / 3 = 1/3; sent4 & int2 & sent3 -> int3: She can travel 18 miles in six hours because 6 / 3 = 18; int3 & sent4 & sent3 -> hypothesis
gold:sent2 & sent3 -> int1: If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.; sent1 & sent5 -> int2: And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.; int2 & sent5 -> int3: If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.; int3 & sent4 -> int4: If one-third of the time is spent running, then she runs for 6-4=2 hours.; int1 & int4 & sent4 -> int5: Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.; int2 & int3 -> int6: She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.; int5 & int6 -> int7: Thus, altogether, she travels 12+6=18 miles.; int7 & sent3 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent5 & sent3 & sent1 -> int1: Dana spends 1/3 of her time running because 3 / 4 = 1/3
step_parts:['sent5 & sent3 & sent1 -> int1', ' Dana spends 1/3 of her time running because 3 / 4 = 1/3']
lhs_ids:['sent5', 'sent3', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent3', 'sent5'}
	 rhs = int1, int_str=dana spends 1/3 of her time running because 3 / 4 = 1/3
step: int1 & sent2 -> int2: She spends 1/3 of her time walking because 2 / 3 = 1/3
step_parts:['int1 & sent2 -> int2', ' She spends 1/3 of her time walking because 2 / 3 = 1/3']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent5'}
	 rhs = int2, int_str=she spends 1/3 of her time walking because 2 / 3 = 1/3
step: sent4 & int2 & sent3 -> int3: She can travel 18 miles in six hours because 6 / 3 = 18
step_parts:['sent4 & int2 & sent3 -> int3', ' She can travel 18 miles in six hours because 6 / 3 = 18']
lhs_ids:['sent4', 'int2', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent5', 'sent3'}
	 rhs = int3, int_str=she can travel 18 miles in six hours because 6 / 3 = 18
step: int3 & sent4 & sent3 -> hypothesis
step_parts:['int3 & sent4 & sent3 -> hypothesis']
lhs_ids:['int3', 'sent4', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 18
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent5 & sent3 & sent1 -> int1: Dana spends 1/3 of her time running because 3 / 4 = 1/3; int1 & sent2 -> int2: She spends 1/3 of her time walking because 2 / 3 = 1/3; sent4 & int2 & sent3 -> int3: She can travel 18 miles in six hours because 6 / 3 = 18; int3 & sent4 & sent3 -> hypothesis
	sentences:['sent1 & sent3 & sent5 -> int1', 'int1 & sent2 -> int2', 'int2 & sent3 & sent4 -> int3', 'int3 & sent3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent3', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent3', 'sent5']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent5']}, {'int': 'int3', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent5', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'dana spends 1/3 of her time running because 3 / 4 = 1/3', 'int2': 'she spends 1/3 of her time walking because 2 / 3 = 1/3', 'int3': 'she can travel 18 miles in six hours because 6 / 3 = 18', 'hypothesis': 'the answer is 18'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent3 -> int1: If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.
step_parts:['sent2 & sent3 -> int1', ' If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=if dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour
step: sent1 & sent5 -> int2: And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.
step_parts:['sent1 & sent5 -> int2', ' And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.']
lhs_ids:['sent1', 'sent5']	 rhs = int2	 all_ancestors={'sent1', 'sent5'}
	 rhs = int2, int_str=and since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=15 miles per hour
step: int2 & sent5 -> int3: If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.
step_parts:['int2 & sent5 -> int3', ' If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.']
lhs_ids:['int2', 'sent5']	 rhs = int3	 all_ancestors={'sent1', 'sent5'}
	 rhs = int3, int_str=if two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours
step: int3 & sent4 -> int4: If one-third of the time is spent running, then she runs for 6-4=2 hours.
step_parts:['int3 & sent4 -> int4', ' If one-third of the time is spent running, then she runs for 6-4=2 hours.']
lhs_ids:['int3', 'sent4']	 rhs = int4	 all_ancestors={'sent1', 'sent4', 'sent5'}
	 rhs = int4, int_str=if one-third of the time is spent running, then she runs for 6-4=2 hours
step: int1 & int4 & sent4 -> int5: Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.
step_parts:['int1 & int4 & sent4 -> int5', ' Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.']
lhs_ids:['int1', 'int4', 'sent4']	 rhs = int5	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = int5, int_str=thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles
step: int2 & int3 -> int6: She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.
step_parts:['int2 & int3 -> int6', ' She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.']
lhs_ids:['int2', 'int3']	 rhs = int6	 all_ancestors={'sent1', 'sent5'}
	 rhs = int6, int_str=she walks for 4 hours at 15 miles per hour, or 4*15=6 miles
step: int5 & int6 -> int7: Thus, altogether, she travels 12+6=18 miles.
step_parts:['int5 & int6 -> int7', ' Thus, altogether, she travels 12+6=18 miles.']
lhs_ids:['int5', 'int6']	 rhs = int7	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = int7, int_str=thus, altogether, she travels 12+6=18 miles
step: int7 & sent3 & sent4 -> hypothesis
step_parts:['int7 & sent3 & sent4 -> hypothesis']
lhs_ids:['int7', 'sent3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 18
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.; sent1 & sent5 -> int2: And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.; int2 & sent5 -> int3: If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.; int3 & sent4 -> int4: If one-third of the time is spent running, then she runs for 6-4=2 hours.; int1 & int4 & sent4 -> int5: Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.; int2 & int3 -> int6: She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.; int5 & int6 -> int7: Thus, altogether, she travels 12+6=18 miles.; int7 & sent3 & sent4 -> hypothesis;
	sentences:['sent2 & sent3 -> int1', 'sent1 & sent5 -> int2', 'int2 & sent5 -> int3', 'int3 & sent4 -> int4', 'int1 & int4 & sent4 -> int5', 'int2 & int3 -> int6', 'int5 & int6 -> int7', 'int7 & sent3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['sent1', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent5'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'int4'}, {'lhs': ['int1', 'int4', 'sent4'], 'rhs': 'int5'}, {'lhs': ['int2', 'int3'], 'rhs': 'int6'}, {'lhs': ['int5', 'int6'], 'rhs': 'int7'}, {'lhs': ['int7', 'sent3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent5']}, {'int': 'int3', 'ancestors': ['sent1', 'sent5']}, {'int': 'int4', 'ancestors': ['sent1', 'sent4', 'sent5']}, {'int': 'int5', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5', 'sent3']}, {'int': 'int6', 'ancestors': ['sent1', 'sent5']}, {'int': 'int7', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'if dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour', 'int2': 'and since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=15 miles per hour', 'int3': 'if two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours', 'int4': 'if one-third of the time is spent running, then she runs for 6-4=2 hours', 'int5': 'thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles', 'int6': 'she walks for 4 hours at 15 miles per hour, or 4*15=6 miles', 'int7': 'thus, altogether, she travels 12+6=18 miles', 'hypothesis': 'the answer is 18'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int5', 'int3': 'int5', 'hypothesis': 'int5'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int5', 'int3': 'int5', 'hypothesis': 'int5'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4', 'sent5']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4', 'sent5']
		sentences:['int2 & sent2 -> int5', 'int5 & sent3 & sent4 -> int5', 'int5 & sent3 & sent4 -> int5', 'sent1 & sent3 & sent5 -> int2']
		sentences_gold:['int1 & int4 & sent4 -> int5', 'int2 & int3 -> int6', 'int2 & sent5 -> int3', 'int3 & sent4 -> int4', 'int5 & int6 -> int7', 'int7 & sent3 & sent4 -> hypothesis', 'sent1 & sent5 -> int2', 'sent2 & sent3 -> int1']
step:sent2 & sent3 -> int1: If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:sent2 & sent3 -> int1: If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:sent2 & sent3 -> int1: If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.
step:sent1 & sent5 -> int2: And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:sent1 & sent5 -> int2: And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:sent1 & sent5 -> int2: And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.
step:int2 & sent5 -> int3: If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int2 & sent5 -> int3: If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int2 & sent5 -> int3: If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.
step:int3 & sent4 -> int4: If one-third of the time is spent running, then she runs for 6-4=2 hours.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int3 & sent4 -> int4: If one-third of the time is spent running, then she runs for 6-4=2 hours.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int3 & sent4 -> int4: If one-third of the time is spent running, then she runs for 6-4=2 hours.
step:int1 & int4 & sent4 -> int5: Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int1 & int4 & sent4 -> int5: Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int1 & int4 & sent4 -> int5: Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int1 & int4 & sent4 -> int5: Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.
step:int2 & int3 -> int6: She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int2 & int3 -> int6: She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int2 & int3 -> int6: She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.
step:int5 & int6 -> int7: Thus, altogether, she travels 12+6=18 miles.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int5 & int6 -> int7: Thus, altogether, she travels 12+6=18 miles.
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int5 & int6 -> int7: Thus, altogether, she travels 12+6=18 miles.
step:int7 & sent3 & sent4 -> hypothesis
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int7 & sent3 & sent4 -> hypothesis
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int7 & sent3 & sent4 -> hypothesis
QID:GSM8K_39_99b35180d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour.', 'int2': 'And since she can run at a speed that is 4 times faster than she can walk, this means she can walk at 6/4=1.5 miles per hour.', 'int3': 'If two-thirds of the time is spent walking, then she walks for 6*(2/3)=4 hours.', 'int4': 'If one-third of the time is spent running, then she runs for 6-4=2 hours.', 'int5': 'Thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles.', 'int6': 'She walks for 4 hours at 1.5 miles per hour, or 4*1.5=6 miles.', 'int7': 'Thus, altogether, she travels 12+6=18 miles.', 'hypothesis': 'The answer is 18'}
step:int7 & sent3 & sent4 -> hypothesis
step:sent5 & sent3 & sent1 -> int1: Dana spends 1/3 of her time running because 3 / 4 = 1/3
step:int1 & sent2 -> int2: She spends 1/3 of her time walking because 2 / 3 = 1/3
step:sent4 & int2 & sent3 -> int3: She can travel 18 miles in six hours because 6 / 3 = 18
step:int3 & sent4 & sent3 -> hypothesis



======================

pred:sent3 & sent2 -> int1: Ben's iphone is 1 year old, so it's 2*1 = 2 years old; int1 & sent1 & sent4 -> int2: Brandon's iphone is 4 times as old as Ben's iphone, so it's 2*4 = 8 years old; int2 & sent4 & sent3 -> hypothesis
gold:sent2 & sent3 -> int1: Ben’s iPhone is 1*2 = 2 years old.; int1 & sent1 -> int2: Brandon’s iPhone is 4*2 = 8 years old.; int2 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent2 -> int1: Ben's iphone is 1 year old, so it's 2*1 = 2 years old
step_parts:['sent3 & sent2 -> int1', " Ben's iphone is 1 year old, so it's 2*1 = 2 years old"]
lhs_ids:['sent3', 'sent2']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=ben's iphone is 1 year old, so it's 2*1 = 2 years old
step: int1 & sent1 & sent4 -> int2: Brandon's iphone is 4 times as old as Ben's iphone, so it's 2*4 = 8 years old
step_parts:['int1 & sent1 & sent4 -> int2', " Brandon's iphone is 4 times as old as Ben's iphone, so it's 2*4 = 8 years old"]
lhs_ids:['int1', 'sent1', 'sent4']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent1'}
	 rhs = int2, int_str=brandon's iphone is 4 times as old as ben's iphone, so it's 2*4 = 8 years old
step: int2 & sent4 & sent3 -> hypothesis
step_parts:['int2 & sent4 & sent3 -> hypothesis']
lhs_ids:['int2', 'sent4', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent1'}
	 rhs = hypothesis, int_str=the answer is 8
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent2 -> int1: Ben's iphone is 1 year old, so it's 2*1 = 2 years old; int1 & sent1 & sent4 -> int2: Brandon's iphone is 4 times as old as Ben's iphone, so it's 2*4 = 8 years old; int2 & sent4 & sent3 -> hypothesis
	sentences:['sent2 & sent3 -> int1', 'int1 & sent1 & sent4 -> int2', 'int2 & sent3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent1']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent1']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent1'}
	id_to_int:{'int1': "ben's iphone is 1 year old, so it's 2*1 = 2 years old", 'int2': "brandon's iphone is 4 times as old as ben's iphone, so it's 2*4 = 8 years old", 'hypothesis': 'the answer is 8'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent3 -> int1: Ben’s iPhone is 1*2 = 2 years old.
step_parts:['sent2 & sent3 -> int1', ' Ben’s iPhone is 1*2 = 2 years old.']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=ben’s iphone is 1*2 = 2 years old
step: int1 & sent1 -> int2: Brandon’s iPhone is 4*2 = 8 years old.
step_parts:['int1 & sent1 -> int2', ' Brandon’s iPhone is 4*2 = 8 years old.']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=brandon’s iphone is 4*2 = 8 years old
step: int2 & sent4 -> hypothesis
step_parts:['int2 & sent4 -> hypothesis']
lhs_ids:['int2', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 8
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: Ben’s iPhone is 1*2 = 2 years old.; int1 & sent1 -> int2: Brandon’s iPhone is 4*2 = 8 years old.; int2 & sent4 -> hypothesis;
	sentences:['sent2 & sent3 -> int1', 'int1 & sent1 -> int2', 'int2 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'ben’s iphone is 1*2 = 2 years old', 'int2': 'brandon’s iphone is 4*2 = 8 years old', 'hypothesis': 'the answer is 8'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4', 'sent1'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['hypothesis & sent3 & sent4 -> hypothesis', 'int1 & sent1 & sent4 -> hypothesis', 'sent2 & sent3 -> int1']
		sentences_gold:['int1 & sent1 -> int2', 'int2 & sent4 -> hypothesis', 'sent2 & sent3 -> int1']
step:sent2 & sent3 -> int1: Ben’s iPhone is 1*2 = 2 years old.
QID:GSM8K_40_4dfa312de8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Ben’s iPhone is 1*2 = 2 years old.', 'int2': 'Brandon’s iPhone is 4*2 = 8 years old.', 'hypothesis': 'The answer is 8'}
step:sent2 & sent3 -> int1: Ben’s iPhone is 1*2 = 2 years old.
QID:GSM8K_40_4dfa312de8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Ben’s iPhone is 1*2 = 2 years old.', 'int2': 'Brandon’s iPhone is 4*2 = 8 years old.', 'hypothesis': 'The answer is 8'}
step:sent2 & sent3 -> int1: Ben’s iPhone is 1*2 = 2 years old.
step:int1 & sent1 -> int2: Brandon’s iPhone is 4*2 = 8 years old.
QID:GSM8K_40_4dfa312de8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Ben’s iPhone is 1*2 = 2 years old.', 'int2': 'Brandon’s iPhone is 4*2 = 8 years old.', 'hypothesis': 'The answer is 8'}
step:int1 & sent1 -> int2: Brandon’s iPhone is 4*2 = 8 years old.
QID:GSM8K_40_4dfa312de8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Ben’s iPhone is 1*2 = 2 years old.', 'int2': 'Brandon’s iPhone is 4*2 = 8 years old.', 'hypothesis': 'The answer is 8'}
step:int1 & sent1 -> int2: Brandon’s iPhone is 4*2 = 8 years old.
step:int2 & sent4 -> hypothesis
QID:GSM8K_40_4dfa312de8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Ben’s iPhone is 1*2 = 2 years old.', 'int2': 'Brandon’s iPhone is 4*2 = 8 years old.', 'hypothesis': 'The answer is 8'}
step:int2 & sent4 -> hypothesis
QID:GSM8K_40_4dfa312de8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Ben’s iPhone is 1*2 = 2 years old.', 'int2': 'Brandon’s iPhone is 4*2 = 8 years old.', 'hypothesis': 'The answer is 8'}
step:int2 & sent4 -> hypothesis
step:sent3 & sent2 -> int1: Ben's iphone is 1 year old, so it's 2*1 = 2 years old
step:int1 & sent1 & sent4 -> int2: Brandon's iphone is 4 times as old as Ben's iphone, so it's 2*4 = 8 years old
step:int2 & sent4 & sent3 -> hypothesis



======================

pred:sent5 & sent2 -> int1: The distance the dragon could be sled is 1000 feet / 400 feet = 200 feet.; sent5 & sent2 -> int2: The distance the dragon could be slain is 1000 feet / 400 feet = 200 feet.; int1 & sent8 & int2 -> int3: If she held the gemstone, she could throw the javelin three times farther than when not holding the gemstone, or 200 feet / 3 = 100 feet.; int3 & sent9 & sent10 -> int4: Thus, she could stand and hit the dragon 100 feet away, or 200 feet / 100 feet = 200 feet away.; int4 & sent10 & sent9 -> hypothesis
gold:sent5 & sent8 -> int1: With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.; int1 & sent2 -> int2: 1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.; int2 & sent10 & sent9 -> hypothesis;



======================

Reading predicted proof
step:sent5 & sent2 -> int1: The distance the dragon could be sled is 1000 feet / 400 feet = 200 feet.
step_parts:['sent5 & sent2 -> int1', ' The distance the dragon could be sled is 1000 feet / 400 feet = 200 feet.']
lhs_ids:['sent5', 'sent2']	 rhs = int1	 all_ancestors={'sent2', 'sent5'}
	 rhs = int1, int_str=the distance the dragon could be sled is 1000 feet / 400 feet = 200 feet
step: sent5 & sent2 -> int2: The distance the dragon could be slain is 1000 feet / 400 feet = 200 feet.
step_parts:['sent5 & sent2 -> int2', ' The distance the dragon could be slain is 1000 feet / 400 feet = 200 feet.']
lhs_ids:['sent5', 'sent2']	 rhs = int2	 all_ancestors={'sent2', 'sent5'}
	 rhs = int2, int_str=the distance the dragon could be slain is 1000 feet / 400 feet = 200 feet
step: int1 & sent8 & int2 -> int3: If she held the gemstone, she could throw the javelin three times farther than when not holding the gemstone, or 200 feet / 3 = 100 feet.
step_parts:['int1 & sent8 & int2 -> int3', ' If she held the gemstone, she could throw the javelin three times farther than when not holding the gemstone, or 200 feet / 3 = 100 feet.']
lhs_ids:['int1', 'sent8', 'int2']	 rhs = int3	 all_ancestors={'sent2', 'sent5', 'sent8'}
	 rhs = int3, int_str=if she held the gemstone, she could throw the javelin three times farther than when not holding the gemstone, or 200 feet / 3 = 100 feet
step: int3 & sent9 & sent10 -> int4: Thus, she could stand and hit the dragon 100 feet away, or 200 feet / 100 feet = 200 feet away.
step_parts:['int3 & sent9 & sent10 -> int4', ' Thus, she could stand and hit the dragon 100 feet away, or 200 feet / 100 feet = 200 feet away.']
lhs_ids:['int3', 'sent9', 'sent10']	 rhs = int4	 all_ancestors={'sent2', 'sent5', 'sent8', 'sent10', 'sent9'}
	 rhs = int4, int_str=thus, she could stand and hit the dragon 100 feet away, or 200 feet / 100 feet = 200 feet away
step: int4 & sent10 & sent9 -> hypothesis
step_parts:['int4 & sent10 & sent9 -> hypothesis']
lhs_ids:['int4', 'sent10', 'sent9']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent10', 'sent9', 'sent5', 'sent8'}
	 rhs = hypothesis, int_str=the answer is 200
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent5 & sent2 -> int1: The distance the dragon could be sled is 1000 feet / 400 feet = 200 feet.; sent5 & sent2 -> int2: The distance the dragon could be slain is 1000 feet / 400 feet = 200 feet.; int1 & sent8 & int2 -> int3: If she held the gemstone, she could throw the javelin three times farther than when not holding the gemstone, or 200 feet / 3 = 100 feet.; int3 & sent9 & sent10 -> int4: Thus, she could stand and hit the dragon 100 feet away, or 200 feet / 100 feet = 200 feet away.; int4 & sent10 & sent9 -> hypothesis
	sentences:['sent2 & sent5 -> int1', 'sent2 & sent5 -> int2', 'int1 & int2 & sent8 -> int3', 'int3 & sent10 & sent9 -> int4', 'int4 & sent10 & sent9 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent5'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent8'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent10', 'sent9'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent10', 'sent9'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent5']}, {'int': 'int2', 'ancestors': ['sent2', 'sent5']}, {'int': 'int3', 'ancestors': ['sent2', 'sent5', 'sent8']}, {'int': 'int4', 'ancestors': ['sent2', 'sent5', 'sent8', 'sent10', 'sent9']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent10', 'sent9', 'sent5', 'sent8']}]
	relevant_sentences:{'sent2', 'sent5', 'sent8', 'sent10', 'sent9'}
	id_to_int:{'int1': 'the distance the dragon could be sled is 1000 feet / 400 feet = 200 feet', 'int2': 'the distance the dragon could be slain is 1000 feet / 400 feet = 200 feet', 'int3': 'if she held the gemstone, she could throw the javelin three times farther than when not holding the gemstone, or 200 feet / 3 = 100 feet', 'int4': 'thus, she could stand and hit the dragon 100 feet away, or 200 feet / 100 feet = 200 feet away', 'hypothesis': 'the answer is 200'}



||||||||||||||||||||||

Reading gold proof
step:sent5 & sent8 -> int1: With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.
step_parts:['sent5 & sent8 -> int1', ' With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.']
lhs_ids:['sent5', 'sent8']	 rhs = int1	 all_ancestors={'sent8', 'sent5'}
	 rhs = int1, int_str=with the gemstone, polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet
step: int1 & sent2 -> int2: 1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.
step_parts:['int1 & sent2 -> int2', " 1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet."]
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent2', 'sent8', 'sent5'}
	 rhs = int2, int_str=1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet
step: int2 & sent10 & sent9 -> hypothesis
step_parts:['int2 & sent10 & sent9 -> hypothesis']
lhs_ids:['int2', 'sent10', 'sent9']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent5', 'sent8', 'sent10', 'sent9'}
	 rhs = hypothesis, int_str=the answer is 200
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent5 & sent8 -> int1: With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.; int1 & sent2 -> int2: 1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.; int2 & sent10 & sent9 -> hypothesis;
	sentences:['sent5 & sent8 -> int1', 'int1 & sent2 -> int2', 'int2 & sent10 & sent9 -> hypothesis']
	inferences:[{'lhs': ['sent5', 'sent8'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent10', 'sent9'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent8', 'sent5']}, {'int': 'int2', 'ancestors': ['sent2', 'sent8', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent5', 'sent8', 'sent10', 'sent9']}]
	relevant_sentences:{'sent2', 'sent5', 'sent8', 'sent10', 'sent9'}
	id_to_int:{'int1': 'with the gemstone, polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet', 'int2': "1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet", 'hypothesis': 'the answer is 200'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'int3': 'int2', 'int4': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'int3': 'int2', 'int4': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent2', 'sent5', 'sent8', 'sent10', 'sent9'}
relevant_sentences_gold:{'sent2', 'sent5', 'sent8', 'sent10', 'sent9'}
		sentences:['sent10', 'sent2', 'sent5', 'sent8', 'sent9']
		sentences_gold:['sent10', 'sent2', 'sent5', 'sent8', 'sent9']
		sentences:['hypothesis & sent10 & sent9 -> hypothesis', 'int2 & int2 & sent8 -> int2', 'int2 & sent10 & sent9 -> hypothesis', 'sent2 & sent5 -> int2', 'sent2 & sent5 -> int2']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & sent10 & sent9 -> hypothesis', 'sent5 & sent8 -> int1']
step:sent5 & sent8 -> int1: With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.
QID:GSM8K_41_e85a06590c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.', 'int2': "1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.", 'hypothesis': 'The answer is 200'}
step:sent5 & sent8 -> int1: With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.
QID:GSM8K_41_e85a06590c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.', 'int2': "1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.", 'hypothesis': 'The answer is 200'}
step:sent5 & sent8 -> int1: With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.
step:int1 & sent2 -> int2: 1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.
QID:GSM8K_41_e85a06590c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.', 'int2': "1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.", 'hypothesis': 'The answer is 200'}
step:int1 & sent2 -> int2: 1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.
QID:GSM8K_41_e85a06590c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.', 'int2': "1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.", 'hypothesis': 'The answer is 200'}
step:int1 & sent2 -> int2: 1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.
step:int2 & sent10 & sent9 -> hypothesis
QID:GSM8K_41_e85a06590c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.', 'int2': "1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.", 'hypothesis': 'The answer is 200'}
step:int2 & sent10 & sent9 -> hypothesis
QID:GSM8K_41_e85a06590c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.', 'int2': "1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.", 'hypothesis': 'The answer is 200'}
step:int2 & sent10 & sent9 -> hypothesis
QID:GSM8K_41_e85a06590c
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'With the gemstone, Polly could throw the javelin 3 times farther than 400 feet, for a distance of 3*400=1200 feet.', 'int2': "1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet.", 'hypothesis': 'The answer is 200'}
step:int2 & sent10 & sent9 -> hypothesis
step:sent5 & sent2 -> int1: The distance the dragon could be sled is 1000 feet / 400 feet = 200 feet.
step:sent5 & sent2 -> int2: The distance the dragon could be slain is 1000 feet / 400 feet = 200 feet.
step:int1 & sent8 & int2 -> int3: If she held the gemstone, she could throw the javelin three times farther than when not holding the gemstone, or 200 feet / 3 = 100 feet.
step:int3 & sent9 & sent10 -> int4: Thus, she could stand and hit the dragon 100 feet away, or 200 feet / 100 feet = 200 feet away.
step:int4 & sent10 & sent9 -> hypothesis



======================

pred:sent2 & sent1 -> int1: Grandma Jones made 5 pies * 8 pieces = 32 pieces of pie.; sent1 & sent2 -> int2: Grandma Jones made 5 pies * 8 pieces/pie = 20 pieces of pie.; sent7 & sent8 & int2 -> int3: After the guests had eaten, there were 20 pieces - 14 pieces = 26 pieces of pie left.; int1 & int3 & sent8 -> hypothesis
gold:sent1 & sent2 -> int1: To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.; int1 & sent7 & sent8 -> int2: If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.; int2 & sent8 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent1 -> int1: Grandma Jones made 5 pies * 8 pieces = 32 pieces of pie.
step_parts:['sent2 & sent1 -> int1', ' Grandma Jones made 5 pies * 8 pieces = 32 pieces of pie.']
lhs_ids:['sent2', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=grandma jones made 5 pies * 8 pieces = 32 pieces of pie
step: sent1 & sent2 -> int2: Grandma Jones made 5 pies * 8 pieces/pie = 20 pieces of pie.
step_parts:['sent1 & sent2 -> int2', ' Grandma Jones made 5 pies * 8 pieces/pie = 20 pieces of pie.']
lhs_ids:['sent1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=grandma jones made 5 pies * 8 pieces/pie = 20 pieces of pie
step: sent7 & sent8 & int2 -> int3: After the guests had eaten, there were 20 pieces - 14 pieces = 26 pieces of pie left.
step_parts:['sent7 & sent8 & int2 -> int3', ' After the guests had eaten, there were 20 pieces - 14 pieces = 26 pieces of pie left.']
lhs_ids:['sent7', 'sent8', 'int2']	 rhs = int3	 all_ancestors={'sent1', 'sent8', 'sent7', 'sent2'}
	 rhs = int3, int_str=after the guests had eaten, there were 20 pieces - 14 pieces = 26 pieces of pie left
step: int1 & int3 & sent8 -> hypothesis
step_parts:['int1 & int3 & sent8 -> hypothesis']
lhs_ids:['int1', 'int3', 'sent8']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent8', 'sent7'}
	 rhs = hypothesis, int_str=the answer is 26
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent1 -> int1: Grandma Jones made 5 pies * 8 pieces = 32 pieces of pie.; sent1 & sent2 -> int2: Grandma Jones made 5 pies * 8 pieces/pie = 20 pieces of pie.; sent7 & sent8 & int2 -> int3: After the guests had eaten, there were 20 pieces - 14 pieces = 26 pieces of pie left.; int1 & int3 & sent8 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'sent1 & sent2 -> int2', 'int2 & sent7 & sent8 -> int3', 'int1 & int3 & sent8 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['sent1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent7', 'sent8'], 'rhs': 'int3'}, {'lhs': ['int1', 'int3', 'sent8'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent8', 'sent7', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent8', 'sent7']}]
	relevant_sentences:{'sent1', 'sent2', 'sent8', 'sent7'}
	id_to_int:{'int1': 'grandma jones made 5 pies * 8 pieces = 32 pieces of pie', 'int2': 'grandma jones made 5 pies * 8 pieces/pie = 20 pieces of pie', 'int3': 'after the guests had eaten, there were 20 pieces - 14 pieces = 26 pieces of pie left', 'hypothesis': 'the answer is 26'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.
step_parts:['sent1 & sent2 -> int1', ' To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=to start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie
step: int1 & sent7 & sent8 -> int2: If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.
step_parts:['int1 & sent7 & sent8 -> int2', ' If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.']
lhs_ids:['int1', 'sent7', 'sent8']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent8', 'sent7'}
	 rhs = int2, int_str=if only 14 remained, then 40-14=26 pieces of pie had been taken by guests
step: int2 & sent8 -> hypothesis
step_parts:['int2 & sent8 -> hypothesis']
lhs_ids:['int2', 'sent8']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent8', 'sent7'}
	 rhs = hypothesis, int_str=the answer is 26
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.; int1 & sent7 & sent8 -> int2: If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.; int2 & sent8 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'int1 & sent7 & sent8 -> int2', 'int2 & sent8 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent7', 'sent8'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent8'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent8', 'sent7']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent8', 'sent7']}]
	relevant_sentences:{'sent1', 'sent2', 'sent8', 'sent7'}
	id_to_int:{'int1': 'to start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie', 'int2': 'if only 14 remained, then 40-14=26 pieces of pie had been taken by guests', 'hypothesis': 'the answer is 26'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int2', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int2', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent8', 'sent7'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent8', 'sent7'}
		sentences:['sent1', 'sent2', 'sent7', 'sent8']
		sentences_gold:['sent1', 'sent2', 'sent7', 'sent8']
		sentences:['int1 & int2 & sent8 -> int2', 'int1 & sent7 & sent8 -> int2', 'sent1 & sent2 -> int1', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 & sent7 & sent8 -> int2', 'int2 & sent8 -> hypothesis', 'sent1 & sent2 -> int1']
step:sent1 & sent2 -> int1: To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.
QID:GSM8K_42_0e55dd01d6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.', 'int2': 'If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.', 'hypothesis': 'The answer is 26'}
step:sent1 & sent2 -> int1: To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.
QID:GSM8K_42_0e55dd01d6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.', 'int2': 'If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.', 'hypothesis': 'The answer is 26'}
step:sent1 & sent2 -> int1: To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.
step:int1 & sent7 & sent8 -> int2: If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.
QID:GSM8K_42_0e55dd01d6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.', 'int2': 'If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.', 'hypothesis': 'The answer is 26'}
step:int1 & sent7 & sent8 -> int2: If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.
QID:GSM8K_42_0e55dd01d6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.', 'int2': 'If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.', 'hypothesis': 'The answer is 26'}
step:int1 & sent7 & sent8 -> int2: If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.
QID:GSM8K_42_0e55dd01d6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.', 'int2': 'If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.', 'hypothesis': 'The answer is 26'}
step:int1 & sent7 & sent8 -> int2: If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.
step:int2 & sent8 -> hypothesis
QID:GSM8K_42_0e55dd01d6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.', 'int2': 'If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.', 'hypothesis': 'The answer is 26'}
step:int2 & sent8 -> hypothesis
QID:GSM8K_42_0e55dd01d6
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie.', 'int2': 'If only 14 remained, then 40-14=26 pieces of pie had been taken by guests.', 'hypothesis': 'The answer is 26'}
step:int2 & sent8 -> hypothesis
step:sent2 & sent1 -> int1: Grandma Jones made 5 pies * 8 pieces = 32 pieces of pie.
step:sent1 & sent2 -> int2: Grandma Jones made 5 pies * 8 pieces/pie = 20 pieces of pie.
step:sent7 & sent8 & int2 -> int3: After the guests had eaten, there were 20 pieces - 14 pieces = 26 pieces of pie left.
step:int1 & int3 & sent8 -> hypothesis



======================

pred:sent2 & sent3 -> int1: A 300g bag of chips has 250 calories per serving so it has 250/5 = 120 calories per serving; int1 & sent5 & sent4 -> int2: You have already consumed 1800 calories so you can eat 1800-120 = 48 grams; int2 & sent4 & sent5 -> hypothesis
gold:sent4 & sent5 -> int1: If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat; int1 & sent2 & sent4 -> int2: If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving; sent3 -> int3: We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams; int2 & int3 -> int4: If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams; int4 & sent4 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent3 -> int1: A 300g bag of chips has 250 calories per serving so it has 250/5 = 120 calories per serving
step_parts:['sent2 & sent3 -> int1', ' A 300g bag of chips has 250 calories per serving so it has 250/5 = 120 calories per serving']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=a 300g bag of chips has 250 calories per serving so it has 250/5 = 120 calories per serving
step: int1 & sent5 & sent4 -> int2: You have already consumed 1800 calories so you can eat 1800-120 = 48 grams
step_parts:['int1 & sent5 & sent4 -> int2', ' You have already consumed 1800 calories so you can eat 1800-120 = 48 grams']
lhs_ids:['int1', 'sent5', 'sent4']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = int2, int_str=you have already consumed 1800 calories so you can eat 1800-120 = 48 grams
step: int2 & sent4 & sent5 -> hypothesis
step_parts:['int2 & sent4 & sent5 -> hypothesis']
lhs_ids:['int2', 'sent4', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 48
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: A 300g bag of chips has 250 calories per serving so it has 250/5 = 120 calories per serving; int1 & sent5 & sent4 -> int2: You have already consumed 1800 calories so you can eat 1800-120 = 48 grams; int2 & sent4 & sent5 -> hypothesis
	sentences:['sent2 & sent3 -> int1', 'int1 & sent4 & sent5 -> int2', 'int2 & sent4 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'a 300g bag of chips has 250 calories per serving so it has 250/5 = 120 calories per serving', 'int2': 'you have already consumed 1800 calories so you can eat 1800-120 = 48 grams', 'hypothesis': 'the answer is 48'}



||||||||||||||||||||||

Reading gold proof
step:sent4 & sent5 -> int1: If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat
step_parts:['sent4 & sent5 -> int1', ' If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat']
lhs_ids:['sent4', 'sent5']	 rhs = int1	 all_ancestors={'sent4', 'sent5'}
	 rhs = int1, int_str=if the total calorie target is 2000 and i have consumed 1800 calories then i have 2000-1800 = 200 calories left to eat
step: int1 & sent2 & sent4 -> int2: If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving
step_parts:['int1 & sent2 & sent4 -> int2', ' If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving']
lhs_ids:['int1', 'sent2', 'sent4']	 rhs = int2	 all_ancestors={'sent2', 'sent4', 'sent5'}
	 rhs = int2, int_str=if each serving of chips has 250 calories and i only have 200 calories left to eat, then i can only eat 200/250 of a serving = 4/5 of a serving
step: sent3 -> int3: We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams
step_parts:['sent3 -> int3', ' We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams']
lhs_ids:['sent3']	 rhs = int3	 all_ancestors={'sent3'}
	 rhs = int3, int_str=we also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams
step: int2 & int3 -> int4: If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams
step_parts:['int2 & int3 -> int4', ' If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams']
lhs_ids:['int2', 'int3']	 rhs = int4	 all_ancestors={'sent2', 'sent4', 'sent3', 'sent5'}
	 rhs = int4, int_str=if i can only eat 4/5 of a serving, then i can eat only 60g * 4/5 = 240g/5 = 48 grams
step: int4 & sent4 & sent5 -> hypothesis
step_parts:['int4 & sent4 & sent5 -> hypothesis']
lhs_ids:['int4', 'sent4', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent4', 'sent3', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 48
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent4 & sent5 -> int1: If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat; int1 & sent2 & sent4 -> int2: If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving; sent3 -> int3: We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams; int2 & int3 -> int4: If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams; int4 & sent4 & sent5 -> hypothesis;
	sentences:['sent4 & sent5 -> int1', 'int1 & sent2 & sent4 -> int2', 'sent3 -> int3', 'int2 & int3 -> int4', 'int4 & sent4 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent4', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2', 'sent4'], 'rhs': 'int2'}, {'lhs': ['sent3'], 'rhs': 'int3'}, {'lhs': ['int2', 'int3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent4', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent4', 'sent5']}, {'int': 'int2', 'ancestors': ['sent2', 'sent4', 'sent5']}, {'int': 'int3', 'ancestors': ['sent3']}, {'int': 'int4', 'ancestors': ['sent2', 'sent4', 'sent3', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent4', 'sent3', 'sent5']}]
	relevant_sentences:{'sent2', 'sent4', 'sent3', 'sent5'}
	id_to_int:{'int1': 'if the total calorie target is 2000 and i have consumed 1800 calories then i have 2000-1800 = 200 calories left to eat', 'int2': 'if each serving of chips has 250 calories and i only have 200 calories left to eat, then i can only eat 200/250 of a serving = 4/5 of a serving', 'int3': 'we also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams', 'int4': 'if i can only eat 4/5 of a serving, then i can eat only 60g * 4/5 = 240g/5 = 48 grams', 'hypothesis': 'the answer is 48'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int3', 'int2': 'int4', 'hypothesis': 'int4'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int3', 'int2': 'int4', 'hypothesis': 'int4'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4', 'sent5'}
relevant_sentences_gold:{'sent2', 'sent4', 'sent3', 'sent5'}
		sentences:['sent2', 'sent3', 'sent4', 'sent5']
		sentences_gold:['sent2', 'sent3', 'sent4', 'sent5']
		sentences:['int3 & sent4 & sent5 -> int4', 'int4 & sent4 & sent5 -> int4', 'sent2 & sent3 -> int3']
		sentences_gold:['int1 & sent2 & sent4 -> int2', 'int2 & int3 -> int4', 'int4 & sent4 & sent5 -> hypothesis', 'sent3 -> int3', 'sent4 & sent5 -> int1']
step:sent4 & sent5 -> int1: If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat
QID:GSM8K_43_0d9cbd33eb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat', 'int2': 'If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving', 'int3': 'We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams', 'int4': 'If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams', 'hypothesis': 'The answer is 48'}
step:sent4 & sent5 -> int1: If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat
QID:GSM8K_43_0d9cbd33eb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat', 'int2': 'If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving', 'int3': 'We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams', 'int4': 'If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams', 'hypothesis': 'The answer is 48'}
step:sent4 & sent5 -> int1: If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat
step:int1 & sent2 & sent4 -> int2: If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving
QID:GSM8K_43_0d9cbd33eb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat', 'int2': 'If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving', 'int3': 'We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams', 'int4': 'If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams', 'hypothesis': 'The answer is 48'}
step:int1 & sent2 & sent4 -> int2: If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving
QID:GSM8K_43_0d9cbd33eb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat', 'int2': 'If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving', 'int3': 'We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams', 'int4': 'If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams', 'hypothesis': 'The answer is 48'}
step:int1 & sent2 & sent4 -> int2: If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving
QID:GSM8K_43_0d9cbd33eb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat', 'int2': 'If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving', 'int3': 'We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams', 'int4': 'If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams', 'hypothesis': 'The answer is 48'}
step:int1 & sent2 & sent4 -> int2: If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving
step:sent3 -> int3: We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams
QID:GSM8K_43_0d9cbd33eb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat', 'int2': 'If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving', 'int3': 'We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams', 'int4': 'If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams', 'hypothesis': 'The answer is 48'}
step:sent3 -> int3: We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams
step:int2 & int3 -> int4: If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams
QID:GSM8K_43_0d9cbd33eb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat', 'int2': 'If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving', 'int3': 'We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams', 'int4': 'If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams', 'hypothesis': 'The answer is 48'}
step:int2 & int3 -> int4: If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams
QID:GSM8K_43_0d9cbd33eb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat', 'int2': 'If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving', 'int3': 'We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams', 'int4': 'If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams', 'hypothesis': 'The answer is 48'}
step:int2 & int3 -> int4: If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams
step:int4 & sent4 & sent5 -> hypothesis
QID:GSM8K_43_0d9cbd33eb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat', 'int2': 'If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving', 'int3': 'We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams', 'int4': 'If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams', 'hypothesis': 'The answer is 48'}
step:int4 & sent4 & sent5 -> hypothesis
QID:GSM8K_43_0d9cbd33eb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat', 'int2': 'If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving', 'int3': 'We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams', 'int4': 'If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams', 'hypothesis': 'The answer is 48'}
step:int4 & sent4 & sent5 -> hypothesis
QID:GSM8K_43_0d9cbd33eb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If the total calorie target is 2000 and I have consumed 1800 calories then I have 2000-1800 = 200 calories left to eat', 'int2': 'If each serving of chips has 250 calories and I only have 200 calories left to eat, then I can only eat 200/250 of a serving = 4/5 of a serving', 'int3': 'We also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams', 'int4': 'If I can only eat 4/5 of a serving, then I can eat only 60g * 4/5 = 240g/5 = 48 grams', 'hypothesis': 'The answer is 48'}
step:int4 & sent4 & sent5 -> hypothesis
step:sent2 & sent3 -> int1: A 300g bag of chips has 250 calories per serving so it has 250/5 = 120 calories per serving
step:int1 & sent5 & sent4 -> int2: You have already consumed 1800 calories so you can eat 1800-120 = 48 grams
step:int2 & sent4 & sent5 -> hypothesis



======================

pred:sent3 & sent6 -> int1: He makes 10 candles and each candle costs $2.00 so he makes 10*2 = $20.00; int1 & sent7 & sent5 -> int2: His profit is $20.00 because 20 - 10 = 20; int2 & sent7 -> hypothesis
gold:sent2 & sent3 & sent7 -> int1: 1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax; int1 & sent4 & sent5 -> int2: 1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00; sent6 & sent7 -> int3: He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00; int2 & int3 & sent7 -> int4: If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00; int4 & sent7 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent6 -> int1: He makes 10 candles and each candle costs $2.00 so he makes 10*2 = $20.00
step_parts:['sent3 & sent6 -> int1', ' He makes 10 candles and each candle costs $2.00 so he makes 10*2 = $20.00']
lhs_ids:['sent3', 'sent6']	 rhs = int1	 all_ancestors={'sent6', 'sent3'}
	 rhs = int1, int_str=he makes 10 candles and each candle costs $200 so he makes 10*2 = $2000
step: int1 & sent7 & sent5 -> int2: His profit is $20.00 because 20 - 10 = 20
step_parts:['int1 & sent7 & sent5 -> int2', ' His profit is $20.00 because 20 - 10 = 20']
lhs_ids:['int1', 'sent7', 'sent5']	 rhs = int2	 all_ancestors={'sent6', 'sent3', 'sent7', 'sent5'}
	 rhs = int2, int_str=his profit is $2000 because 20 - 10 = 20
step: int2 & sent7 -> hypothesis
step_parts:['int2 & sent7 -> hypothesis']
lhs_ids:['int2', 'sent7']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent3', 'sent7', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 20
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent6 -> int1: He makes 10 candles and each candle costs $2.00 so he makes 10*2 = $20.00; int1 & sent7 & sent5 -> int2: His profit is $20.00 because 20 - 10 = 20; int2 & sent7 -> hypothesis
	sentences:['sent3 & sent6 -> int1', 'int1 & sent5 & sent7 -> int2', 'int2 & sent7 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent6'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent5', 'sent7'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent7'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent6', 'sent3']}, {'int': 'int2', 'ancestors': ['sent6', 'sent3', 'sent7', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent3', 'sent7', 'sent5']}]
	relevant_sentences:{'sent6', 'sent3', 'sent7', 'sent5'}
	id_to_int:{'int1': 'he makes 10 candles and each candle costs $200 so he makes 10*2 = $2000', 'int2': 'his profit is $2000 because 20 - 10 = 20', 'hypothesis': 'the answer is 20'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent3 & sent7 -> int1: 1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax
step_parts:['sent2 & sent3 & sent7 -> int1', ' 1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax']
lhs_ids:['sent2', 'sent3', 'sent7']	 rhs = int1	 all_ancestors={'sent2', 'sent3', 'sent7'}
	 rhs = int1, int_str=1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax
step: int1 & sent4 & sent5 -> int2: 1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00
step_parts:['int1 & sent4 & sent5 -> int2', ' 1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00']
lhs_ids:['int1', 'sent4', 'sent5']	 rhs = int2	 all_ancestors={'sent2', 'sent5', 'sent3', 'sent4', 'sent7'}
	 rhs = int2, int_str=1 pound of beeswax costs $1000 and he needs 2 pounds so his supplies will cost 10*2 = $2000
step: sent6 & sent7 -> int3: He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00
step_parts:['sent6 & sent7 -> int3', " He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00"]
lhs_ids:['sent6', 'sent7']	 rhs = int3	 all_ancestors={'sent6', 'sent7'}
	 rhs = int3, int_str=he wants to sell each candle for $200 each and he's selling 20 candles so that's 2*20 = $4000
step: int2 & int3 & sent7 -> int4: If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00
step_parts:['int2 & int3 & sent7 -> int4', ' If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00']
lhs_ids:['int2', 'int3', 'sent7']	 rhs = int4	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5', 'sent3', 'sent7'}
	 rhs = int4, int_str=if he makes $4000 selling candles and his supplies cost $2000 then his net profit is 40-20 = $2000
step: int4 & sent7 -> hypothesis
step_parts:['int4 & sent7 -> hypothesis']
lhs_ids:['int4', 'sent7']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5', 'sent3', 'sent7'}
	 rhs = hypothesis, int_str=the answer is 20
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 & sent7 -> int1: 1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax; int1 & sent4 & sent5 -> int2: 1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00; sent6 & sent7 -> int3: He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00; int2 & int3 & sent7 -> int4: If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00; int4 & sent7 -> hypothesis;
	sentences:['sent2 & sent3 & sent7 -> int1', 'int1 & sent4 & sent5 -> int2', 'sent6 & sent7 -> int3', 'int2 & int3 & sent7 -> int4', 'int4 & sent7 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3', 'sent7'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4', 'sent5'], 'rhs': 'int2'}, {'lhs': ['sent6', 'sent7'], 'rhs': 'int3'}, {'lhs': ['int2', 'int3', 'sent7'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent7'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3', 'sent7']}, {'int': 'int2', 'ancestors': ['sent2', 'sent5', 'sent3', 'sent4', 'sent7']}, {'int': 'int3', 'ancestors': ['sent6', 'sent7']}, {'int': 'int4', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5', 'sent3', 'sent7']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5', 'sent3', 'sent7']}]
	relevant_sentences:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4', 'sent7'}
	id_to_int:{'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $1000 and he needs 2 pounds so his supplies will cost 10*2 = $2000', 'int3': "he wants to sell each candle for $200 each and he's selling 20 candles so that's 2*20 = $4000", 'int4': 'if he makes $4000 selling candles and his supplies cost $2000 then his net profit is 40-20 = $2000', 'hypothesis': 'the answer is 20'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int3', 'int2': 'int4', 'hypothesis': 'int4'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int3', 'int2': 'int4', 'hypothesis': 'int4'}
relevant_sentences_pred:{'sent6', 'sent3', 'sent7', 'sent5'}
relevant_sentences_gold:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4', 'sent7'}
		sentences:['sent3', 'sent5', 'sent6', 'sent7']
		sentences_gold:['sent2', 'sent3', 'sent4', 'sent5', 'sent6', 'sent7']
		sentences:['int3 & sent5 & sent7 -> int4', 'int4 & sent7 -> int4', 'sent3 & sent6 -> int3']
		sentences_gold:['int1 & sent4 & sent5 -> int2', 'int2 & int3 & sent7 -> int4', 'int4 & sent7 -> hypothesis', 'sent2 & sent3 & sent7 -> int1', 'sent6 & sent7 -> int3']
step:sent2 & sent3 & sent7 -> int1: 1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:sent2 & sent3 & sent7 -> int1: 1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:sent2 & sent3 & sent7 -> int1: 1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:sent2 & sent3 & sent7 -> int1: 1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax
step:int1 & sent4 & sent5 -> int2: 1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:int1 & sent4 & sent5 -> int2: 1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:int1 & sent4 & sent5 -> int2: 1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:int1 & sent4 & sent5 -> int2: 1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00
step:sent6 & sent7 -> int3: He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:sent6 & sent7 -> int3: He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:sent6 & sent7 -> int3: He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00
step:int2 & int3 & sent7 -> int4: If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:int2 & int3 & sent7 -> int4: If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:int2 & int3 & sent7 -> int4: If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:int2 & int3 & sent7 -> int4: If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00
step:int4 & sent7 -> hypothesis
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:int4 & sent7 -> hypothesis
QID:GSM8K_44_40def09442
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '1 pound of beeswax and the wick make 10 candles and he wants to make 20 candles so he needs 20/10 = 2 pounds of beeswax', 'int2': '1 pound of beeswax costs $10.00 and he needs 2 pounds so his supplies will cost 10*2 = $20.00', 'int3': "He wants to sell each candle for $2.00 each and he's selling 20 candles so that's 2*20 = $40.00", 'int4': 'If he makes $40.00 selling candles and his supplies cost $20.00 then his net profit is 40-20 = $20.00', 'hypothesis': 'The answer is 20'}
step:int4 & sent7 -> hypothesis
step:sent3 & sent6 -> int1: He makes 10 candles and each candle costs $2.00 so he makes 10*2 = $20.00
step:int1 & sent7 & sent5 -> int2: His profit is $20.00 because 20 - 10 = 20
step:int2 & sent7 -> hypothesis



======================

pred:sent4 & sent5 -> int1: On Tuesday, Meredith wrote 2/5 * 5 = 7 articles.; sent4 & int1 -> int2: On Monday, Meredith wrote 5 * 7 = 20 articles.; sent4 & int1 -> int3: On Monday, she wrote 5 * 7 = 20 articles.; int3 & sent6 -> int4: On Wednesday, she wrote 20 * 2 = 31 articles.; int2 & int4 & sent3 -> int5: In total, she wrote 20 + 31 + 4 = 104 articles.; sent7 & int5 -> hypothesis
gold:sent4 & sent5 -> int1: If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.; int1 -> int2: The total number of articles she wrote on Tuesday is 5+2 = 7; int2 & sent6 -> int3: On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.; int2 & int3 & sent4 -> int4: Over the three days, she wrote 5+7 +14 = 26 articles.; int4 & sent3 & sent7 -> int5: If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.; int5 & sent7 -> hypothesis;



======================

Reading predicted proof
step:sent4 & sent5 -> int1: On Tuesday, Meredith wrote 2/5 * 5 = 7 articles.
step_parts:['sent4 & sent5 -> int1', ' On Tuesday, Meredith wrote 2/5 * 5 = 7 articles.']
lhs_ids:['sent4', 'sent5']	 rhs = int1	 all_ancestors={'sent4', 'sent5'}
	 rhs = int1, int_str=on tuesday, meredith wrote 2/5 * 5 = 7 articles
step: sent4 & int1 -> int2: On Monday, Meredith wrote 5 * 7 = 20 articles.
step_parts:['sent4 & int1 -> int2', ' On Monday, Meredith wrote 5 * 7 = 20 articles.']
lhs_ids:['sent4', 'int1']	 rhs = int2	 all_ancestors={'sent4', 'sent5'}
	 rhs = int2, int_str=on monday, meredith wrote 5 * 7 = 20 articles
step: sent4 & int1 -> int3: On Monday, she wrote 5 * 7 = 20 articles.
step_parts:['sent4 & int1 -> int3', ' On Monday, she wrote 5 * 7 = 20 articles.']
lhs_ids:['sent4', 'int1']	 rhs = int3	 all_ancestors={'sent4', 'sent5'}
	 rhs = int3, int_str=on monday, she wrote 5 * 7 = 20 articles
step: int3 & sent6 -> int4: On Wednesday, she wrote 20 * 2 = 31 articles.
step_parts:['int3 & sent6 -> int4', ' On Wednesday, she wrote 20 * 2 = 31 articles.']
lhs_ids:['int3', 'sent6']	 rhs = int4	 all_ancestors={'sent6', 'sent4', 'sent5'}
	 rhs = int4, int_str=on wednesday, she wrote 20 * 2 = 31 articles
step: int2 & int4 & sent3 -> int5: In total, she wrote 20 + 31 + 4 = 104 articles.
step_parts:['int2 & int4 & sent3 -> int5', ' In total, she wrote 20 + 31 + 4 = 104 articles.']
lhs_ids:['int2', 'int4', 'sent3']	 rhs = int5	 all_ancestors={'sent6', 'sent4', 'sent5', 'sent3'}
	 rhs = int5, int_str=in total, she wrote 20 + 31 + 4 = 104 articles
step: sent7 & int5 -> hypothesis
step_parts:['sent7 & int5 -> hypothesis']
lhs_ids:['sent7', 'int5']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent4', 'sent5', 'sent3', 'sent7'}
	 rhs = hypothesis, int_str=the answer is 104
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent4 & sent5 -> int1: On Tuesday, Meredith wrote 2/5 * 5 = 7 articles.; sent4 & int1 -> int2: On Monday, Meredith wrote 5 * 7 = 20 articles.; sent4 & int1 -> int3: On Monday, she wrote 5 * 7 = 20 articles.; int3 & sent6 -> int4: On Wednesday, she wrote 20 * 2 = 31 articles.; int2 & int4 & sent3 -> int5: In total, she wrote 20 + 31 + 4 = 104 articles.; sent7 & int5 -> hypothesis
	sentences:['sent4 & sent5 -> int1', 'int1 & sent4 -> int2', 'int1 & sent4 -> int3', 'int3 & sent6 -> int4', 'int2 & int4 & sent3 -> int5', 'int5 & sent7 -> hypothesis']
	inferences:[{'lhs': ['sent4', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int1', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent6'], 'rhs': 'int4'}, {'lhs': ['int2', 'int4', 'sent3'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent7'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent4', 'sent5']}, {'int': 'int2', 'ancestors': ['sent4', 'sent5']}, {'int': 'int3', 'ancestors': ['sent4', 'sent5']}, {'int': 'int4', 'ancestors': ['sent6', 'sent4', 'sent5']}, {'int': 'int5', 'ancestors': ['sent6', 'sent4', 'sent5', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent4', 'sent5', 'sent3', 'sent7']}]
	relevant_sentences:{'sent6', 'sent5', 'sent3', 'sent4', 'sent7'}
	id_to_int:{'int1': 'on tuesday, meredith wrote 2/5 * 5 = 7 articles', 'int2': 'on monday, meredith wrote 5 * 7 = 20 articles', 'int3': 'on monday, she wrote 5 * 7 = 20 articles', 'int4': 'on wednesday, she wrote 20 * 2 = 31 articles', 'int5': 'in total, she wrote 20 + 31 + 4 = 104 articles', 'hypothesis': 'the answer is 104'}



||||||||||||||||||||||

Reading gold proof
step:sent4 & sent5 -> int1: If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.
step_parts:['sent4 & sent5 -> int1', ' If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.']
lhs_ids:['sent4', 'sent5']	 rhs = int1	 all_ancestors={'sent4', 'sent5'}
	 rhs = int1, int_str=if she wrote five articles on monday, then on tuesday she wrote 2/5* 5 = 2 more articles
step: int1 -> int2: The total number of articles she wrote on Tuesday is 5+2 = 7
step_parts:['int1 -> int2', ' The total number of articles she wrote on Tuesday is 5+2 = 7']
lhs_ids:['int1']	 rhs = int2	 all_ancestors={'sent4', 'sent5'}
	 rhs = int2, int_str=the total number of articles she wrote on tuesday is 5+2 = 7
step: int2 & sent6 -> int3: On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.
step_parts:['int2 & sent6 -> int3', ' On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.']
lhs_ids:['int2', 'sent6']	 rhs = int3	 all_ancestors={'sent6', 'sent4', 'sent5'}
	 rhs = int3, int_str=on wednesday, the number of articles was twice the number she wrote on tuesday, so it was 2*7 = 14 articles
step: int2 & int3 & sent4 -> int4: Over the three days, she wrote 5+7 +14 = 26 articles.
step_parts:['int2 & int3 & sent4 -> int4', ' Over the three days, she wrote 5+7 +14 = 26 articles.']
lhs_ids:['int2', 'int3', 'sent4']	 rhs = int4	 all_ancestors={'sent6', 'sent4', 'sent5'}
	 rhs = int4, int_str=over the three days, she wrote 5+7 +14 = 26 articles
step: int4 & sent3 & sent7 -> int5: If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.
step_parts:['int4 & sent3 & sent7 -> int5', ' If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.']
lhs_ids:['int4', 'sent3', 'sent7']	 rhs = int5	 all_ancestors={'sent6', 'sent5', 'sent3', 'sent4', 'sent7'}
	 rhs = int5, int_str=if each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles
step: int5 & sent7 -> hypothesis
step_parts:['int5 & sent7 -> hypothesis']
lhs_ids:['int5', 'sent7']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent4', 'sent5', 'sent3', 'sent7'}
	 rhs = hypothesis, int_str=the answer is 104
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent4 & sent5 -> int1: If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.; int1 -> int2: The total number of articles she wrote on Tuesday is 5+2 = 7; int2 & sent6 -> int3: On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.; int2 & int3 & sent4 -> int4: Over the three days, she wrote 5+7 +14 = 26 articles.; int4 & sent3 & sent7 -> int5: If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.; int5 & sent7 -> hypothesis;
	sentences:['sent4 & sent5 -> int1', 'int1 -> int2', 'int2 & sent6 -> int3', 'int2 & int3 & sent4 -> int4', 'int4 & sent3 & sent7 -> int5', 'int5 & sent7 -> hypothesis']
	inferences:[{'lhs': ['sent4', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent6'], 'rhs': 'int3'}, {'lhs': ['int2', 'int3', 'sent4'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent3', 'sent7'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent7'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent4', 'sent5']}, {'int': 'int2', 'ancestors': ['sent4', 'sent5']}, {'int': 'int3', 'ancestors': ['sent6', 'sent4', 'sent5']}, {'int': 'int4', 'ancestors': ['sent6', 'sent4', 'sent5']}, {'int': 'int5', 'ancestors': ['sent6', 'sent5', 'sent3', 'sent4', 'sent7']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent4', 'sent5', 'sent3', 'sent7']}]
	relevant_sentences:{'sent6', 'sent5', 'sent3', 'sent4', 'sent7'}
	id_to_int:{'int1': 'if she wrote five articles on monday, then on tuesday she wrote 2/5* 5 = 2 more articles', 'int2': 'the total number of articles she wrote on tuesday is 5+2 = 7', 'int3': 'on wednesday, the number of articles was twice the number she wrote on tuesday, so it was 2*7 = 14 articles', 'int4': 'over the three days, she wrote 5+7 +14 = 26 articles', 'int5': 'if each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles', 'hypothesis': 'the answer is 104'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'int3', 'int5': 'int5', 'hypothesis': 'int5'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'int3', 'int5': 'int5', 'hypothesis': 'int5'}
relevant_sentences_pred:{'sent6', 'sent5', 'sent3', 'sent4', 'sent7'}
relevant_sentences_gold:{'sent6', 'sent5', 'sent3', 'sent4', 'sent7'}
		sentences:['sent3', 'sent4', 'sent5', 'sent6', 'sent7']
		sentences_gold:['sent3', 'sent4', 'sent5', 'sent6', 'sent7']
		sentences:['int1 & int3 & sent3 -> int5', 'int1 & sent4 -> int1', 'int1 & sent4 -> int1', 'int1 & sent6 -> int3', 'int5 & sent7 -> int5', 'sent4 & sent5 -> int1']
		sentences_gold:['int1 -> int2', 'int2 & int3 & sent4 -> int4', 'int2 & sent6 -> int3', 'int4 & sent3 & sent7 -> int5', 'int5 & sent7 -> hypothesis', 'sent4 & sent5 -> int1']
step:sent4 & sent5 -> int1: If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:sent4 & sent5 -> int1: If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:sent4 & sent5 -> int1: If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.
step:int1 -> int2: The total number of articles she wrote on Tuesday is 5+2 = 7
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:int1 -> int2: The total number of articles she wrote on Tuesday is 5+2 = 7
step:int2 & sent6 -> int3: On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:int2 & sent6 -> int3: On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:int2 & sent6 -> int3: On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.
step:int2 & int3 & sent4 -> int4: Over the three days, she wrote 5+7 +14 = 26 articles.
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:int2 & int3 & sent4 -> int4: Over the three days, she wrote 5+7 +14 = 26 articles.
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:int2 & int3 & sent4 -> int4: Over the three days, she wrote 5+7 +14 = 26 articles.
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:int2 & int3 & sent4 -> int4: Over the three days, she wrote 5+7 +14 = 26 articles.
step:int4 & sent3 & sent7 -> int5: If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:int4 & sent3 & sent7 -> int5: If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:int4 & sent3 & sent7 -> int5: If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:int4 & sent3 & sent7 -> int5: If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.
step:int5 & sent7 -> hypothesis
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:int5 & sent7 -> hypothesis
QID:GSM8K_45_b52a924542
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If she wrote five articles on Monday, then on Tuesday she wrote 2/5* 5 = 2 more articles.', 'int2': 'The total number of articles she wrote on Tuesday is 5+2 = 7', 'int3': 'On Wednesday, the number of articles was twice the number she wrote on Tuesday, so it was 2*7 = 14 articles.', 'int4': 'Over the three days, she wrote 5+7 +14 = 26 articles.', 'int5': 'If each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles.', 'hypothesis': 'The answer is 104'}
step:int5 & sent7 -> hypothesis
step:sent4 & sent5 -> int1: On Tuesday, Meredith wrote 2/5 * 5 = 7 articles.
step:sent4 & int1 -> int2: On Monday, Meredith wrote 5 * 7 = 20 articles.
step:sent4 & int1 -> int3: On Monday, she wrote 5 * 7 = 20 articles.
step:int3 & sent6 -> int4: On Wednesday, she wrote 20 * 2 = 31 articles.
step:int2 & int4 & sent3 -> int5: In total, she wrote 20 + 31 + 4 = 104 articles.
step:sent7 & int5 -> hypothesis



======================

pred:sent1 & sent4 -> int1: Candice put 80 x 220 = 420 post-it notes in her purse.; int1 & sent6 & sent5 -> int2: She had 420 - 23 = 163 post-it notes remaining.; int2 & sent6 -> hypothesis
gold:sent6 -> int1: Let's let x be the number of post-it notes in the package that Candice purchased.; int1 & sent1 -> int2: Then, the total number of post-it notes she had when she left the store was 80+x.; int2 & sent4 & sent5 -> int3: And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23; int3 -> int4: Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.; int4 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent4 -> int1: Candice put 80 x 220 = 420 post-it notes in her purse.
step_parts:['sent1 & sent4 -> int1', ' Candice put 80 x 220 = 420 post-it notes in her purse.']
lhs_ids:['sent1', 'sent4']	 rhs = int1	 all_ancestors={'sent1', 'sent4'}
	 rhs = int1, int_str=candice put 80 x 220 = 420 post-it notes in her purse
step: int1 & sent6 & sent5 -> int2: She had 420 - 23 = 163 post-it notes remaining.
step_parts:['int1 & sent6 & sent5 -> int2', ' She had 420 - 23 = 163 post-it notes remaining.']
lhs_ids:['int1', 'sent6', 'sent5']	 rhs = int2	 all_ancestors={'sent1', 'sent4', 'sent5', 'sent6'}
	 rhs = int2, int_str=she had 420 - 23 = 163 post-it notes remaining
step: int2 & sent6 -> hypothesis
step_parts:['int2 & sent6 -> hypothesis']
lhs_ids:['int2', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent5', 'sent6'}
	 rhs = hypothesis, int_str=the answer is 163
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent4 -> int1: Candice put 80 x 220 = 420 post-it notes in her purse.; int1 & sent6 & sent5 -> int2: She had 420 - 23 = 163 post-it notes remaining.; int2 & sent6 -> hypothesis
	sentences:['sent1 & sent4 -> int1', 'int1 & sent5 & sent6 -> int2', 'int2 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent5', 'sent6'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent4']}, {'int': 'int2', 'ancestors': ['sent1', 'sent4', 'sent5', 'sent6']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent5', 'sent6']}]
	relevant_sentences:{'sent1', 'sent4', 'sent5', 'sent6'}
	id_to_int:{'int1': 'candice put 80 x 220 = 420 post-it notes in her purse', 'int2': 'she had 420 - 23 = 163 post-it notes remaining', 'hypothesis': 'the answer is 163'}



||||||||||||||||||||||

Reading gold proof
step:sent6 -> int1: Let's let x be the number of post-it notes in the package that Candice purchased.
step_parts:['sent6 -> int1', " Let's let x be the number of post-it notes in the package that Candice purchased."]
lhs_ids:['sent6']	 rhs = int1	 all_ancestors={'sent6'}
	 rhs = int1, int_str=let's let x be the number of post-it notes in the package that candice purchased
step: int1 & sent1 -> int2: Then, the total number of post-it notes she had when she left the store was 80+x.
step_parts:['int1 & sent1 -> int2', ' Then, the total number of post-it notes she had when she left the store was 80+x.']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent6', 'sent1'}
	 rhs = int2, int_str=then, the total number of post-it notes she had when she left the store was 80+x
step: int2 & sent4 & sent5 -> int3: And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23
step_parts:['int2 & sent4 & sent5 -> int3', ' And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23']
lhs_ids:['int2', 'sent4', 'sent5']	 rhs = int3	 all_ancestors={'sent6', 'sent4', 'sent1', 'sent5'}
	 rhs = int3, int_str=and if she used 220 post-it notes at work and had 23 left, then 80+x=220+23
step: int3 -> int4: Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.
step_parts:['int3 -> int4', ' Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.']
lhs_ids:['int3']	 rhs = int4	 all_ancestors={'sent6', 'sent4', 'sent1', 'sent5'}
	 rhs = int4, int_str=subtracting 80 from each side of the equation, we see that x=220+23-80=163 post-it notes
step: int4 & sent6 -> hypothesis
step_parts:['int4 & sent6 -> hypothesis']
lhs_ids:['int4', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent4', 'sent1', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 163
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent6 -> int1: Let's let x be the number of post-it notes in the package that Candice purchased.; int1 & sent1 -> int2: Then, the total number of post-it notes she had when she left the store was 80+x.; int2 & sent4 & sent5 -> int3: And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23; int3 -> int4: Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.; int4 & sent6 -> hypothesis;
	sentences:['sent6 -> int1', 'int1 & sent1 -> int2', 'int2 & sent4 & sent5 -> int3', 'int3 -> int4', 'int4 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent6'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4', 'sent5'], 'rhs': 'int3'}, {'lhs': ['int3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent6']}, {'int': 'int2', 'ancestors': ['sent6', 'sent1']}, {'int': 'int3', 'ancestors': ['sent6', 'sent4', 'sent1', 'sent5']}, {'int': 'int4', 'ancestors': ['sent6', 'sent4', 'sent1', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent4', 'sent1', 'sent5']}]
	relevant_sentences:{'sent6', 'sent4', 'sent1', 'sent5'}
	id_to_int:{'int1': "let's let x be the number of post-it notes in the package that candice purchased", 'int2': 'then, the total number of post-it notes she had when she left the store was 80+x', 'int3': 'and if she used 220 post-it notes at work and had 23 left, then 80+x=220+23', 'int4': 'subtracting 80 from each side of the equation, we see that x=220+23-80=163 post-it notes', 'hypothesis': 'the answer is 163'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int3', 'int2': 'int3', 'hypothesis': 'int3'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int3', 'int2': 'int3', 'hypothesis': 'int3'}
relevant_sentences_pred:{'sent1', 'sent4', 'sent5', 'sent6'}
relevant_sentences_gold:{'sent6', 'sent4', 'sent1', 'sent5'}
		sentences:['sent1', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent1', 'sent4', 'sent5', 'sent6']
		sentences:['int3 & sent5 & sent6 -> int3', 'int3 & sent6 -> int3', 'sent1 & sent4 -> int3']
		sentences_gold:['int1 & sent1 -> int2', 'int2 & sent4 & sent5 -> int3', 'int3 -> int4', 'int4 & sent6 -> hypothesis', 'sent6 -> int1']
step:sent6 -> int1: Let's let x be the number of post-it notes in the package that Candice purchased.
QID:GSM8K_46_c1d08edad8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Let's let x be the number of post-it notes in the package that Candice purchased.", 'int2': 'Then, the total number of post-it notes she had when she left the store was 80+x.', 'int3': 'And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23', 'int4': 'Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.', 'hypothesis': 'The answer is 163'}
step:sent6 -> int1: Let's let x be the number of post-it notes in the package that Candice purchased.
step:int1 & sent1 -> int2: Then, the total number of post-it notes she had when she left the store was 80+x.
QID:GSM8K_46_c1d08edad8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Let's let x be the number of post-it notes in the package that Candice purchased.", 'int2': 'Then, the total number of post-it notes she had when she left the store was 80+x.', 'int3': 'And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23', 'int4': 'Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.', 'hypothesis': 'The answer is 163'}
step:int1 & sent1 -> int2: Then, the total number of post-it notes she had when she left the store was 80+x.
QID:GSM8K_46_c1d08edad8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Let's let x be the number of post-it notes in the package that Candice purchased.", 'int2': 'Then, the total number of post-it notes she had when she left the store was 80+x.', 'int3': 'And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23', 'int4': 'Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.', 'hypothesis': 'The answer is 163'}
step:int1 & sent1 -> int2: Then, the total number of post-it notes she had when she left the store was 80+x.
step:int2 & sent4 & sent5 -> int3: And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23
QID:GSM8K_46_c1d08edad8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Let's let x be the number of post-it notes in the package that Candice purchased.", 'int2': 'Then, the total number of post-it notes she had when she left the store was 80+x.', 'int3': 'And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23', 'int4': 'Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.', 'hypothesis': 'The answer is 163'}
step:int2 & sent4 & sent5 -> int3: And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23
QID:GSM8K_46_c1d08edad8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Let's let x be the number of post-it notes in the package that Candice purchased.", 'int2': 'Then, the total number of post-it notes she had when she left the store was 80+x.', 'int3': 'And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23', 'int4': 'Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.', 'hypothesis': 'The answer is 163'}
step:int2 & sent4 & sent5 -> int3: And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23
QID:GSM8K_46_c1d08edad8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Let's let x be the number of post-it notes in the package that Candice purchased.", 'int2': 'Then, the total number of post-it notes she had when she left the store was 80+x.', 'int3': 'And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23', 'int4': 'Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.', 'hypothesis': 'The answer is 163'}
step:int2 & sent4 & sent5 -> int3: And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23
step:int3 -> int4: Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.
QID:GSM8K_46_c1d08edad8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Let's let x be the number of post-it notes in the package that Candice purchased.", 'int2': 'Then, the total number of post-it notes she had when she left the store was 80+x.', 'int3': 'And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23', 'int4': 'Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.', 'hypothesis': 'The answer is 163'}
step:int3 -> int4: Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.
step:int4 & sent6 -> hypothesis
QID:GSM8K_46_c1d08edad8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Let's let x be the number of post-it notes in the package that Candice purchased.", 'int2': 'Then, the total number of post-it notes she had when she left the store was 80+x.', 'int3': 'And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23', 'int4': 'Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.', 'hypothesis': 'The answer is 163'}
step:int4 & sent6 -> hypothesis
QID:GSM8K_46_c1d08edad8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "Let's let x be the number of post-it notes in the package that Candice purchased.", 'int2': 'Then, the total number of post-it notes she had when she left the store was 80+x.', 'int3': 'And if she used 220 Post-it notes at work and had 23 left, then 80+x=220+23', 'int4': 'Subtracting 80 from each side of the equation, we see that x=220+23-80=163 Post-it notes.', 'hypothesis': 'The answer is 163'}
step:int4 & sent6 -> hypothesis
step:sent1 & sent4 -> int1: Candice put 80 x 220 = 420 post-it notes in her purse.
step:int1 & sent6 & sent5 -> int2: She had 420 - 23 = 163 post-it notes remaining.
step:int2 & sent6 -> hypothesis



======================

pred:sent3 & sent2 -> int1: Blue ties cost 40*.5=$50; sent1 & int1 -> int2: He bought 2*50=60 red ties.; int1 & sent3 -> int3: So he spent 200-50=$100 on ties.; int1 & sent3 -> int4: So he spent 200-50=$75 on ties.; sent1 & int4 -> int5: He bought 2*75=100 red ties.; sent1 & int4 -> int6: He bought 75*2=250 red ties.; int2 & int6 & int3 -> int7: Therefore, he spent a total of 100+250+60=$800 on ties.; int7 & sent4 & int5 -> hypothesis
gold:sent3 -> int1: He bought 200 / 40 = 5 blue ties; int1 & sent1 -> int2: So he bought 5 * 2 = 10 red ties; sent2 & sent3 -> int3: Each red tie cost $40 * .5 = $20 more than blue ties; int3 & sent3 -> int4: So they each cost $40 + $20 = $60; int2 & int4 -> int5: So he spent $60 * 10 = $600 on red ties; int5 & sent3 & sent4 -> int6: So he spent $200 + $600 = $800 on ties; int6 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent2 -> int1: Blue ties cost 40*.5=$50
step_parts:['sent3 & sent2 -> int1', ' Blue ties cost 40*.5=$50']
lhs_ids:['sent3', 'sent2']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=blue ties cost 40*5=$50
step: sent1 & int1 -> int2: He bought 2*50=60 red ties.
step_parts:['sent1 & int1 -> int2', ' He bought 2*50=60 red ties.']
lhs_ids:['sent1', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=he bought 2*50=60 red ties
step: int1 & sent3 -> int3: So he spent 200-50=$100 on ties.
step_parts:['int1 & sent3 -> int3', ' So he spent 200-50=$100 on ties.']
lhs_ids:['int1', 'sent3']	 rhs = int3	 all_ancestors={'sent2', 'sent3'}
	 rhs = int3, int_str=so he spent 200-50=$100 on ties
step: int1 & sent3 -> int4: So he spent 200-50=$75 on ties.
step_parts:['int1 & sent3 -> int4', ' So he spent 200-50=$75 on ties.']
lhs_ids:['int1', 'sent3']	 rhs = int4	 all_ancestors={'sent2', 'sent3'}
	 rhs = int4, int_str=so he spent 200-50=$75 on ties
step: sent1 & int4 -> int5: He bought 2*75=100 red ties.
step_parts:['sent1 & int4 -> int5', ' He bought 2*75=100 red ties.']
lhs_ids:['sent1', 'int4']	 rhs = int5	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int5, int_str=he bought 2*75=100 red ties
step: sent1 & int4 -> int6: He bought 75*2=250 red ties.
step_parts:['sent1 & int4 -> int6', ' He bought 75*2=250 red ties.']
lhs_ids:['sent1', 'int4']	 rhs = int6	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int6, int_str=he bought 75*2=250 red ties
step: int2 & int6 & int3 -> int7: Therefore, he spent a total of 100+250+60=$800 on ties.
step_parts:['int2 & int6 & int3 -> int7', ' Therefore, he spent a total of 100+250+60=$800 on ties.']
lhs_ids:['int2', 'int6', 'int3']	 rhs = int7	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int7, int_str=therefore, he spent a total of 100+250+60=$800 on ties
step: int7 & sent4 & int5 -> hypothesis
step_parts:['int7 & sent4 & int5 -> hypothesis']
lhs_ids:['int7', 'sent4', 'int5']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 800
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent2 -> int1: Blue ties cost 40*.5=$50; sent1 & int1 -> int2: He bought 2*50=60 red ties.; int1 & sent3 -> int3: So he spent 200-50=$100 on ties.; int1 & sent3 -> int4: So he spent 200-50=$75 on ties.; sent1 & int4 -> int5: He bought 2*75=100 red ties.; sent1 & int4 -> int6: He bought 75*2=250 red ties.; int2 & int6 & int3 -> int7: Therefore, he spent a total of 100+250+60=$800 on ties.; int7 & sent4 & int5 -> hypothesis
	sentences:['sent2 & sent3 -> int1', 'int1 & sent1 -> int2', 'int1 & sent3 -> int3', 'int1 & sent3 -> int4', 'int4 & sent1 -> int5', 'int4 & sent1 -> int6', 'int2 & int3 & int6 -> int7', 'int5 & int7 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent1'], 'rhs': 'int5'}, {'lhs': ['int4', 'sent1'], 'rhs': 'int6'}, {'lhs': ['int2', 'int3', 'int6'], 'rhs': 'int7'}, {'lhs': ['int5', 'int7', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3']}, {'int': 'int4', 'ancestors': ['sent2', 'sent3']}, {'int': 'int5', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int6', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int7', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent3']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent1'}
	id_to_int:{'int1': 'blue ties cost 40*5=$50', 'int2': 'he bought 2*50=60 red ties', 'int3': 'so he spent 200-50=$100 on ties', 'int4': 'so he spent 200-50=$75 on ties', 'int5': 'he bought 2*75=100 red ties', 'int6': 'he bought 75*2=250 red ties', 'int7': 'therefore, he spent a total of 100+250+60=$800 on ties', 'hypothesis': 'the answer is 800'}



||||||||||||||||||||||

Reading gold proof
step:sent3 -> int1: He bought 200 / 40 = 5 blue ties
step_parts:['sent3 -> int1', ' He bought 200 / 40 = 5 blue ties']
lhs_ids:['sent3']	 rhs = int1	 all_ancestors={'sent3'}
	 rhs = int1, int_str=he bought 200 / 40 = 5 blue ties
step: int1 & sent1 -> int2: So he bought 5 * 2 = 10 red ties
step_parts:['int1 & sent1 -> int2', ' So he bought 5 * 2 = 10 red ties']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent3'}
	 rhs = int2, int_str=so he bought 5 * 2 = 10 red ties
step: sent2 & sent3 -> int3: Each red tie cost $40 * .5 = $20 more than blue ties
step_parts:['sent2 & sent3 -> int3', ' Each red tie cost $40 * .5 = $20 more than blue ties']
lhs_ids:['sent2', 'sent3']	 rhs = int3	 all_ancestors={'sent2', 'sent3'}
	 rhs = int3, int_str=each red tie cost $40 * 5 = $20 more than blue ties
step: int3 & sent3 -> int4: So they each cost $40 + $20 = $60
step_parts:['int3 & sent3 -> int4', ' So they each cost $40 + $20 = $60']
lhs_ids:['int3', 'sent3']	 rhs = int4	 all_ancestors={'sent2', 'sent3'}
	 rhs = int4, int_str=so they each cost $40 + $20 = $60
step: int2 & int4 -> int5: So he spent $60 * 10 = $600 on red ties
step_parts:['int2 & int4 -> int5', ' So he spent $60 * 10 = $600 on red ties']
lhs_ids:['int2', 'int4']	 rhs = int5	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int5, int_str=so he spent $60 * 10 = $600 on red ties
step: int5 & sent3 & sent4 -> int6: So he spent $200 + $600 = $800 on ties
step_parts:['int5 & sent3 & sent4 -> int6', ' So he spent $200 + $600 = $800 on ties']
lhs_ids:['int5', 'sent3', 'sent4']	 rhs = int6	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent4'}
	 rhs = int6, int_str=so he spent $200 + $600 = $800 on ties
step: int6 & sent4 -> hypothesis
step_parts:['int6 & sent4 -> hypothesis']
lhs_ids:['int6', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 800
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 -> int1: He bought 200 / 40 = 5 blue ties; int1 & sent1 -> int2: So he bought 5 * 2 = 10 red ties; sent2 & sent3 -> int3: Each red tie cost $40 * .5 = $20 more than blue ties; int3 & sent3 -> int4: So they each cost $40 + $20 = $60; int2 & int4 -> int5: So he spent $60 * 10 = $600 on red ties; int5 & sent3 & sent4 -> int6: So he spent $200 + $600 = $800 on ties; int6 & sent4 -> hypothesis;
	sentences:['sent3 -> int1', 'int1 & sent1 -> int2', 'sent2 & sent3 -> int3', 'int3 & sent3 -> int4', 'int2 & int4 -> int5', 'int5 & sent3 & sent4 -> int6', 'int6 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['sent2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int2', 'int4'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent3', 'sent4'], 'rhs': 'int6'}, {'lhs': ['int6', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3']}, {'int': 'int4', 'ancestors': ['sent2', 'sent3']}, {'int': 'int5', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'int6', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent4']}]
	relevant_sentences:{'sent1', 'sent3', 'sent2', 'sent4'}
	id_to_int:{'int1': 'he bought 200 / 40 = 5 blue ties', 'int2': 'so he bought 5 * 2 = 10 red ties', 'int3': 'each red tie cost $40 * 5 = $20 more than blue ties', 'int4': 'so they each cost $40 + $20 = $60', 'int5': 'so he spent $60 * 10 = $600 on red ties', 'int6': 'so he spent $200 + $600 = $800 on ties', 'hypothesis': 'the answer is 800'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int3', 'int2': 'int5', 'int3': 'int3', 'int4': 'int3', 'int5': 'int5', 'int6': 'int5', 'int7': 'int5', 'hypothesis': 'int6'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int3', 'int2': 'int5', 'int3': 'int3', 'int4': 'int3', 'int5': 'int5', 'int6': 'int5', 'int7': 'int5', 'hypothesis': 'int6'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4', 'sent1'}
relevant_sentences_gold:{'sent1', 'sent3', 'sent2', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['int3 & int5 & int5 -> int5', 'int3 & sent1 -> int5', 'int3 & sent1 -> int5', 'int3 & sent1 -> int5', 'int3 & sent3 -> int3', 'int3 & sent3 -> int3', 'int5 & int5 & sent4 -> int6', 'sent2 & sent3 -> int3']
		sentences_gold:['int1 & sent1 -> int2', 'int2 & int4 -> int5', 'int3 & sent3 -> int4', 'int5 & sent3 & sent4 -> int6', 'int6 & sent4 -> hypothesis', 'sent2 & sent3 -> int3', 'sent3 -> int1']
step:sent3 -> int1: He bought 200 / 40 = 5 blue ties
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:sent3 -> int1: He bought 200 / 40 = 5 blue ties
step:int1 & sent1 -> int2: So he bought 5 * 2 = 10 red ties
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:int1 & sent1 -> int2: So he bought 5 * 2 = 10 red ties
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:int1 & sent1 -> int2: So he bought 5 * 2 = 10 red ties
step:sent2 & sent3 -> int3: Each red tie cost $40 * .5 = $20 more than blue ties
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:sent2 & sent3 -> int3: Each red tie cost $40 * .5 = $20 more than blue ties
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:sent2 & sent3 -> int3: Each red tie cost $40 * .5 = $20 more than blue ties
step:int3 & sent3 -> int4: So they each cost $40 + $20 = $60
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:int3 & sent3 -> int4: So they each cost $40 + $20 = $60
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:int3 & sent3 -> int4: So they each cost $40 + $20 = $60
step:int2 & int4 -> int5: So he spent $60 * 10 = $600 on red ties
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:int2 & int4 -> int5: So he spent $60 * 10 = $600 on red ties
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:int2 & int4 -> int5: So he spent $60 * 10 = $600 on red ties
step:int5 & sent3 & sent4 -> int6: So he spent $200 + $600 = $800 on ties
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:int5 & sent3 & sent4 -> int6: So he spent $200 + $600 = $800 on ties
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:int5 & sent3 & sent4 -> int6: So he spent $200 + $600 = $800 on ties
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:int5 & sent3 & sent4 -> int6: So he spent $200 + $600 = $800 on ties
step:int6 & sent4 -> hypothesis
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:int6 & sent4 -> hypothesis
QID:GSM8K_47_6e4d497caa
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He bought 200 / 40 = 5 blue ties', 'int2': 'So he bought 5 * 2 = 10 red ties', 'int3': 'Each red tie cost $40 * .5 = $20 more than blue ties', 'int4': 'So they each cost $40 + $20 = $60', 'int5': 'So he spent $60 * 10 = $600 on red ties', 'int6': 'So he spent $200 + $600 = $800 on ties', 'hypothesis': 'The answer is 800'}
step:int6 & sent4 -> hypothesis
step:sent3 & sent2 -> int1: Blue ties cost 40*.5=$50
step:sent1 & int1 -> int2: He bought 2*50=60 red ties.
step:int1 & sent3 -> int3: So he spent 200-50=$100 on ties.
step:int1 & sent3 -> int4: So he spent 200-50=$75 on ties.
step:sent1 & int4 -> int5: He bought 2*75=100 red ties.
step:sent1 & int4 -> int6: He bought 75*2=250 red ties.
step:int2 & int6 & int3 -> int7: Therefore, he spent a total of 100+250+60=$800 on ties.
step:int7 & sent4 & int5 -> hypothesis



======================

pred:sent1 -> int1: Tracey used 4 ft. * 6 inches = 24 inches of wire.; int1 & sent2 & sent3 -> int2: She then divided the wire into 24 inches / 6 inches = 8 pieces.; sent3 & int2 -> hypothesis
gold:sent1 -> int1: If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.; int1 & sent2 & sent3 -> int2: Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces; int2 & sent3 -> hypothesis;



======================

Reading predicted proof
step:sent1 -> int1: Tracey used 4 ft. * 6 inches = 24 inches of wire.
step_parts:['sent1 -> int1', ' Tracey used 4 ft. * 6 inches = 24 inches of wire.']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=tracey used 4 ft * 6 inches = 24 inches of wire
step: int1 & sent2 & sent3 -> int2: She then divided the wire into 24 inches / 6 inches = 8 pieces.
step_parts:['int1 & sent2 & sent3 -> int2', ' She then divided the wire into 24 inches / 6 inches = 8 pieces.']
lhs_ids:['int1', 'sent2', 'sent3']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=she then divided the wire into 24 inches / 6 inches = 8 pieces
step: sent3 & int2 -> hypothesis
step_parts:['sent3 & int2 -> hypothesis']
lhs_ids:['sent3', 'int2']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 8
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: Tracey used 4 ft. * 6 inches = 24 inches of wire.; int1 & sent2 & sent3 -> int2: She then divided the wire into 24 inches / 6 inches = 8 pieces.; sent3 & int2 -> hypothesis
	sentences:['sent1 -> int1', 'int1 & sent2 & sent3 -> int2', 'int2 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'tracey used 4 ft * 6 inches = 24 inches of wire', 'int2': 'she then divided the wire into 24 inches / 6 inches = 8 pieces', 'hypothesis': 'the answer is 8'}



||||||||||||||||||||||

Reading gold proof
step:sent1 -> int1: If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.
step_parts:['sent1 -> int1', ' If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=if tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches
step: int1 & sent2 & sent3 -> int2: Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces
step_parts:['int1 & sent2 & sent3 -> int2', ' Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces']
lhs_ids:['int1', 'sent2', 'sent3']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=since the wire was cut into pieces 6 inches long, tracy obtained 48/6=8 pieces
step: int2 & sent3 -> hypothesis
step_parts:['int2 & sent3 -> hypothesis']
lhs_ids:['int2', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 8
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.; int1 & sent2 & sent3 -> int2: Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces; int2 & sent3 -> hypothesis;
	sentences:['sent1 -> int1', 'int1 & sent2 & sent3 -> int2', 'int2 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'if tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches', 'int2': 'since the wire was cut into pieces 6 inches long, tracy obtained 48/6=8 pieces', 'hypothesis': 'the answer is 8'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3'}
		sentences:['sent1', 'sent2', 'sent3']
		sentences_gold:['sent1', 'sent2', 'sent3']
		sentences:['int1 & sent2 & sent3 -> int2', 'int2 & sent3 -> int2', 'sent1 -> int1']
		sentences_gold:['int1 & sent2 & sent3 -> int2', 'int2 & sent3 -> hypothesis', 'sent1 -> int1']
step:sent1 -> int1: If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.
QID:GSM8K_48_fb3fb38853
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.', 'int2': 'Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces', 'hypothesis': 'The answer is 8'}
step:sent1 -> int1: If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.
step:int1 & sent2 & sent3 -> int2: Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces
QID:GSM8K_48_fb3fb38853
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.', 'int2': 'Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces', 'hypothesis': 'The answer is 8'}
step:int1 & sent2 & sent3 -> int2: Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces
QID:GSM8K_48_fb3fb38853
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.', 'int2': 'Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces', 'hypothesis': 'The answer is 8'}
step:int1 & sent2 & sent3 -> int2: Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces
QID:GSM8K_48_fb3fb38853
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.', 'int2': 'Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces', 'hypothesis': 'The answer is 8'}
step:int1 & sent2 & sent3 -> int2: Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces
step:int2 & sent3 -> hypothesis
QID:GSM8K_48_fb3fb38853
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.', 'int2': 'Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces', 'hypothesis': 'The answer is 8'}
step:int2 & sent3 -> hypothesis
QID:GSM8K_48_fb3fb38853
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'If Tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches.', 'int2': 'Since the wire was cut into pieces 6 inches long, Tracy obtained 48/6=8 pieces', 'hypothesis': 'The answer is 8'}
step:int2 & sent3 -> hypothesis
step:sent1 -> int1: Tracey used 4 ft. * 6 inches = 24 inches of wire.
step:int1 & sent2 & sent3 -> int2: She then divided the wire into 24 inches / 6 inches = 8 pieces.
step:sent3 & int2 -> hypothesis



======================

pred:sent2 & sent1 -> int1: There are 15 floors * 8 units/floor = 150 units.; sent3 & sent4 & int1 -> int2: 3/4 of the building is occupied, so there are 150 units - 3/4 = 30 unoccupied units.; int2 & sent4 -> hypothesis
gold:sent1 & sent2 -> int1: The total number of units in the building will be 8 units/floor * 15 floors = 120 units.; int1 & sent3 -> int2: If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.; int1 & int2 & sent4 -> int3: The total number of unoccupied units is 120 units - 90 units = 30 units.; int3 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent1 -> int1: There are 15 floors * 8 units/floor = 150 units.
step_parts:['sent2 & sent1 -> int1', ' There are 15 floors * 8 units/floor = 150 units.']
lhs_ids:['sent2', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=there are 15 floors * 8 units/floor = 150 units
step: sent3 & sent4 & int1 -> int2: 3/4 of the building is occupied, so there are 150 units - 3/4 = 30 unoccupied units.
step_parts:['sent3 & sent4 & int1 -> int2', ' 3/4 of the building is occupied, so there are 150 units - 3/4 = 30 unoccupied units.']
lhs_ids:['sent3', 'sent4', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent4'}
	 rhs = int2, int_str=3/4 of the building is occupied, so there are 150 units - 3/4 = 30 unoccupied units
step: int2 & sent4 -> hypothesis
step_parts:['int2 & sent4 -> hypothesis']
lhs_ids:['int2', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 30
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent1 -> int1: There are 15 floors * 8 units/floor = 150 units.; sent3 & sent4 & int1 -> int2: 3/4 of the building is occupied, so there are 150 units - 3/4 = 30 unoccupied units.; int2 & sent4 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent3 & sent4 -> int2', 'int2 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'there are 15 floors * 8 units/floor = 150 units', 'int2': '3/4 of the building is occupied, so there are 150 units - 3/4 = 30 unoccupied units', 'hypothesis': 'the answer is 30'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: The total number of units in the building will be 8 units/floor * 15 floors = 120 units.
step_parts:['sent1 & sent2 -> int1', ' The total number of units in the building will be 8 units/floor * 15 floors = 120 units.']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=the total number of units in the building will be 8 units/floor * 15 floors = 120 units
step: int1 & sent3 -> int2: If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.
step_parts:['int1 & sent3 -> int2', ' If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.']
lhs_ids:['int1', 'sent3']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=if 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units
step: int1 & int2 & sent4 -> int3: The total number of unoccupied units is 120 units - 90 units = 30 units.
step_parts:['int1 & int2 & sent4 -> int3', ' The total number of unoccupied units is 120 units - 90 units = 30 units.']
lhs_ids:['int1', 'int2', 'sent4']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent3'}
	 rhs = int3, int_str=the total number of unoccupied units is 120 units - 90 units = 30 units
step: int3 & sent4 -> hypothesis
step_parts:['int3 & sent4 -> hypothesis']
lhs_ids:['int3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 30
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: The total number of units in the building will be 8 units/floor * 15 floors = 120 units.; int1 & sent3 -> int2: If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.; int1 & int2 & sent4 -> int3: The total number of unoccupied units is 120 units - 90 units = 30 units.; int3 & sent4 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'int1 & sent3 -> int2', 'int1 & int2 & sent4 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'the total number of units in the building will be 8 units/floor * 15 floors = 120 units', 'int2': 'if 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units', 'int3': 'the total number of unoccupied units is 120 units - 90 units = 30 units', 'hypothesis': 'the answer is 30'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'hypothesis': 'int3'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'hypothesis': 'int3'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['int1 & sent3 & sent4 -> int3', 'int3 & sent4 -> int3', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 & int2 & sent4 -> int3', 'int1 & sent3 -> int2', 'int3 & sent4 -> hypothesis', 'sent1 & sent2 -> int1']
step:sent1 & sent2 -> int1: The total number of units in the building will be 8 units/floor * 15 floors = 120 units.
QID:GSM8K_49_856ec86627
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total number of units in the building will be 8 units/floor * 15 floors = 120 units.', 'int2': 'If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.', 'int3': 'The total number of unoccupied units is 120 units - 90 units = 30 units.', 'hypothesis': 'The answer is 30'}
step:sent1 & sent2 -> int1: The total number of units in the building will be 8 units/floor * 15 floors = 120 units.
QID:GSM8K_49_856ec86627
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total number of units in the building will be 8 units/floor * 15 floors = 120 units.', 'int2': 'If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.', 'int3': 'The total number of unoccupied units is 120 units - 90 units = 30 units.', 'hypothesis': 'The answer is 30'}
step:sent1 & sent2 -> int1: The total number of units in the building will be 8 units/floor * 15 floors = 120 units.
step:int1 & sent3 -> int2: If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.
QID:GSM8K_49_856ec86627
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total number of units in the building will be 8 units/floor * 15 floors = 120 units.', 'int2': 'If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.', 'int3': 'The total number of unoccupied units is 120 units - 90 units = 30 units.', 'hypothesis': 'The answer is 30'}
step:int1 & sent3 -> int2: If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.
QID:GSM8K_49_856ec86627
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total number of units in the building will be 8 units/floor * 15 floors = 120 units.', 'int2': 'If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.', 'int3': 'The total number of unoccupied units is 120 units - 90 units = 30 units.', 'hypothesis': 'The answer is 30'}
step:int1 & sent3 -> int2: If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.
step:int1 & int2 & sent4 -> int3: The total number of unoccupied units is 120 units - 90 units = 30 units.
QID:GSM8K_49_856ec86627
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total number of units in the building will be 8 units/floor * 15 floors = 120 units.', 'int2': 'If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.', 'int3': 'The total number of unoccupied units is 120 units - 90 units = 30 units.', 'hypothesis': 'The answer is 30'}
step:int1 & int2 & sent4 -> int3: The total number of unoccupied units is 120 units - 90 units = 30 units.
QID:GSM8K_49_856ec86627
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total number of units in the building will be 8 units/floor * 15 floors = 120 units.', 'int2': 'If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.', 'int3': 'The total number of unoccupied units is 120 units - 90 units = 30 units.', 'hypothesis': 'The answer is 30'}
step:int1 & int2 & sent4 -> int3: The total number of unoccupied units is 120 units - 90 units = 30 units.
QID:GSM8K_49_856ec86627
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total number of units in the building will be 8 units/floor * 15 floors = 120 units.', 'int2': 'If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.', 'int3': 'The total number of unoccupied units is 120 units - 90 units = 30 units.', 'hypothesis': 'The answer is 30'}
step:int1 & int2 & sent4 -> int3: The total number of unoccupied units is 120 units - 90 units = 30 units.
step:int3 & sent4 -> hypothesis
QID:GSM8K_49_856ec86627
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total number of units in the building will be 8 units/floor * 15 floors = 120 units.', 'int2': 'If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.', 'int3': 'The total number of unoccupied units is 120 units - 90 units = 30 units.', 'hypothesis': 'The answer is 30'}
step:int3 & sent4 -> hypothesis
QID:GSM8K_49_856ec86627
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total number of units in the building will be 8 units/floor * 15 floors = 120 units.', 'int2': 'If 3/4 of the building is occupied, then the total number of occupied units is 3/4 * 120 units = 90 units.', 'int3': 'The total number of unoccupied units is 120 units - 90 units = 30 units.', 'hypothesis': 'The answer is 30'}
step:int3 & sent4 -> hypothesis
step:sent2 & sent1 -> int1: There are 15 floors * 8 units/floor = 150 units.
step:sent3 & sent4 & int1 -> int2: 3/4 of the building is occupied, so there are 150 units - 3/4 = 30 unoccupied units.
step:int2 & sent4 -> hypothesis



======================

pred:sent2 -> int1: Lloyd's chickens produce 252 x 2 = 76 eggs per day.; sent2 -> int2: They produce 252 x 2 = 76 dozen eggs per day.; sent2 -> int3: They produce 252 x 12 = 76 dozen eggs per day.; int1 & sent3 -> int4: So he makes 76 x 2 = $268 on eggs per week.; int2 & sent3 -> int5: So he makes 76 x 2 = $272 on eggs per week.; int3 & sent4 & int5 -> int6: So he makes 272 + 294 = $294 on eggs per week.; int6 & sent4 & int4 -> hypothesis
gold:sent2 & sent4 -> int1: In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.; int1 & sent3 -> int2: There are 1764/12 = 147 dozens of eggs produced in a week.; int2 & sent3 & sent4 -> int3: So, Lloyd makes 147 x $2 = $294 on eggs.; int3 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent2 -> int1: Lloyd's chickens produce 252 x 2 = 76 eggs per day.
step_parts:['sent2 -> int1', " Lloyd's chickens produce 252 x 2 = 76 eggs per day."]
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=lloyd's chickens produce 252 x 2 = 76 eggs per day
step: sent2 -> int2: They produce 252 x 2 = 76 dozen eggs per day.
step_parts:['sent2 -> int2', ' They produce 252 x 2 = 76 dozen eggs per day.']
lhs_ids:['sent2']	 rhs = int2	 all_ancestors={'sent2'}
	 rhs = int2, int_str=they produce 252 x 2 = 76 dozen eggs per day
step: sent2 -> int3: They produce 252 x 12 = 76 dozen eggs per day.
step_parts:['sent2 -> int3', ' They produce 252 x 12 = 76 dozen eggs per day.']
lhs_ids:['sent2']	 rhs = int3	 all_ancestors={'sent2'}
	 rhs = int3, int_str=they produce 252 x 12 = 76 dozen eggs per day
step: int1 & sent3 -> int4: So he makes 76 x 2 = $268 on eggs per week.
step_parts:['int1 & sent3 -> int4', ' So he makes 76 x 2 = $268 on eggs per week.']
lhs_ids:['int1', 'sent3']	 rhs = int4	 all_ancestors={'sent2', 'sent3'}
	 rhs = int4, int_str=so he makes 76 x 2 = $268 on eggs per week
step: int2 & sent3 -> int5: So he makes 76 x 2 = $272 on eggs per week.
step_parts:['int2 & sent3 -> int5', ' So he makes 76 x 2 = $272 on eggs per week.']
lhs_ids:['int2', 'sent3']	 rhs = int5	 all_ancestors={'sent2', 'sent3'}
	 rhs = int5, int_str=so he makes 76 x 2 = $272 on eggs per week
step: int3 & sent4 & int5 -> int6: So he makes 272 + 294 = $294 on eggs per week.
step_parts:['int3 & sent4 & int5 -> int6', ' So he makes 272 + 294 = $294 on eggs per week.']
lhs_ids:['int3', 'sent4', 'int5']	 rhs = int6	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int6, int_str=so he makes 272 + 294 = $294 on eggs per week
step: int6 & sent4 & int4 -> hypothesis
step_parts:['int6 & sent4 & int4 -> hypothesis']
lhs_ids:['int6', 'sent4', 'int4']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent4', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 294
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: Lloyd's chickens produce 252 x 2 = 76 eggs per day.; sent2 -> int2: They produce 252 x 2 = 76 dozen eggs per day.; sent2 -> int3: They produce 252 x 12 = 76 dozen eggs per day.; int1 & sent3 -> int4: So he makes 76 x 2 = $268 on eggs per week.; int2 & sent3 -> int5: So he makes 76 x 2 = $272 on eggs per week.; int3 & sent4 & int5 -> int6: So he makes 272 + 294 = $294 on eggs per week.; int6 & sent4 & int4 -> hypothesis
	sentences:['sent2 -> int1', 'sent2 -> int2', 'sent2 -> int3', 'int1 & sent3 -> int4', 'int2 & sent3 -> int5', 'int3 & int5 & sent4 -> int6', 'int4 & int6 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['sent2'], 'rhs': 'int2'}, {'lhs': ['sent2'], 'rhs': 'int3'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int2', 'sent3'], 'rhs': 'int5'}, {'lhs': ['int3', 'int5', 'sent4'], 'rhs': 'int6'}, {'lhs': ['int4', 'int6', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent2']}, {'int': 'int3', 'ancestors': ['sent2']}, {'int': 'int4', 'ancestors': ['sent2', 'sent3']}, {'int': 'int5', 'ancestors': ['sent2', 'sent3']}, {'int': 'int6', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent4', 'sent3']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': "lloyd's chickens produce 252 x 2 = 76 eggs per day", 'int2': 'they produce 252 x 2 = 76 dozen eggs per day', 'int3': 'they produce 252 x 12 = 76 dozen eggs per day', 'int4': 'so he makes 76 x 2 = $268 on eggs per week', 'int5': 'so he makes 76 x 2 = $272 on eggs per week', 'int6': 'so he makes 272 + 294 = $294 on eggs per week', 'hypothesis': 'the answer is 294'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent4 -> int1: In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.
step_parts:['sent2 & sent4 -> int1', " In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs."]
lhs_ids:['sent2', 'sent4']	 rhs = int1	 all_ancestors={'sent2', 'sent4'}
	 rhs = int1, int_str=in a week, lloyd's egg farm produces 252 x 7 = 1764 eggs
step: int1 & sent3 -> int2: There are 1764/12 = 147 dozens of eggs produced in a week.
step_parts:['int1 & sent3 -> int2', ' There are 1764/12 = 147 dozens of eggs produced in a week.']
lhs_ids:['int1', 'sent3']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int2, int_str=there are 1764/12 = 147 dozens of eggs produced in a week
step: int2 & sent3 & sent4 -> int3: So, Lloyd makes 147 x $2 = $294 on eggs.
step_parts:['int2 & sent3 & sent4 -> int3', ' So, Lloyd makes 147 x $2 = $294 on eggs.']
lhs_ids:['int2', 'sent3', 'sent4']	 rhs = int3	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int3, int_str=so, lloyd makes 147 x $2 = $294 on eggs
step: int3 & sent4 -> hypothesis
step_parts:['int3 & sent4 -> hypothesis']
lhs_ids:['int3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 294
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent4 -> int1: In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.; int1 & sent3 -> int2: There are 1764/12 = 147 dozens of eggs produced in a week.; int2 & sent3 & sent4 -> int3: So, Lloyd makes 147 x $2 = $294 on eggs.; int3 & sent4 -> hypothesis;
	sentences:['sent2 & sent4 -> int1', 'int1 & sent3 -> int2', 'int2 & sent3 & sent4 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent4']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': "in a week, lloyd's egg farm produces 252 x 7 = 1764 eggs", 'int2': 'there are 1764/12 = 147 dozens of eggs produced in a week', 'int3': 'so, lloyd makes 147 x $2 = $294 on eggs', 'hypothesis': 'the answer is 294'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'int2', 'int5': 'int2', 'int6': 'int2', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'int2', 'int5': 'int2', 'int6': 'int2', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent2', 'sent3', 'sent4'}
		sentences:['sent2', 'sent3', 'sent4']
		sentences_gold:['sent2', 'sent3', 'sent4']
		sentences:['int1 & int2 & sent4 -> int2', 'int1 & sent3 -> int2', 'int1 & sent3 -> int2', 'int2 & int2 & sent4 -> int2', 'sent2 -> int1', 'sent2 -> int1', 'sent2 -> int1']
		sentences_gold:['int1 & sent3 -> int2', 'int2 & sent3 & sent4 -> int3', 'int3 & sent4 -> hypothesis', 'sent2 & sent4 -> int1']
step:sent2 & sent4 -> int1: In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.
QID:GSM8K_50_be1b78e251
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.", 'int2': 'There are 1764/12 = 147 dozens of eggs produced in a week.', 'int3': 'So, Lloyd makes 147 x $2 = $294 on eggs.', 'hypothesis': 'The answer is 294'}
step:sent2 & sent4 -> int1: In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.
QID:GSM8K_50_be1b78e251
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.", 'int2': 'There are 1764/12 = 147 dozens of eggs produced in a week.', 'int3': 'So, Lloyd makes 147 x $2 = $294 on eggs.', 'hypothesis': 'The answer is 294'}
step:sent2 & sent4 -> int1: In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.
step:int1 & sent3 -> int2: There are 1764/12 = 147 dozens of eggs produced in a week.
QID:GSM8K_50_be1b78e251
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.", 'int2': 'There are 1764/12 = 147 dozens of eggs produced in a week.', 'int3': 'So, Lloyd makes 147 x $2 = $294 on eggs.', 'hypothesis': 'The answer is 294'}
step:int1 & sent3 -> int2: There are 1764/12 = 147 dozens of eggs produced in a week.
QID:GSM8K_50_be1b78e251
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.", 'int2': 'There are 1764/12 = 147 dozens of eggs produced in a week.', 'int3': 'So, Lloyd makes 147 x $2 = $294 on eggs.', 'hypothesis': 'The answer is 294'}
step:int1 & sent3 -> int2: There are 1764/12 = 147 dozens of eggs produced in a week.
step:int2 & sent3 & sent4 -> int3: So, Lloyd makes 147 x $2 = $294 on eggs.
QID:GSM8K_50_be1b78e251
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.", 'int2': 'There are 1764/12 = 147 dozens of eggs produced in a week.', 'int3': 'So, Lloyd makes 147 x $2 = $294 on eggs.', 'hypothesis': 'The answer is 294'}
step:int2 & sent3 & sent4 -> int3: So, Lloyd makes 147 x $2 = $294 on eggs.
QID:GSM8K_50_be1b78e251
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.", 'int2': 'There are 1764/12 = 147 dozens of eggs produced in a week.', 'int3': 'So, Lloyd makes 147 x $2 = $294 on eggs.', 'hypothesis': 'The answer is 294'}
step:int2 & sent3 & sent4 -> int3: So, Lloyd makes 147 x $2 = $294 on eggs.
QID:GSM8K_50_be1b78e251
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.", 'int2': 'There are 1764/12 = 147 dozens of eggs produced in a week.', 'int3': 'So, Lloyd makes 147 x $2 = $294 on eggs.', 'hypothesis': 'The answer is 294'}
step:int2 & sent3 & sent4 -> int3: So, Lloyd makes 147 x $2 = $294 on eggs.
step:int3 & sent4 -> hypothesis
QID:GSM8K_50_be1b78e251
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.", 'int2': 'There are 1764/12 = 147 dozens of eggs produced in a week.', 'int3': 'So, Lloyd makes 147 x $2 = $294 on eggs.', 'hypothesis': 'The answer is 294'}
step:int3 & sent4 -> hypothesis
QID:GSM8K_50_be1b78e251
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "In a week, Lloyd's egg farm produces 252 x 7 = 1764 eggs.", 'int2': 'There are 1764/12 = 147 dozens of eggs produced in a week.', 'int3': 'So, Lloyd makes 147 x $2 = $294 on eggs.', 'hypothesis': 'The answer is 294'}
step:int3 & sent4 -> hypothesis
step:sent2 -> int1: Lloyd's chickens produce 252 x 2 = 76 eggs per day.
step:sent2 -> int2: They produce 252 x 2 = 76 dozen eggs per day.
step:sent2 -> int3: They produce 252 x 12 = 76 dozen eggs per day.
step:int1 & sent3 -> int4: So he makes 76 x 2 = $268 on eggs per week.
step:int2 & sent3 -> int5: So he makes 76 x 2 = $272 on eggs per week.
step:int3 & sent4 & int5 -> int6: So he makes 272 + 294 = $294 on eggs per week.
step:int6 & sent4 & int4 -> hypothesis



======================

pred:sent1 & sent2 -> int1: He is traveling at 10 mph because 1 - 4 = 10; int1 & sent3 -> int2: He is traveling at 6 mph because 10 / 6 = 6; sent4 & int2 & sent3 -> int3: It takes him 5 hours to get back because 6 + 5 = 5; int3 & sent4 -> hypothesis
gold:sent2 -> int1: He was travelling at full speed for 4-1=3 hours; int1 & sent1 -> int2: So he went 3*10=30 miles; int2 & sent3 & sent4 -> int3: That means it takes 30/6=5 hours to get back; int3 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent2 -> int1: He is traveling at 10 mph because 1 - 4 = 10
step_parts:['sent1 & sent2 -> int1', ' He is traveling at 10 mph because 1 - 4 = 10']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=he is traveling at 10 mph because 1 - 4 = 10
step: int1 & sent3 -> int2: He is traveling at 6 mph because 10 / 6 = 6
step_parts:['int1 & sent3 -> int2', ' He is traveling at 6 mph because 10 / 6 = 6']
lhs_ids:['int1', 'sent3']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=he is traveling at 6 mph because 10 / 6 = 6
step: sent4 & int2 & sent3 -> int3: It takes him 5 hours to get back because 6 + 5 = 5
step_parts:['sent4 & int2 & sent3 -> int3', ' It takes him 5 hours to get back because 6 + 5 = 5']
lhs_ids:['sent4', 'int2', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent4', 'sent3', 'sent2'}
	 rhs = int3, int_str=it takes him 5 hours to get back because 6 + 5 = 5
step: int3 & sent4 -> hypothesis
step_parts:['int3 & sent4 -> hypothesis']
lhs_ids:['int3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent3', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 5
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: He is traveling at 10 mph because 1 - 4 = 10; int1 & sent3 -> int2: He is traveling at 6 mph because 10 / 6 = 6; sent4 & int2 & sent3 -> int3: It takes him 5 hours to get back because 6 + 5 = 5; int3 & sent4 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent3 -> int2', 'int2 & sent3 & sent4 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent4', 'sent3', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent3', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'he is traveling at 10 mph because 1 - 4 = 10', 'int2': 'he is traveling at 6 mph because 10 / 6 = 6', 'int3': 'it takes him 5 hours to get back because 6 + 5 = 5', 'hypothesis': 'the answer is 5'}



||||||||||||||||||||||

Reading gold proof
step:sent2 -> int1: He was travelling at full speed for 4-1=3 hours
step_parts:['sent2 -> int1', ' He was travelling at full speed for 4-1=3 hours']
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=he was travelling at full speed for 4-1=3 hours
step: int1 & sent1 -> int2: So he went 3*10=30 miles
step_parts:['int1 & sent1 -> int2', ' So he went 3*10=30 miles']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=so he went 3*10=30 miles
step: int2 & sent3 & sent4 -> int3: That means it takes 30/6=5 hours to get back
step_parts:['int2 & sent3 & sent4 -> int3', ' That means it takes 30/6=5 hours to get back']
lhs_ids:['int2', 'sent3', 'sent4']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = int3, int_str=that means it takes 30/6=5 hours to get back
step: int3 & sent4 -> hypothesis
step_parts:['int3 & sent4 -> hypothesis']
lhs_ids:['int3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 5
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: He was travelling at full speed for 4-1=3 hours; int1 & sent1 -> int2: So he went 3*10=30 miles; int2 & sent3 & sent4 -> int3: That means it takes 30/6=5 hours to get back; int3 & sent4 -> hypothesis;
	sentences:['sent2 -> int1', 'int1 & sent1 -> int2', 'int2 & sent3 & sent4 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'he was travelling at full speed for 4-1=3 hours', 'int2': 'so he went 3*10=30 miles', 'int3': 'that means it takes 30/6=5 hours to get back', 'hypothesis': 'the answer is 5'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int3', 'int3': 'int3', 'hypothesis': 'int3'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int3', 'int3': 'int3', 'hypothesis': 'int3'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['int2 & sent3 -> int3', 'int3 & sent3 & sent4 -> int3', 'int3 & sent4 -> int3', 'sent1 & sent2 -> int2']
		sentences_gold:['int1 & sent1 -> int2', 'int2 & sent3 & sent4 -> int3', 'int3 & sent4 -> hypothesis', 'sent2 -> int1']
step:sent2 -> int1: He was travelling at full speed for 4-1=3 hours
QID:GSM8K_51_e4757b3475
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He was travelling at full speed for 4-1=3 hours', 'int2': 'So he went 3*10=30 miles', 'int3': 'That means it takes 30/6=5 hours to get back', 'hypothesis': 'The answer is 5'}
step:sent2 -> int1: He was travelling at full speed for 4-1=3 hours
step:int1 & sent1 -> int2: So he went 3*10=30 miles
QID:GSM8K_51_e4757b3475
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He was travelling at full speed for 4-1=3 hours', 'int2': 'So he went 3*10=30 miles', 'int3': 'That means it takes 30/6=5 hours to get back', 'hypothesis': 'The answer is 5'}
step:int1 & sent1 -> int2: So he went 3*10=30 miles
QID:GSM8K_51_e4757b3475
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He was travelling at full speed for 4-1=3 hours', 'int2': 'So he went 3*10=30 miles', 'int3': 'That means it takes 30/6=5 hours to get back', 'hypothesis': 'The answer is 5'}
step:int1 & sent1 -> int2: So he went 3*10=30 miles
step:int2 & sent3 & sent4 -> int3: That means it takes 30/6=5 hours to get back
QID:GSM8K_51_e4757b3475
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He was travelling at full speed for 4-1=3 hours', 'int2': 'So he went 3*10=30 miles', 'int3': 'That means it takes 30/6=5 hours to get back', 'hypothesis': 'The answer is 5'}
step:int2 & sent3 & sent4 -> int3: That means it takes 30/6=5 hours to get back
QID:GSM8K_51_e4757b3475
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He was travelling at full speed for 4-1=3 hours', 'int2': 'So he went 3*10=30 miles', 'int3': 'That means it takes 30/6=5 hours to get back', 'hypothesis': 'The answer is 5'}
step:int2 & sent3 & sent4 -> int3: That means it takes 30/6=5 hours to get back
QID:GSM8K_51_e4757b3475
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He was travelling at full speed for 4-1=3 hours', 'int2': 'So he went 3*10=30 miles', 'int3': 'That means it takes 30/6=5 hours to get back', 'hypothesis': 'The answer is 5'}
step:int2 & sent3 & sent4 -> int3: That means it takes 30/6=5 hours to get back
step:int3 & sent4 -> hypothesis
QID:GSM8K_51_e4757b3475
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He was travelling at full speed for 4-1=3 hours', 'int2': 'So he went 3*10=30 miles', 'int3': 'That means it takes 30/6=5 hours to get back', 'hypothesis': 'The answer is 5'}
step:int3 & sent4 -> hypothesis
QID:GSM8K_51_e4757b3475
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He was travelling at full speed for 4-1=3 hours', 'int2': 'So he went 3*10=30 miles', 'int3': 'That means it takes 30/6=5 hours to get back', 'hypothesis': 'The answer is 5'}
step:int3 & sent4 -> hypothesis
step:sent1 & sent2 -> int1: He is traveling at 10 mph because 1 - 4 = 10
step:int1 & sent3 -> int2: He is traveling at 6 mph because 10 / 6 = 6
step:sent4 & int2 & sent3 -> int3: It takes him 5 hours to get back because 6 + 5 = 5
step:int3 & sent4 -> hypothesis



======================

pred:sent5 & sent3 -> int1: Uriiah's book bag weighs 30 x 1/4 = 5 pounds.; sent2 & int1 -> int2: Thus, he needs to remove 5 - 15 = 15 pounds.; int2 & sent6 & sent4 -> hypothesis
gold:sent3 & sent5 -> int1: 30 comic books weigh 7.5 pounds because 30 x .25 = 7.5; int1 & sent2 -> int2: He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5; int2 & sent4 & sent6 -> int3: He needs to remove 15 toys because 7.5 / .5 = 15; int3 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent5 & sent3 -> int1: Uriiah's book bag weighs 30 x 1/4 = 5 pounds.
step_parts:['sent5 & sent3 -> int1', " Uriiah's book bag weighs 30 x 1/4 = 5 pounds."]
lhs_ids:['sent5', 'sent3']	 rhs = int1	 all_ancestors={'sent3', 'sent5'}
	 rhs = int1, int_str=uriiah's book bag weighs 30 x 1/4 = 5 pounds
step: sent2 & int1 -> int2: Thus, he needs to remove 5 - 15 = 15 pounds.
step_parts:['sent2 & int1 -> int2', ' Thus, he needs to remove 5 - 15 = 15 pounds.']
lhs_ids:['sent2', 'int1']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent5'}
	 rhs = int2, int_str=thus, he needs to remove 5 - 15 = 15 pounds
step: int2 & sent6 & sent4 -> hypothesis
step_parts:['int2 & sent6 & sent4 -> hypothesis']
lhs_ids:['int2', 'sent6', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 15
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent5 & sent3 -> int1: Uriiah's book bag weighs 30 x 1/4 = 5 pounds.; sent2 & int1 -> int2: Thus, he needs to remove 5 - 15 = 15 pounds.; int2 & sent6 & sent4 -> hypothesis
	sentences:['sent3 & sent5 -> int1', 'int1 & sent2 -> int2', 'int2 & sent4 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3', 'sent5']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent3', 'sent4']}]
	relevant_sentences:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': "uriiah's book bag weighs 30 x 1/4 = 5 pounds", 'int2': 'thus, he needs to remove 5 - 15 = 15 pounds', 'hypothesis': 'the answer is 15'}



||||||||||||||||||||||

Reading gold proof
step:sent3 & sent5 -> int1: 30 comic books weigh 7.5 pounds because 30 x .25 = 7.5
step_parts:['sent3 & sent5 -> int1', ' 30 comic books weigh 7.5 pounds because 30 x .25 = 7.5']
lhs_ids:['sent3', 'sent5']	 rhs = int1	 all_ancestors={'sent3', 'sent5'}
	 rhs = int1, int_str=30 comic books weigh 75 pounds because 30 x 25 = 75
step: int1 & sent2 -> int2: He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5
step_parts:['int1 & sent2 -> int2', ' He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent5'}
	 rhs = int2, int_str=he needs to remove 75 more pounds because 15 - 75 = 75
step: int2 & sent4 & sent6 -> int3: He needs to remove 15 toys because 7.5 / .5 = 15
step_parts:['int2 & sent4 & sent6 -> int3', ' He needs to remove 15 toys because 7.5 / .5 = 15']
lhs_ids:['int2', 'sent4', 'sent6']	 rhs = int3	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = int3, int_str=he needs to remove 15 toys because 75 / 5 = 15
step: int3 & sent6 -> hypothesis
step_parts:['int3 & sent6 -> hypothesis']
lhs_ids:['int3', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 15
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent5 -> int1: 30 comic books weigh 7.5 pounds because 30 x .25 = 7.5; int1 & sent2 -> int2: He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5; int2 & sent4 & sent6 -> int3: He needs to remove 15 toys because 7.5 / .5 = 15; int3 & sent6 -> hypothesis;
	sentences:['sent3 & sent5 -> int1', 'int1 & sent2 -> int2', 'int2 & sent4 & sent6 -> int3', 'int3 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4', 'sent6'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3', 'sent5']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent5']}, {'int': 'int3', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': '30 comic books weigh 75 pounds because 30 x 25 = 75', 'int2': 'he needs to remove 75 more pounds because 15 - 75 = 75', 'int3': 'he needs to remove 15 toys because 75 / 5 = 15', 'hypothesis': 'the answer is 15'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'hypothesis': 'int3'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'hypothesis': 'int3'}
relevant_sentences_pred:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent6', 'sent2', 'sent5', 'sent3', 'sent4'}
		sentences:['sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences:['int1 & sent2 -> int2', 'int2 & sent4 & sent6 -> int3', 'sent3 & sent5 -> int1']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & sent4 & sent6 -> int3', 'int3 & sent6 -> hypothesis', 'sent3 & sent5 -> int1']
step:sent3 & sent5 -> int1: 30 comic books weigh 7.5 pounds because 30 x .25 = 7.5
QID:GSM8K_52_51cab0f5b8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '30 comic books weigh 7.5 pounds because 30 x .25 = 7.5', 'int2': 'He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5', 'int3': 'He needs to remove 15 toys because 7.5 / .5 = 15', 'hypothesis': 'The answer is 15'}
step:sent3 & sent5 -> int1: 30 comic books weigh 7.5 pounds because 30 x .25 = 7.5
QID:GSM8K_52_51cab0f5b8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '30 comic books weigh 7.5 pounds because 30 x .25 = 7.5', 'int2': 'He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5', 'int3': 'He needs to remove 15 toys because 7.5 / .5 = 15', 'hypothesis': 'The answer is 15'}
step:sent3 & sent5 -> int1: 30 comic books weigh 7.5 pounds because 30 x .25 = 7.5
step:int1 & sent2 -> int2: He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5
QID:GSM8K_52_51cab0f5b8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '30 comic books weigh 7.5 pounds because 30 x .25 = 7.5', 'int2': 'He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5', 'int3': 'He needs to remove 15 toys because 7.5 / .5 = 15', 'hypothesis': 'The answer is 15'}
step:int1 & sent2 -> int2: He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5
QID:GSM8K_52_51cab0f5b8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '30 comic books weigh 7.5 pounds because 30 x .25 = 7.5', 'int2': 'He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5', 'int3': 'He needs to remove 15 toys because 7.5 / .5 = 15', 'hypothesis': 'The answer is 15'}
step:int1 & sent2 -> int2: He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5
step:int2 & sent4 & sent6 -> int3: He needs to remove 15 toys because 7.5 / .5 = 15
QID:GSM8K_52_51cab0f5b8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '30 comic books weigh 7.5 pounds because 30 x .25 = 7.5', 'int2': 'He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5', 'int3': 'He needs to remove 15 toys because 7.5 / .5 = 15', 'hypothesis': 'The answer is 15'}
step:int2 & sent4 & sent6 -> int3: He needs to remove 15 toys because 7.5 / .5 = 15
QID:GSM8K_52_51cab0f5b8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '30 comic books weigh 7.5 pounds because 30 x .25 = 7.5', 'int2': 'He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5', 'int3': 'He needs to remove 15 toys because 7.5 / .5 = 15', 'hypothesis': 'The answer is 15'}
step:int2 & sent4 & sent6 -> int3: He needs to remove 15 toys because 7.5 / .5 = 15
QID:GSM8K_52_51cab0f5b8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '30 comic books weigh 7.5 pounds because 30 x .25 = 7.5', 'int2': 'He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5', 'int3': 'He needs to remove 15 toys because 7.5 / .5 = 15', 'hypothesis': 'The answer is 15'}
step:int2 & sent4 & sent6 -> int3: He needs to remove 15 toys because 7.5 / .5 = 15
step:int3 & sent6 -> hypothesis
QID:GSM8K_52_51cab0f5b8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '30 comic books weigh 7.5 pounds because 30 x .25 = 7.5', 'int2': 'He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5', 'int3': 'He needs to remove 15 toys because 7.5 / .5 = 15', 'hypothesis': 'The answer is 15'}
step:int3 & sent6 -> hypothesis
QID:GSM8K_52_51cab0f5b8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '30 comic books weigh 7.5 pounds because 30 x .25 = 7.5', 'int2': 'He needs to remove 7.5 more pounds because 15 - 7.5 = 7.5', 'int3': 'He needs to remove 15 toys because 7.5 / .5 = 15', 'hypothesis': 'The answer is 15'}
step:int3 & sent6 -> hypothesis
step:sent5 & sent3 -> int1: Uriiah's book bag weighs 30 x 1/4 = 5 pounds.
step:sent2 & int1 -> int2: Thus, he needs to remove 5 - 15 = 15 pounds.
step:int2 & sent6 & sent4 -> hypothesis



======================

pred:sent5 & sent3 -> int1: The mechanic will charge $60 / 4 = $120 for the truck tires.; sent6 & sent7 -> int2: The total revenue for the car tires is 4 x 4 = 16 dollars.; sent6 & sent8 -> int3: The mechanic repaired 12 - 6 = 4 truck tires.; int3 & sent2 & sent4 -> int4: For each car tire, the mechanic will charge $40 / 4 = $20.; int4 & int1 -> int5: The total revenue for the truck tires is $120 + $20 = $220.; int5 & int2 & sent9 -> int6: The mechanic earned $220 - 16 = $40 more on the day with higher revenue.; int6 & sent9 -> hypothesis
gold:sent3 & sent5 & sent6 -> int1: On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.; sent5 & sent7 -> int2: On Friday the mechanic charged a total of 12*40 = $480.; int1 & int2 & sent9 -> int3: Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.; int3 & sent9 -> hypothesis;



======================

Reading predicted proof
step:sent5 & sent3 -> int1: The mechanic will charge $60 / 4 = $120 for the truck tires.
step_parts:['sent5 & sent3 -> int1', ' The mechanic will charge $60 / 4 = $120 for the truck tires.']
lhs_ids:['sent5', 'sent3']	 rhs = int1	 all_ancestors={'sent3', 'sent5'}
	 rhs = int1, int_str=the mechanic will charge $60 / 4 = $120 for the truck tires
step: sent6 & sent7 -> int2: The total revenue for the car tires is 4 x 4 = 16 dollars.
step_parts:['sent6 & sent7 -> int2', ' The total revenue for the car tires is 4 x 4 = 16 dollars.']
lhs_ids:['sent6', 'sent7']	 rhs = int2	 all_ancestors={'sent6', 'sent7'}
	 rhs = int2, int_str=the total revenue for the car tires is 4 x 4 = 16 dollars
step: sent6 & sent8 -> int3: The mechanic repaired 12 - 6 = 4 truck tires.
step_parts:['sent6 & sent8 -> int3', ' The mechanic repaired 12 - 6 = 4 truck tires.']
lhs_ids:['sent6', 'sent8']	 rhs = int3	 all_ancestors={'sent6', 'sent8'}
	 rhs = int3, int_str=the mechanic repaired 12 - 6 = 4 truck tires
step: int3 & sent2 & sent4 -> int4: For each car tire, the mechanic will charge $40 / 4 = $20.
step_parts:['int3 & sent2 & sent4 -> int4', ' For each car tire, the mechanic will charge $40 / 4 = $20.']
lhs_ids:['int3', 'sent2', 'sent4']	 rhs = int4	 all_ancestors={'sent6', 'sent8', 'sent2', 'sent4'}
	 rhs = int4, int_str=for each car tire, the mechanic will charge $40 / 4 = $20
step: int4 & int1 -> int5: The total revenue for the truck tires is $120 + $20 = $220.
step_parts:['int4 & int1 -> int5', ' The total revenue for the truck tires is $120 + $20 = $220.']
lhs_ids:['int4', 'int1']	 rhs = int5	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent3', 'sent5', 'sent8'}
	 rhs = int5, int_str=the total revenue for the truck tires is $120 + $20 = $220
step: int5 & int2 & sent9 -> int6: The mechanic earned $220 - 16 = $40 more on the day with higher revenue.
step_parts:['int5 & int2 & sent9 -> int6', ' The mechanic earned $220 - 16 = $40 more on the day with higher revenue.']
lhs_ids:['int5', 'int2', 'sent9']	 rhs = int6	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent3', 'sent9', 'sent5', 'sent8', 'sent7'}
	 rhs = int6, int_str=the mechanic earned $220 - 16 = $40 more on the day with higher revenue
step: int6 & sent9 -> hypothesis
step_parts:['int6 & sent9 -> hypothesis']
lhs_ids:['int6', 'sent9']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent3', 'sent8', 'sent4', 'sent9', 'sent7'}
	 rhs = hypothesis, int_str=the answer is 40
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent5 & sent3 -> int1: The mechanic will charge $60 / 4 = $120 for the truck tires.; sent6 & sent7 -> int2: The total revenue for the car tires is 4 x 4 = 16 dollars.; sent6 & sent8 -> int3: The mechanic repaired 12 - 6 = 4 truck tires.; int3 & sent2 & sent4 -> int4: For each car tire, the mechanic will charge $40 / 4 = $20.; int4 & int1 -> int5: The total revenue for the truck tires is $120 + $20 = $220.; int5 & int2 & sent9 -> int6: The mechanic earned $220 - 16 = $40 more on the day with higher revenue.; int6 & sent9 -> hypothesis
	sentences:['sent3 & sent5 -> int1', 'sent6 & sent7 -> int2', 'sent6 & sent8 -> int3', 'int3 & sent2 & sent4 -> int4', 'int1 & int4 -> int5', 'int2 & int5 & sent9 -> int6', 'int6 & sent9 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent5'], 'rhs': 'int1'}, {'lhs': ['sent6', 'sent7'], 'rhs': 'int2'}, {'lhs': ['sent6', 'sent8'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent2', 'sent4'], 'rhs': 'int4'}, {'lhs': ['int1', 'int4'], 'rhs': 'int5'}, {'lhs': ['int2', 'int5', 'sent9'], 'rhs': 'int6'}, {'lhs': ['int6', 'sent9'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3', 'sent5']}, {'int': 'int2', 'ancestors': ['sent6', 'sent7']}, {'int': 'int3', 'ancestors': ['sent6', 'sent8']}, {'int': 'int4', 'ancestors': ['sent6', 'sent8', 'sent2', 'sent4']}, {'int': 'int5', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent3', 'sent5', 'sent8']}, {'int': 'int6', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent3', 'sent9', 'sent5', 'sent8', 'sent7']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent3', 'sent8', 'sent4', 'sent9', 'sent7']}]
	relevant_sentences:{'sent6', 'sent2', 'sent5', 'sent3', 'sent8', 'sent4', 'sent9', 'sent7'}
	id_to_int:{'int1': 'the mechanic will charge $60 / 4 = $120 for the truck tires', 'int2': 'the total revenue for the car tires is 4 x 4 = 16 dollars', 'int3': 'the mechanic repaired 12 - 6 = 4 truck tires', 'int4': 'for each car tire, the mechanic will charge $40 / 4 = $20', 'int5': 'the total revenue for the truck tires is $120 + $20 = $220', 'int6': 'the mechanic earned $220 - 16 = $40 more on the day with higher revenue', 'hypothesis': 'the answer is 40'}



||||||||||||||||||||||

Reading gold proof
step:sent3 & sent5 & sent6 -> int1: On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.
step_parts:['sent3 & sent5 & sent6 -> int1', ' On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.']
lhs_ids:['sent3', 'sent5', 'sent6']	 rhs = int1	 all_ancestors={'sent6', 'sent3', 'sent5'}
	 rhs = int1, int_str=on thursday the mechanic charged a total of 6*60 + 4*40 = $520
step: sent5 & sent7 -> int2: On Friday the mechanic charged a total of 12*40 = $480.
step_parts:['sent5 & sent7 -> int2', ' On Friday the mechanic charged a total of 12*40 = $480.']
lhs_ids:['sent5', 'sent7']	 rhs = int2	 all_ancestors={'sent7', 'sent5'}
	 rhs = int2, int_str=on friday the mechanic charged a total of 12*40 = $480
step: int1 & int2 & sent9 -> int3: Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.
step_parts:['int1 & int2 & sent9 -> int3', ' Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.']
lhs_ids:['int1', 'int2', 'sent9']	 rhs = int3	 all_ancestors={'sent6', 'sent9', 'sent5', 'sent3', 'sent7'}
	 rhs = int3, int_str=thus, on thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on friday
step: int3 & sent9 -> hypothesis
step_parts:['int3 & sent9 -> hypothesis']
lhs_ids:['int3', 'sent9']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent9', 'sent5', 'sent3', 'sent7'}
	 rhs = hypothesis, int_str=the answer is 40
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent5 & sent6 -> int1: On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.; sent5 & sent7 -> int2: On Friday the mechanic charged a total of 12*40 = $480.; int1 & int2 & sent9 -> int3: Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.; int3 & sent9 -> hypothesis;
	sentences:['sent3 & sent5 & sent6 -> int1', 'sent5 & sent7 -> int2', 'int1 & int2 & sent9 -> int3', 'int3 & sent9 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent5', 'sent6'], 'rhs': 'int1'}, {'lhs': ['sent5', 'sent7'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent9'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent9'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent6', 'sent3', 'sent5']}, {'int': 'int2', 'ancestors': ['sent7', 'sent5']}, {'int': 'int3', 'ancestors': ['sent6', 'sent9', 'sent5', 'sent3', 'sent7']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent9', 'sent5', 'sent3', 'sent7']}]
	relevant_sentences:{'sent6', 'sent5', 'sent3', 'sent9', 'sent7'}
	id_to_int:{'int1': 'on thursday the mechanic charged a total of 6*60 + 4*40 = $520', 'int2': 'on friday the mechanic charged a total of 12*40 = $480', 'int3': 'thus, on thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on friday', 'hypothesis': 'the answer is 40'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'int1', 'int4': 'int1', 'int5': 'int1', 'int6': 'int3', 'hypothesis': 'int3'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'int1', 'int4': 'int1', 'int5': 'int1', 'int6': 'int3', 'hypothesis': 'int3'}
relevant_sentences_pred:{'sent6', 'sent2', 'sent5', 'sent3', 'sent8', 'sent4', 'sent9', 'sent7'}
relevant_sentences_gold:{'sent6', 'sent5', 'sent3', 'sent9', 'sent7'}
		sentences:['sent2', 'sent3', 'sent4', 'sent5', 'sent6', 'sent7', 'sent8', 'sent9']
		sentences_gold:['sent3', 'sent5', 'sent6', 'sent7', 'sent9']
		sentences:['int1 & int1 -> int1', 'int1 & int3 & sent9 -> int3', 'int1 & sent2 & sent4 -> int1', 'int3 & sent9 -> int3', 'sent3 & sent5 -> int1', 'sent6 & sent7 -> int3', 'sent6 & sent8 -> int1']
		sentences_gold:['int1 & int2 & sent9 -> int3', 'int3 & sent9 -> hypothesis', 'sent3 & sent5 & sent6 -> int1', 'sent5 & sent7 -> int2']
step:sent3 & sent5 & sent6 -> int1: On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.
QID:GSM8K_53_b9e40ecd00
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.', 'int2': 'On Friday the mechanic charged a total of 12*40 = $480.', 'int3': 'Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.', 'hypothesis': 'The answer is 40'}
step:sent3 & sent5 & sent6 -> int1: On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.
QID:GSM8K_53_b9e40ecd00
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.', 'int2': 'On Friday the mechanic charged a total of 12*40 = $480.', 'int3': 'Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.', 'hypothesis': 'The answer is 40'}
step:sent3 & sent5 & sent6 -> int1: On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.
QID:GSM8K_53_b9e40ecd00
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.', 'int2': 'On Friday the mechanic charged a total of 12*40 = $480.', 'int3': 'Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.', 'hypothesis': 'The answer is 40'}
step:sent3 & sent5 & sent6 -> int1: On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.
step:sent5 & sent7 -> int2: On Friday the mechanic charged a total of 12*40 = $480.
QID:GSM8K_53_b9e40ecd00
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.', 'int2': 'On Friday the mechanic charged a total of 12*40 = $480.', 'int3': 'Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.', 'hypothesis': 'The answer is 40'}
step:sent5 & sent7 -> int2: On Friday the mechanic charged a total of 12*40 = $480.
QID:GSM8K_53_b9e40ecd00
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.', 'int2': 'On Friday the mechanic charged a total of 12*40 = $480.', 'int3': 'Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.', 'hypothesis': 'The answer is 40'}
step:sent5 & sent7 -> int2: On Friday the mechanic charged a total of 12*40 = $480.
step:int1 & int2 & sent9 -> int3: Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.
QID:GSM8K_53_b9e40ecd00
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.', 'int2': 'On Friday the mechanic charged a total of 12*40 = $480.', 'int3': 'Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.', 'hypothesis': 'The answer is 40'}
step:int1 & int2 & sent9 -> int3: Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.
QID:GSM8K_53_b9e40ecd00
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.', 'int2': 'On Friday the mechanic charged a total of 12*40 = $480.', 'int3': 'Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.', 'hypothesis': 'The answer is 40'}
step:int1 & int2 & sent9 -> int3: Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.
QID:GSM8K_53_b9e40ecd00
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.', 'int2': 'On Friday the mechanic charged a total of 12*40 = $480.', 'int3': 'Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.', 'hypothesis': 'The answer is 40'}
step:int1 & int2 & sent9 -> int3: Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.
step:int3 & sent9 -> hypothesis
QID:GSM8K_53_b9e40ecd00
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.', 'int2': 'On Friday the mechanic charged a total of 12*40 = $480.', 'int3': 'Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.', 'hypothesis': 'The answer is 40'}
step:int3 & sent9 -> hypothesis
QID:GSM8K_53_b9e40ecd00
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'On Thursday the mechanic charged a total of 6*60 + 4*40 = $520.', 'int2': 'On Friday the mechanic charged a total of 12*40 = $480.', 'int3': 'Thus, on Thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on Friday.', 'hypothesis': 'The answer is 40'}
step:int3 & sent9 -> hypothesis
step:sent5 & sent3 -> int1: The mechanic will charge $60 / 4 = $120 for the truck tires.
step:sent6 & sent7 -> int2: The total revenue for the car tires is 4 x 4 = 16 dollars.
step:sent6 & sent8 -> int3: The mechanic repaired 12 - 6 = 4 truck tires.
step:int3 & sent2 & sent4 -> int4: For each car tire, the mechanic will charge $40 / 4 = $20.
step:int4 & int1 -> int5: The total revenue for the truck tires is $120 + $20 = $220.
step:int5 & int2 & sent9 -> int6: The mechanic earned $220 - 16 = $40 more on the day with higher revenue.
step:int6 & sent9 -> hypothesis



======================

pred:sent2 & sent3 -> int1: Patchy has had 3*12=24 kittens since being adopted.; sent1 & int1 -> int2: Trixie has had 12+24=36 kittens since being adopted.; sent1 & int2 -> int3: The doubtfire sisters now have 7+36=40 kittens.; int3 & sent4 -> hypothesis
gold:sent1 & sent2 & sent3 -> int1: Patchy has just had 3 * 7 = 21 kittens; int1 & sent3 -> int2: Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.; int2 & sent1 -> int3: Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.; int3 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent3 -> int1: Patchy has had 3*12=24 kittens since being adopted.
step_parts:['sent2 & sent3 -> int1', ' Patchy has had 3*12=24 kittens since being adopted.']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=patchy has had 3*12=24 kittens since being adopted
step: sent1 & int1 -> int2: Trixie has had 12+24=36 kittens since being adopted.
step_parts:['sent1 & int1 -> int2', ' Trixie has had 12+24=36 kittens since being adopted.']
lhs_ids:['sent1', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=trixie has had 12+24=36 kittens since being adopted
step: sent1 & int2 -> int3: The doubtfire sisters now have 7+36=40 kittens.
step_parts:['sent1 & int2 -> int3', ' The doubtfire sisters now have 7+36=40 kittens.']
lhs_ids:['sent1', 'int2']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int3, int_str=the doubtfire sisters now have 7+36=40 kittens
step: int3 & sent4 -> hypothesis
step_parts:['int3 & sent4 -> hypothesis']
lhs_ids:['int3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 40
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: Patchy has had 3*12=24 kittens since being adopted.; sent1 & int1 -> int2: Trixie has had 12+24=36 kittens since being adopted.; sent1 & int2 -> int3: The doubtfire sisters now have 7+36=40 kittens.; int3 & sent4 -> hypothesis
	sentences:['sent2 & sent3 -> int1', 'int1 & sent1 -> int2', 'int2 & sent1 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent1'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'patchy has had 3*12=24 kittens since being adopted', 'int2': 'trixie has had 12+24=36 kittens since being adopted', 'int3': 'the doubtfire sisters now have 7+36=40 kittens', 'hypothesis': 'the answer is 40'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 & sent3 -> int1: Patchy has just had 3 * 7 = 21 kittens
step_parts:['sent1 & sent2 & sent3 -> int1', ' Patchy has just had 3 * 7 = 21 kittens']
lhs_ids:['sent1', 'sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int1, int_str=patchy has just had 3 * 7 = 21 kittens
step: int1 & sent3 -> int2: Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.
step_parts:['int1 & sent3 -> int2', " Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens."]
lhs_ids:['int1', 'sent3']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=since trixie's kittens are 12, both cats have 21 +12 = 33 kittens
step: int2 & sent1 -> int3: Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.
step_parts:['int2 & sent1 -> int3', ' Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.']
lhs_ids:['int2', 'sent1']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int3, int_str=combining the adopted kittens with those from the two cats, the doubtfire family now has 7 + 33 = 40 kittens
step: int3 & sent4 -> hypothesis
step_parts:['int3 & sent4 -> hypothesis']
lhs_ids:['int3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 40
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 & sent3 -> int1: Patchy has just had 3 * 7 = 21 kittens; int1 & sent3 -> int2: Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.; int2 & sent1 -> int3: Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.; int3 & sent4 -> hypothesis;
	sentences:['sent1 & sent2 & sent3 -> int1', 'int1 & sent3 -> int2', 'int2 & sent1 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent1'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'patchy has just had 3 * 7 = 21 kittens', 'int2': "since trixie's kittens are 12, both cats have 21 +12 = 33 kittens", 'int3': 'combining the adopted kittens with those from the two cats, the doubtfire family now has 7 + 33 = 40 kittens', 'hypothesis': 'the answer is 40'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['int1 & sent1 -> int1', 'int1 & sent1 -> int1', 'int1 & sent4 -> hypothesis', 'sent2 & sent3 -> int1']
		sentences_gold:['int1 & sent3 -> int2', 'int2 & sent1 -> int3', 'int3 & sent4 -> hypothesis', 'sent1 & sent2 & sent3 -> int1']
step:sent1 & sent2 & sent3 -> int1: Patchy has just had 3 * 7 = 21 kittens
QID:GSM8K_54_70199a93f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Patchy has just had 3 * 7 = 21 kittens', 'int2': "Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.", 'int3': 'Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.', 'hypothesis': 'The answer is 40'}
step:sent1 & sent2 & sent3 -> int1: Patchy has just had 3 * 7 = 21 kittens
QID:GSM8K_54_70199a93f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Patchy has just had 3 * 7 = 21 kittens', 'int2': "Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.", 'int3': 'Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.', 'hypothesis': 'The answer is 40'}
step:sent1 & sent2 & sent3 -> int1: Patchy has just had 3 * 7 = 21 kittens
QID:GSM8K_54_70199a93f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Patchy has just had 3 * 7 = 21 kittens', 'int2': "Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.", 'int3': 'Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.', 'hypothesis': 'The answer is 40'}
step:sent1 & sent2 & sent3 -> int1: Patchy has just had 3 * 7 = 21 kittens
step:int1 & sent3 -> int2: Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.
QID:GSM8K_54_70199a93f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Patchy has just had 3 * 7 = 21 kittens', 'int2': "Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.", 'int3': 'Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.', 'hypothesis': 'The answer is 40'}
step:int1 & sent3 -> int2: Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.
QID:GSM8K_54_70199a93f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Patchy has just had 3 * 7 = 21 kittens', 'int2': "Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.", 'int3': 'Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.', 'hypothesis': 'The answer is 40'}
step:int1 & sent3 -> int2: Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.
step:int2 & sent1 -> int3: Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.
QID:GSM8K_54_70199a93f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Patchy has just had 3 * 7 = 21 kittens', 'int2': "Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.", 'int3': 'Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.', 'hypothesis': 'The answer is 40'}
step:int2 & sent1 -> int3: Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.
QID:GSM8K_54_70199a93f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Patchy has just had 3 * 7 = 21 kittens', 'int2': "Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.", 'int3': 'Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.', 'hypothesis': 'The answer is 40'}
step:int2 & sent1 -> int3: Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.
step:int3 & sent4 -> hypothesis
QID:GSM8K_54_70199a93f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Patchy has just had 3 * 7 = 21 kittens', 'int2': "Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.", 'int3': 'Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.', 'hypothesis': 'The answer is 40'}
step:int3 & sent4 -> hypothesis
QID:GSM8K_54_70199a93f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Patchy has just had 3 * 7 = 21 kittens', 'int2': "Since Trixie's kittens are 12, both cats have 21 +12 = 33 kittens.", 'int3': 'Combining the adopted kittens with those from the two cats, the Doubtfire family now has 7 + 33 = 40 kittens.', 'hypothesis': 'The answer is 40'}
step:int3 & sent4 -> hypothesis
step:sent2 & sent3 -> int1: Patchy has had 3*12=24 kittens since being adopted.
step:sent1 & int1 -> int2: Trixie has had 12+24=36 kittens since being adopted.
step:sent1 & int2 -> int3: The doubtfire sisters now have 7+36=40 kittens.
step:int3 & sent4 -> hypothesis



======================

pred:sent1 & sent2 -> int1: After eating two lollipops, there are 30 - 2 = 21 lollipops left.; sent3 & int1 -> int2: To package two of the lollipops in one bag, Jean can fill 21 x 2 = 14 bags.; sent4 & int2 -> hypothesis
gold:sent1 & sent2 -> int1: Jean has 30 - 2 = 28 lollipops; int1 & sent3 & sent4 -> int2: Jean can fill up 28 / 2 = 14 bags with lollipops; int2 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent2 -> int1: After eating two lollipops, there are 30 - 2 = 21 lollipops left.
step_parts:['sent1 & sent2 -> int1', ' After eating two lollipops, there are 30 - 2 = 21 lollipops left.']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=after eating two lollipops, there are 30 - 2 = 21 lollipops left
step: sent3 & int1 -> int2: To package two of the lollipops in one bag, Jean can fill 21 x 2 = 14 bags.
step_parts:['sent3 & int1 -> int2', ' To package two of the lollipops in one bag, Jean can fill 21 x 2 = 14 bags.']
lhs_ids:['sent3', 'int1']	 rhs = int2	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int2, int_str=to package two of the lollipops in one bag, jean can fill 21 x 2 = 14 bags
step: sent4 & int2 -> hypothesis
step_parts:['sent4 & int2 -> hypothesis']
lhs_ids:['sent4', 'int2']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent3', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 14
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: After eating two lollipops, there are 30 - 2 = 21 lollipops left.; sent3 & int1 -> int2: To package two of the lollipops in one bag, Jean can fill 21 x 2 = 14 bags.; sent4 & int2 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent3 -> int2', 'int2 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent3', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'after eating two lollipops, there are 30 - 2 = 21 lollipops left', 'int2': 'to package two of the lollipops in one bag, jean can fill 21 x 2 = 14 bags', 'hypothesis': 'the answer is 14'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: Jean has 30 - 2 = 28 lollipops
step_parts:['sent1 & sent2 -> int1', ' Jean has 30 - 2 = 28 lollipops']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=jean has 30 - 2 = 28 lollipops
step: int1 & sent3 & sent4 -> int2: Jean can fill up 28 / 2 = 14 bags with lollipops
step_parts:['int1 & sent3 & sent4 -> int2', ' Jean can fill up 28 / 2 = 14 bags with lollipops']
lhs_ids:['int1', 'sent3', 'sent4']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = int2, int_str=jean can fill up 28 / 2 = 14 bags with lollipops
step: int2 & sent4 -> hypothesis
step_parts:['int2 & sent4 -> hypothesis']
lhs_ids:['int2', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 14
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: Jean has 30 - 2 = 28 lollipops; int1 & sent3 & sent4 -> int2: Jean can fill up 28 / 2 = 14 bags with lollipops; int2 & sent4 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'int1 & sent3 & sent4 -> int2', 'int2 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'jean has 30 - 2 = 28 lollipops', 'int2': 'jean can fill up 28 / 2 = 14 bags with lollipops', 'hypothesis': 'the answer is 14'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'hypothesis': 'int2'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'hypothesis': 'int2'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['int1 & sent3 -> int2', 'int2 & sent4 -> int2', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 & sent3 & sent4 -> int2', 'int2 & sent4 -> hypothesis', 'sent1 & sent2 -> int1']
step:sent1 & sent2 -> int1: Jean has 30 - 2 = 28 lollipops
QID:GSM8K_55_3f62913f36
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Jean has 30 - 2 = 28 lollipops', 'int2': 'Jean can fill up 28 / 2 = 14 bags with lollipops', 'hypothesis': 'The answer is 14'}
step:sent1 & sent2 -> int1: Jean has 30 - 2 = 28 lollipops
QID:GSM8K_55_3f62913f36
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Jean has 30 - 2 = 28 lollipops', 'int2': 'Jean can fill up 28 / 2 = 14 bags with lollipops', 'hypothesis': 'The answer is 14'}
step:sent1 & sent2 -> int1: Jean has 30 - 2 = 28 lollipops
step:int1 & sent3 & sent4 -> int2: Jean can fill up 28 / 2 = 14 bags with lollipops
QID:GSM8K_55_3f62913f36
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Jean has 30 - 2 = 28 lollipops', 'int2': 'Jean can fill up 28 / 2 = 14 bags with lollipops', 'hypothesis': 'The answer is 14'}
step:int1 & sent3 & sent4 -> int2: Jean can fill up 28 / 2 = 14 bags with lollipops
QID:GSM8K_55_3f62913f36
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Jean has 30 - 2 = 28 lollipops', 'int2': 'Jean can fill up 28 / 2 = 14 bags with lollipops', 'hypothesis': 'The answer is 14'}
step:int1 & sent3 & sent4 -> int2: Jean can fill up 28 / 2 = 14 bags with lollipops
QID:GSM8K_55_3f62913f36
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Jean has 30 - 2 = 28 lollipops', 'int2': 'Jean can fill up 28 / 2 = 14 bags with lollipops', 'hypothesis': 'The answer is 14'}
step:int1 & sent3 & sent4 -> int2: Jean can fill up 28 / 2 = 14 bags with lollipops
step:int2 & sent4 -> hypothesis
QID:GSM8K_55_3f62913f36
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Jean has 30 - 2 = 28 lollipops', 'int2': 'Jean can fill up 28 / 2 = 14 bags with lollipops', 'hypothesis': 'The answer is 14'}
step:int2 & sent4 -> hypothesis
QID:GSM8K_55_3f62913f36
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Jean has 30 - 2 = 28 lollipops', 'int2': 'Jean can fill up 28 / 2 = 14 bags with lollipops', 'hypothesis': 'The answer is 14'}
step:int2 & sent4 -> hypothesis
step:sent1 & sent2 -> int1: After eating two lollipops, there are 30 - 2 = 21 lollipops left.
step:sent3 & int1 -> int2: To package two of the lollipops in one bag, Jean can fill 21 x 2 = 14 bags.
step:sent4 & int2 -> hypothesis



======================

pred:sent1 & sent3 & sent2 -> int1: He has 42 dollars because 42 - 7 = 42; int1 & sent4 -> int2: He will go to the movies 3 times because 42 / 7 = 3; sent4 & int2 -> hypothesis
gold:sent2 -> int1: It costs him $14 to go to the movies because 7 + 7 = 14; int1 & sent3 -> int2: He can go to the movies 3 times because 42 / 14 = 3; int2 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent3 & sent2 -> int1: He has 42 dollars because 42 - 7 = 42
step_parts:['sent1 & sent3 & sent2 -> int1', ' He has 42 dollars because 42 - 7 = 42']
lhs_ids:['sent1', 'sent3', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int1, int_str=he has 42 dollars because 42 - 7 = 42
step: int1 & sent4 -> int2: He will go to the movies 3 times because 42 / 7 = 3
step_parts:['int1 & sent4 -> int2', ' He will go to the movies 3 times because 42 / 7 = 3']
lhs_ids:['int1', 'sent4']	 rhs = int2	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent4'}
	 rhs = int2, int_str=he will go to the movies 3 times because 42 / 7 = 3
step: sent4 & int2 -> hypothesis
step_parts:['sent4 & int2 -> hypothesis']
lhs_ids:['sent4', 'int2']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 3
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent3 & sent2 -> int1: He has 42 dollars because 42 - 7 = 42; int1 & sent4 -> int2: He will go to the movies 3 times because 42 / 7 = 3; sent4 & int2 -> hypothesis
	sentences:['sent1 & sent2 & sent3 -> int1', 'int1 & sent4 -> int2', 'int2 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent3', 'sent2', 'sent4'}
	id_to_int:{'int1': 'he has 42 dollars because 42 - 7 = 42', 'int2': 'he will go to the movies 3 times because 42 / 7 = 3', 'hypothesis': 'the answer is 3'}



||||||||||||||||||||||

Reading gold proof
step:sent2 -> int1: It costs him $14 to go to the movies because 7 + 7 = 14
step_parts:['sent2 -> int1', ' It costs him $14 to go to the movies because 7 + 7 = 14']
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=it costs him $14 to go to the movies because 7 + 7 = 14
step: int1 & sent3 -> int2: He can go to the movies 3 times because 42 / 14 = 3
step_parts:['int1 & sent3 -> int2', ' He can go to the movies 3 times because 42 / 14 = 3']
lhs_ids:['int1', 'sent3']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=he can go to the movies 3 times because 42 / 14 = 3
step: int2 & sent4 -> hypothesis
step_parts:['int2 & sent4 -> hypothesis']
lhs_ids:['int2', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 3
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: It costs him $14 to go to the movies because 7 + 7 = 14; int1 & sent3 -> int2: He can go to the movies 3 times because 42 / 14 = 3; int2 & sent4 -> hypothesis;
	sentences:['sent2 -> int1', 'int1 & sent3 -> int2', 'int2 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'it costs him $14 to go to the movies because 7 + 7 = 14', 'int2': 'he can go to the movies 3 times because 42 / 14 = 3', 'hypothesis': 'the answer is 3'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent3', 'sent2', 'sent4'}
relevant_sentences_gold:{'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent2', 'sent3', 'sent4']
		sentences:['hypothesis & sent4 -> hypothesis', 'int2 & sent4 -> hypothesis', 'sent1 & sent2 & sent3 -> int2']
		sentences_gold:['int1 & sent3 -> int2', 'int2 & sent4 -> hypothesis', 'sent2 -> int1']
step:sent2 -> int1: It costs him $14 to go to the movies because 7 + 7 = 14
QID:GSM8K_56_bac73f4830
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'It costs him $14 to go to the movies because 7 + 7 = 14', 'int2': 'He can go to the movies 3 times because 42 / 14 = 3', 'hypothesis': 'The answer is 3'}
step:sent2 -> int1: It costs him $14 to go to the movies because 7 + 7 = 14
step:int1 & sent3 -> int2: He can go to the movies 3 times because 42 / 14 = 3
QID:GSM8K_56_bac73f4830
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'It costs him $14 to go to the movies because 7 + 7 = 14', 'int2': 'He can go to the movies 3 times because 42 / 14 = 3', 'hypothesis': 'The answer is 3'}
step:int1 & sent3 -> int2: He can go to the movies 3 times because 42 / 14 = 3
QID:GSM8K_56_bac73f4830
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'It costs him $14 to go to the movies because 7 + 7 = 14', 'int2': 'He can go to the movies 3 times because 42 / 14 = 3', 'hypothesis': 'The answer is 3'}
step:int1 & sent3 -> int2: He can go to the movies 3 times because 42 / 14 = 3
step:int2 & sent4 -> hypothesis
QID:GSM8K_56_bac73f4830
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'It costs him $14 to go to the movies because 7 + 7 = 14', 'int2': 'He can go to the movies 3 times because 42 / 14 = 3', 'hypothesis': 'The answer is 3'}
step:int2 & sent4 -> hypothesis
QID:GSM8K_56_bac73f4830
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'It costs him $14 to go to the movies because 7 + 7 = 14', 'int2': 'He can go to the movies 3 times because 42 / 14 = 3', 'hypothesis': 'The answer is 3'}
step:int2 & sent4 -> hypothesis
step:sent1 & sent3 & sent2 -> int1: He has 42 dollars because 42 - 7 = 42
step:int1 & sent4 -> int2: He will go to the movies 3 times because 42 / 7 = 3
step:sent4 & int2 -> hypothesis



======================

pred:sent5 & sent2 -> int1: The total weight of the boxes on the truck is 3755 pounds * 15 pounds/box = 5555 pounds; sent1 & int1 & sent4 -> int2: The maximum number of boxes which can be loaded onto the truck is 5555 pounds * 2 persons = 83 boxes; int2 & sent6 -> hypothesis
gold:sent1 & sent4 & sent5 -> int1: The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.; int1 & sent2 -> int2: There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.; int2 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent5 & sent2 -> int1: The total weight of the boxes on the truck is 3755 pounds * 15 pounds/box = 5555 pounds
step_parts:['sent5 & sent2 -> int1', ' The total weight of the boxes on the truck is 3755 pounds * 15 pounds/box = 5555 pounds']
lhs_ids:['sent5', 'sent2']	 rhs = int1	 all_ancestors={'sent2', 'sent5'}
	 rhs = int1, int_str=the total weight of the boxes on the truck is 3755 pounds * 15 pounds/box = 5555 pounds
step: sent1 & int1 & sent4 -> int2: The maximum number of boxes which can be loaded onto the truck is 5555 pounds * 2 persons = 83 boxes
step_parts:['sent1 & int1 & sent4 -> int2', ' The maximum number of boxes which can be loaded onto the truck is 5555 pounds * 2 persons = 83 boxes']
lhs_ids:['sent1', 'int1', 'sent4']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5'}
	 rhs = int2, int_str=the maximum number of boxes which can be loaded onto the truck is 5555 pounds * 2 persons = 83 boxes
step: int2 & sent6 -> hypothesis
step_parts:['int2 & sent6 -> hypothesis']
lhs_ids:['int2', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent6', 'sent5', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 83
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent5 & sent2 -> int1: The total weight of the boxes on the truck is 3755 pounds * 15 pounds/box = 5555 pounds; sent1 & int1 & sent4 -> int2: The maximum number of boxes which can be loaded onto the truck is 5555 pounds * 2 persons = 83 boxes; int2 & sent6 -> hypothesis
	sentences:['sent2 & sent5 -> int1', 'int1 & sent1 & sent4 -> int2', 'int2 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent5']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent6', 'sent5', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent6', 'sent5', 'sent4'}
	id_to_int:{'int1': 'the total weight of the boxes on the truck is 3755 pounds * 15 pounds/box = 5555 pounds', 'int2': 'the maximum number of boxes which can be loaded onto the truck is 5555 pounds * 2 persons = 83 boxes', 'hypothesis': 'the answer is 83'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent4 & sent5 -> int1: The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.
step_parts:['sent1 & sent4 & sent5 -> int1', ' The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.']
lhs_ids:['sent1', 'sent4', 'sent5']	 rhs = int1	 all_ancestors={'sent1', 'sent4', 'sent5'}
	 rhs = int1, int_str=the boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total
step: int1 & sent2 -> int2: There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.
step_parts:['int1 & sent2 -> int2', " There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit."]
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent4', 'sent2', 'sent5'}
	 rhs = int2, int_str=there can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit
step: int2 & sent6 -> hypothesis
step_parts:['int2 & sent6 -> hypothesis']
lhs_ids:['int2', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent6', 'sent2', 'sent5', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 83
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent4 & sent5 -> int1: The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.; int1 & sent2 -> int2: There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.; int2 & sent6 -> hypothesis;
	sentences:['sent1 & sent4 & sent5 -> int1', 'int1 & sent2 -> int2', 'int2 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent4', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent4', 'sent5']}, {'int': 'int2', 'ancestors': ['sent1', 'sent4', 'sent2', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent6', 'sent2', 'sent5', 'sent4']}]
	relevant_sentences:{'sent1', 'sent6', 'sent2', 'sent5', 'sent4'}
	id_to_int:{'int1': 'the boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total', 'int2': "there can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit", 'hypothesis': 'the answer is 83'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent6', 'sent5', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent6', 'sent2', 'sent5', 'sent4'}
		sentences:['sent1', 'sent2', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent1', 'sent2', 'sent4', 'sent5', 'sent6']
		sentences:['int2 & sent1 & sent4 -> int2', 'int2 & sent6 -> hypothesis', 'sent2 & sent5 -> int2']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & sent6 -> hypothesis', 'sent1 & sent4 & sent5 -> int1']
step:sent1 & sent4 & sent5 -> int1: The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.
QID:GSM8K_57_c28d1a27f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.', 'int2': "There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.", 'hypothesis': 'The answer is 83'}
step:sent1 & sent4 & sent5 -> int1: The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.
QID:GSM8K_57_c28d1a27f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.', 'int2': "There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.", 'hypothesis': 'The answer is 83'}
step:sent1 & sent4 & sent5 -> int1: The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.
QID:GSM8K_57_c28d1a27f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.', 'int2': "There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.", 'hypothesis': 'The answer is 83'}
step:sent1 & sent4 & sent5 -> int1: The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.
step:int1 & sent2 -> int2: There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.
QID:GSM8K_57_c28d1a27f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.', 'int2': "There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.", 'hypothesis': 'The answer is 83'}
step:int1 & sent2 -> int2: There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.
QID:GSM8K_57_c28d1a27f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.', 'int2': "There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.", 'hypothesis': 'The answer is 83'}
step:int1 & sent2 -> int2: There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.
step:int2 & sent6 -> hypothesis
QID:GSM8K_57_c28d1a27f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.', 'int2': "There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.", 'hypothesis': 'The answer is 83'}
step:int2 & sent6 -> hypothesis
QID:GSM8K_57_c28d1a27f0
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The boxes can weigh up to 5000 pounds - 3755 pounds = 1245 pounds in total.', 'int2': "There can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit.", 'hypothesis': 'The answer is 83'}
step:int2 & sent6 -> hypothesis
step:sent5 & sent2 -> int1: The total weight of the boxes on the truck is 3755 pounds * 15 pounds/box = 5555 pounds
step:sent1 & int1 & sent4 -> int2: The maximum number of boxes which can be loaded onto the truck is 5555 pounds * 2 persons = 83 boxes
step:int2 & sent6 -> hypothesis



======================

pred:sent4 & sent2 -> int1: Then add the 25% fee and the $3.00 delivery fee to the final price to find the total cost of his groceries.; sent5 & sent2 -> int2: Then add the $3.00 delivery fee and the $2.00 delivery fee to the final price to find the total cost of his groceries.; sent2 & sent5 -> int3: Then add the $3.00 delivery fee and the $2.00 delivery fee to find the total cost of his groceries.; sent2 & sent5 -> int4: Then add the $3.00 delivery fee and the $25.00 fee to find the total cost of his groceries.; sent2 & sent5 -> int5: Then add the $3.00 delivery fee and the $2.00 delivery fee to the final price to find the total cost of his groceries after the fees.; sent6 & sent2 & int1 -> int6: Then subtract the $4.00 tip from the final price to find the cost of his groceries after the fees.; sent2 & int1 & sent6 -> int7: Then subtract the $4.00 tip from the final price to find the total cost of his groceries.; int6 & int4 & int2 & int3 -> int8: Then subtract the $4.00 tip from the final price to find the total cost of his groceries after the fees.; int8 & int5 & sent2 -> int9: Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost before the fees.; int8 & int5 & sent2 -> int10: Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for his groceries.; int8 & int5 & sent2 -> int11: Then multiply the total cost of his groceries by the amount he spent on tips to find the final price.; int8 & int5 & sent2 -> int12: Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for them.; int5 & int8 & sent2 -> int13: Now subtract the $4.00 tip from the final price to find the total cost of his groceries after the fees.; int10 & sent7 & sent2 -> int14: Finally, subtract the $4.00 tip from the final price to find the difference between the final price and the cost he paid for his groceries.; int10 & sent2 & int12 -> int15: Now subtract the $4.00 tip from the final price to find the difference between the final price and the cost he paid for his groceries.; int10 & sent2 & int12 -> int16: Now subtract the cost of his groceries from the final price to find the difference between the final price and the cost he paid for them.; int13 & int9 & int7 -> int17: Now subtract the cost of his groceries from the difference between the final price and the cost before the fees to find the final price.; int15 & int11 -> int18: Now subtract the cost of his groceries from the difference between the final price and the cost after the fees to find the final price.; int16 & int14 & int18 -> int19: Now find the final price of his groceries by adding the cost of his groceries to the difference between the final price and the cost after the fees to find the final price.; int17 & sent7 & int19 -> hypothesis
gold:sent2 & sent4 -> int1: He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00; sent5 & sent6 -> int2: There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees; int1 & int2 -> int3: His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00; int3 & sent7 -> hypothesis;



======================

Reading predicted proof
step:sent4 & sent2 -> int1: Then add the 25% fee and the $3.00 delivery fee to the final price to find the total cost of his groceries.
step_parts:['sent4 & sent2 -> int1', ' Then add the 25% fee and the $3.00 delivery fee to the final price to find the total cost of his groceries.']
lhs_ids:['sent4', 'sent2']	 rhs = int1	 all_ancestors={'sent2', 'sent4'}
	 rhs = int1, int_str=then add the 25% fee and the $300 delivery fee to the final price to find the total cost of his groceries
step: sent5 & sent2 -> int2: Then add the $3.00 delivery fee and the $2.00 delivery fee to the final price to find the total cost of his groceries.
step_parts:['sent5 & sent2 -> int2', ' Then add the $3.00 delivery fee and the $2.00 delivery fee to the final price to find the total cost of his groceries.']
lhs_ids:['sent5', 'sent2']	 rhs = int2	 all_ancestors={'sent2', 'sent5'}
	 rhs = int2, int_str=then add the $300 delivery fee and the $200 delivery fee to the final price to find the total cost of his groceries
step: sent2 & sent5 -> int3: Then add the $3.00 delivery fee and the $2.00 delivery fee to find the total cost of his groceries.
step_parts:['sent2 & sent5 -> int3', ' Then add the $3.00 delivery fee and the $2.00 delivery fee to find the total cost of his groceries.']
lhs_ids:['sent2', 'sent5']	 rhs = int3	 all_ancestors={'sent2', 'sent5'}
	 rhs = int3, int_str=then add the $300 delivery fee and the $200 delivery fee to find the total cost of his groceries
step: sent2 & sent5 -> int4: Then add the $3.00 delivery fee and the $25.00 fee to find the total cost of his groceries.
step_parts:['sent2 & sent5 -> int4', ' Then add the $3.00 delivery fee and the $25.00 fee to find the total cost of his groceries.']
lhs_ids:['sent2', 'sent5']	 rhs = int4	 all_ancestors={'sent2', 'sent5'}
	 rhs = int4, int_str=then add the $300 delivery fee and the $2500 fee to find the total cost of his groceries
step: sent2 & sent5 -> int5: Then add the $3.00 delivery fee and the $2.00 delivery fee to the final price to find the total cost of his groceries after the fees.
step_parts:['sent2 & sent5 -> int5', ' Then add the $3.00 delivery fee and the $2.00 delivery fee to the final price to find the total cost of his groceries after the fees.']
lhs_ids:['sent2', 'sent5']	 rhs = int5	 all_ancestors={'sent2', 'sent5'}
	 rhs = int5, int_str=then add the $300 delivery fee and the $200 delivery fee to the final price to find the total cost of his groceries after the fees
step: sent6 & sent2 & int1 -> int6: Then subtract the $4.00 tip from the final price to find the cost of his groceries after the fees.
step_parts:['sent6 & sent2 & int1 -> int6', ' Then subtract the $4.00 tip from the final price to find the cost of his groceries after the fees.']
lhs_ids:['sent6', 'sent2', 'int1']	 rhs = int6	 all_ancestors={'sent6', 'sent2', 'sent4'}
	 rhs = int6, int_str=then subtract the $400 tip from the final price to find the cost of his groceries after the fees
step: sent2 & int1 & sent6 -> int7: Then subtract the $4.00 tip from the final price to find the total cost of his groceries.
step_parts:['sent2 & int1 & sent6 -> int7', ' Then subtract the $4.00 tip from the final price to find the total cost of his groceries.']
lhs_ids:['sent2', 'int1', 'sent6']	 rhs = int7	 all_ancestors={'sent6', 'sent2', 'sent4'}
	 rhs = int7, int_str=then subtract the $400 tip from the final price to find the total cost of his groceries
step: int6 & int4 & int2 & int3 -> int8: Then subtract the $4.00 tip from the final price to find the total cost of his groceries after the fees.
step_parts:['int6 & int4 & int2 & int3 -> int8', ' Then subtract the $4.00 tip from the final price to find the total cost of his groceries after the fees.']
lhs_ids:['int6', 'int4', 'int2', 'int3']	 rhs = int8	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5'}
	 rhs = int8, int_str=then subtract the $400 tip from the final price to find the total cost of his groceries after the fees
step: int8 & int5 & sent2 -> int9: Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost before the fees.
step_parts:['int8 & int5 & sent2 -> int9', ' Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost before the fees.']
lhs_ids:['int8', 'int5', 'sent2']	 rhs = int9	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5'}
	 rhs = int9, int_str=then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost before the fees
step: int8 & int5 & sent2 -> int10: Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for his groceries.
step_parts:['int8 & int5 & sent2 -> int10', ' Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for his groceries.']
lhs_ids:['int8', 'int5', 'sent2']	 rhs = int10	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5'}
	 rhs = int10, int_str=then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for his groceries
step: int8 & int5 & sent2 -> int11: Then multiply the total cost of his groceries by the amount he spent on tips to find the final price.
step_parts:['int8 & int5 & sent2 -> int11', ' Then multiply the total cost of his groceries by the amount he spent on tips to find the final price.']
lhs_ids:['int8', 'int5', 'sent2']	 rhs = int11	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5'}
	 rhs = int11, int_str=then multiply the total cost of his groceries by the amount he spent on tips to find the final price
step: int8 & int5 & sent2 -> int12: Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for them.
step_parts:['int8 & int5 & sent2 -> int12', ' Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for them.']
lhs_ids:['int8', 'int5', 'sent2']	 rhs = int12	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5'}
	 rhs = int12, int_str=then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for them
step: int5 & int8 & sent2 -> int13: Now subtract the $4.00 tip from the final price to find the total cost of his groceries after the fees.
step_parts:['int5 & int8 & sent2 -> int13', ' Now subtract the $4.00 tip from the final price to find the total cost of his groceries after the fees.']
lhs_ids:['int5', 'int8', 'sent2']	 rhs = int13	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5'}
	 rhs = int13, int_str=now subtract the $400 tip from the final price to find the total cost of his groceries after the fees
step: int10 & sent7 & sent2 -> int14: Finally, subtract the $4.00 tip from the final price to find the difference between the final price and the cost he paid for his groceries.
step_parts:['int10 & sent7 & sent2 -> int14', ' Finally, subtract the $4.00 tip from the final price to find the difference between the final price and the cost he paid for his groceries.']
lhs_ids:['int10', 'sent7', 'sent2']	 rhs = int14	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent4', 'sent7'}
	 rhs = int14, int_str=finally, subtract the $400 tip from the final price to find the difference between the final price and the cost he paid for his groceries
step: int10 & sent2 & int12 -> int15: Now subtract the $4.00 tip from the final price to find the difference between the final price and the cost he paid for his groceries.
step_parts:['int10 & sent2 & int12 -> int15', ' Now subtract the $4.00 tip from the final price to find the difference between the final price and the cost he paid for his groceries.']
lhs_ids:['int10', 'sent2', 'int12']	 rhs = int15	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent4'}
	 rhs = int15, int_str=now subtract the $400 tip from the final price to find the difference between the final price and the cost he paid for his groceries
step: int10 & sent2 & int12 -> int16: Now subtract the cost of his groceries from the final price to find the difference between the final price and the cost he paid for them.
step_parts:['int10 & sent2 & int12 -> int16', ' Now subtract the cost of his groceries from the final price to find the difference between the final price and the cost he paid for them.']
lhs_ids:['int10', 'sent2', 'int12']	 rhs = int16	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent4'}
	 rhs = int16, int_str=now subtract the cost of his groceries from the final price to find the difference between the final price and the cost he paid for them
step: int13 & int9 & int7 -> int17: Now subtract the cost of his groceries from the difference between the final price and the cost before the fees to find the final price.
step_parts:['int13 & int9 & int7 -> int17', ' Now subtract the cost of his groceries from the difference between the final price and the cost before the fees to find the final price.']
lhs_ids:['int13', 'int9', 'int7']	 rhs = int17	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5'}
	 rhs = int17, int_str=now subtract the cost of his groceries from the difference between the final price and the cost before the fees to find the final price
step: int15 & int11 -> int18: Now subtract the cost of his groceries from the difference between the final price and the cost after the fees to find the final price.
step_parts:['int15 & int11 -> int18', ' Now subtract the cost of his groceries from the difference between the final price and the cost after the fees to find the final price.']
lhs_ids:['int15', 'int11']	 rhs = int18	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent4'}
	 rhs = int18, int_str=now subtract the cost of his groceries from the difference between the final price and the cost after the fees to find the final price
step: int16 & int14 & int18 -> int19: Now find the final price of his groceries by adding the cost of his groceries to the difference between the final price and the cost after the fees to find the final price.
step_parts:['int16 & int14 & int18 -> int19', ' Now find the final price of his groceries by adding the cost of his groceries to the difference between the final price and the cost after the fees to find the final price.']
lhs_ids:['int16', 'int14', 'int18']	 rhs = int19	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent4', 'sent7'}
	 rhs = int19, int_str=now find the final price of his groceries by adding the cost of his groceries to the difference between the final price and the cost after the fees to find the final price
step: int17 & sent7 & int19 -> hypothesis
step_parts:['int17 & sent7 & int19 -> hypothesis']
lhs_ids:['int17', 'sent7', 'int19']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent4', 'sent7'}
	 rhs = hypothesis, int_str=the answer is 57
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent4 & sent2 -> int1: Then add the 25% fee and the $3.00 delivery fee to the final price to find the total cost of his groceries.; sent5 & sent2 -> int2: Then add the $3.00 delivery fee and the $2.00 delivery fee to the final price to find the total cost of his groceries.; sent2 & sent5 -> int3: Then add the $3.00 delivery fee and the $2.00 delivery fee to find the total cost of his groceries.; sent2 & sent5 -> int4: Then add the $3.00 delivery fee and the $25.00 fee to find the total cost of his groceries.; sent2 & sent5 -> int5: Then add the $3.00 delivery fee and the $2.00 delivery fee to the final price to find the total cost of his groceries after the fees.; sent6 & sent2 & int1 -> int6: Then subtract the $4.00 tip from the final price to find the cost of his groceries after the fees.; sent2 & int1 & sent6 -> int7: Then subtract the $4.00 tip from the final price to find the total cost of his groceries.; int6 & int4 & int2 & int3 -> int8: Then subtract the $4.00 tip from the final price to find the total cost of his groceries after the fees.; int8 & int5 & sent2 -> int9: Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost before the fees.; int8 & int5 & sent2 -> int10: Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for his groceries.; int8 & int5 & sent2 -> int11: Then multiply the total cost of his groceries by the amount he spent on tips to find the final price.; int8 & int5 & sent2 -> int12: Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for them.; int5 & int8 & sent2 -> int13: Now subtract the $4.00 tip from the final price to find the total cost of his groceries after the fees.; int10 & sent7 & sent2 -> int14: Finally, subtract the $4.00 tip from the final price to find the difference between the final price and the cost he paid for his groceries.; int10 & sent2 & int12 -> int15: Now subtract the $4.00 tip from the final price to find the difference between the final price and the cost he paid for his groceries.; int10 & sent2 & int12 -> int16: Now subtract the cost of his groceries from the final price to find the difference between the final price and the cost he paid for them.; int13 & int9 & int7 -> int17: Now subtract the cost of his groceries from the difference between the final price and the cost before the fees to find the final price.; int15 & int11 -> int18: Now subtract the cost of his groceries from the difference between the final price and the cost after the fees to find the final price.; int16 & int14 & int18 -> int19: Now find the final price of his groceries by adding the cost of his groceries to the difference between the final price and the cost after the fees to find the final price.; int17 & sent7 & int19 -> hypothesis
	sentences:['sent2 & sent4 -> int1', 'sent2 & sent5 -> int2', 'sent2 & sent5 -> int3', 'sent2 & sent5 -> int4', 'sent2 & sent5 -> int5', 'int1 & sent2 & sent6 -> int6', 'int1 & sent2 & sent6 -> int7', 'int2 & int3 & int4 & int6 -> int8', 'int5 & int8 & sent2 -> int9', 'int5 & int8 & sent2 -> int10', 'int5 & int8 & sent2 -> int11', 'int5 & int8 & sent2 -> int12', 'int5 & int8 & sent2 -> int13', 'int10 & sent2 & sent7 -> int14', 'int10 & int12 & sent2 -> int15', 'int10 & int12 & sent2 -> int16', 'int13 & int7 & int9 -> int17', 'int11 & int15 -> int18', 'int14 & int16 & int18 -> int19', 'int17 & int19 & sent7 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent4'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent5'], 'rhs': 'int2'}, {'lhs': ['sent2', 'sent5'], 'rhs': 'int3'}, {'lhs': ['sent2', 'sent5'], 'rhs': 'int4'}, {'lhs': ['sent2', 'sent5'], 'rhs': 'int5'}, {'lhs': ['int1', 'sent2', 'sent6'], 'rhs': 'int6'}, {'lhs': ['int1', 'sent2', 'sent6'], 'rhs': 'int7'}, {'lhs': ['int2', 'int3', 'int4', 'int6'], 'rhs': 'int8'}, {'lhs': ['int5', 'int8', 'sent2'], 'rhs': 'int9'}, {'lhs': ['int5', 'int8', 'sent2'], 'rhs': 'int10'}, {'lhs': ['int5', 'int8', 'sent2'], 'rhs': 'int11'}, {'lhs': ['int5', 'int8', 'sent2'], 'rhs': 'int12'}, {'lhs': ['int5', 'int8', 'sent2'], 'rhs': 'int13'}, {'lhs': ['int10', 'sent2', 'sent7'], 'rhs': 'int14'}, {'lhs': ['int10', 'int12', 'sent2'], 'rhs': 'int15'}, {'lhs': ['int10', 'int12', 'sent2'], 'rhs': 'int16'}, {'lhs': ['int13', 'int7', 'int9'], 'rhs': 'int17'}, {'lhs': ['int11', 'int15'], 'rhs': 'int18'}, {'lhs': ['int14', 'int16', 'int18'], 'rhs': 'int19'}, {'lhs': ['int17', 'int19', 'sent7'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent4']}, {'int': 'int2', 'ancestors': ['sent2', 'sent5']}, {'int': 'int3', 'ancestors': ['sent2', 'sent5']}, {'int': 'int4', 'ancestors': ['sent2', 'sent5']}, {'int': 'int5', 'ancestors': ['sent2', 'sent5']}, {'int': 'int6', 'ancestors': ['sent6', 'sent2', 'sent4']}, {'int': 'int7', 'ancestors': ['sent6', 'sent2', 'sent4']}, {'int': 'int8', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5']}, {'int': 'int9', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5']}, {'int': 'int10', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5']}, {'int': 'int11', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5']}, {'int': 'int12', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5']}, {'int': 'int13', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5']}, {'int': 'int14', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent4', 'sent7']}, {'int': 'int15', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent4']}, {'int': 'int16', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent4']}, {'int': 'int17', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5']}, {'int': 'int18', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent4']}, {'int': 'int19', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent4', 'sent7']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent4', 'sent7']}]
	relevant_sentences:{'sent6', 'sent2', 'sent5', 'sent4', 'sent7'}
	id_to_int:{'int1': 'then add the 25% fee and the $300 delivery fee to the final price to find the total cost of his groceries', 'int2': 'then add the $300 delivery fee and the $200 delivery fee to the final price to find the total cost of his groceries', 'int3': 'then add the $300 delivery fee and the $200 delivery fee to find the total cost of his groceries', 'int4': 'then add the $300 delivery fee and the $2500 fee to find the total cost of his groceries', 'int5': 'then add the $300 delivery fee and the $200 delivery fee to the final price to find the total cost of his groceries after the fees', 'int6': 'then subtract the $400 tip from the final price to find the cost of his groceries after the fees', 'int7': 'then subtract the $400 tip from the final price to find the total cost of his groceries', 'int8': 'then subtract the $400 tip from the final price to find the total cost of his groceries after the fees', 'int9': 'then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost before the fees', 'int10': 'then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for his groceries', 'int11': 'then multiply the total cost of his groceries by the amount he spent on tips to find the final price', 'int12': 'then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for them', 'int13': 'now subtract the $400 tip from the final price to find the total cost of his groceries after the fees', 'int14': 'finally, subtract the $400 tip from the final price to find the difference between the final price and the cost he paid for his groceries', 'int15': 'now subtract the $400 tip from the final price to find the difference between the final price and the cost he paid for his groceries', 'int16': 'now subtract the cost of his groceries from the final price to find the difference between the final price and the cost he paid for them', 'int17': 'now subtract the cost of his groceries from the difference between the final price and the cost before the fees to find the final price', 'int18': 'now subtract the cost of his groceries from the difference between the final price and the cost after the fees to find the final price', 'int19': 'now find the final price of his groceries by adding the cost of his groceries to the difference between the final price and the cost after the fees to find the final price', 'hypothesis': 'the answer is 57'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent4 -> int1: He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00
step_parts:['sent2 & sent4 -> int1', " He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00"]
lhs_ids:['sent2', 'sent4']	 rhs = int1	 all_ancestors={'sent2', 'sent4'}
	 rhs = int1, int_str=he spent $4000 on groceries but they charged him a 25% fee so that's 40*25 = $1000
step: sent5 & sent6 -> int2: There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees
step_parts:['sent5 & sent6 -> int2', ' There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees']
lhs_ids:['sent5', 'sent6']	 rhs = int2	 all_ancestors={'sent6', 'sent5'}
	 rhs = int2, int_str=there is also a $300 delivery fee and a $400 tip for an extra $3 + $4 = $700 in fees
step: int1 & int2 -> int3: His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00
step_parts:['int1 & int2 -> int3', " His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00"]
lhs_ids:['int1', 'int2']	 rhs = int3	 all_ancestors={'sent6', 'sent2', 'sent4', 'sent5'}
	 rhs = int3, int_str=his groceries were $4000, there's a $1000 fee plus another $700 in delivery/tip fees for a final total of $40 + $10 + $7 = $5700
step: int3 & sent7 -> hypothesis
step_parts:['int3 & sent7 -> hypothesis']
lhs_ids:['int3', 'sent7']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent2', 'sent5', 'sent4', 'sent7'}
	 rhs = hypothesis, int_str=the answer is 57
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent4 -> int1: He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00; sent5 & sent6 -> int2: There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees; int1 & int2 -> int3: His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00; int3 & sent7 -> hypothesis;
	sentences:['sent2 & sent4 -> int1', 'sent5 & sent6 -> int2', 'int1 & int2 -> int3', 'int3 & sent7 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent4'], 'rhs': 'int1'}, {'lhs': ['sent5', 'sent6'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent7'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent4']}, {'int': 'int2', 'ancestors': ['sent6', 'sent5']}, {'int': 'int3', 'ancestors': ['sent6', 'sent2', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent2', 'sent5', 'sent4', 'sent7']}]
	relevant_sentences:{'sent6', 'sent2', 'sent5', 'sent4', 'sent7'}
	id_to_int:{'int1': "he spent $4000 on groceries but they charged him a 25% fee so that's 40*25 = $1000", 'int2': 'there is also a $300 delivery fee and a $400 tip for an extra $3 + $4 = $700 in fees', 'int3': "his groceries were $4000, there's a $1000 fee plus another $700 in delivery/tip fees for a final total of $40 + $10 + $7 = $5700", 'hypothesis': 'the answer is 57'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'int3', 'int4': 'int3', 'int5': 'int3', 'int6': 'int3', 'int7': 'int3', 'int8': 'int3', 'int9': 'int3', 'int10': 'int3', 'int11': 'int3', 'int12': 'int3', 'int13': 'int3', 'int14': 'hypothesis', 'int15': 'int3', 'int16': 'int3', 'int17': 'int3', 'int18': 'int3', 'int19': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'int3', 'int4': 'int3', 'int5': 'int3', 'int6': 'int3', 'int7': 'int3', 'int8': 'int3', 'int9': 'int3', 'int10': 'int3', 'int11': 'int3', 'int12': 'int3', 'int13': 'int3', 'int14': 'hypothesis', 'int15': 'int3', 'int16': 'int3', 'int17': 'int3', 'int18': 'int3', 'int19': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent6', 'sent2', 'sent5', 'sent4', 'sent7'}
relevant_sentences_gold:{'sent6', 'sent2', 'sent5', 'sent4', 'sent7'}
		sentences:['sent2', 'sent4', 'sent5', 'sent6', 'sent7']
		sentences_gold:['sent2', 'sent4', 'sent5', 'sent6', 'sent7']
		sentences:['hypothesis & int3 & int3 -> hypothesis', 'hypothesis & int3 & sent7 -> hypothesis', 'int1 & sent2 & sent6 -> int3', 'int1 & sent2 & sent6 -> int3', 'int3 & int3 & int3 & int3 -> int3', 'int3 & int3 & int3 -> int3', 'int3 & int3 & sent2 -> int3', 'int3 & int3 & sent2 -> int3', 'int3 & int3 & sent2 -> int3', 'int3 & int3 & sent2 -> int3', 'int3 & int3 & sent2 -> int3', 'int3 & int3 & sent2 -> int3', 'int3 & int3 & sent2 -> int3', 'int3 & int3 -> int3', 'int3 & sent2 & sent7 -> hypothesis', 'sent2 & sent4 -> int1', 'sent2 & sent5 -> int3', 'sent2 & sent5 -> int3', 'sent2 & sent5 -> int3', 'sent2 & sent5 -> int3']
		sentences_gold:['int1 & int2 -> int3', 'int3 & sent7 -> hypothesis', 'sent2 & sent4 -> int1', 'sent5 & sent6 -> int2']
step:sent2 & sent4 -> int1: He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00
QID:GSM8K_58_ee1c753c43
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00", 'int2': 'There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees', 'int3': "His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00", 'hypothesis': 'The answer is 57'}
step:sent2 & sent4 -> int1: He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00
QID:GSM8K_58_ee1c753c43
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00", 'int2': 'There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees', 'int3': "His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00", 'hypothesis': 'The answer is 57'}
step:sent2 & sent4 -> int1: He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00
step:sent5 & sent6 -> int2: There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees
QID:GSM8K_58_ee1c753c43
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00", 'int2': 'There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees', 'int3': "His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00", 'hypothesis': 'The answer is 57'}
step:sent5 & sent6 -> int2: There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees
QID:GSM8K_58_ee1c753c43
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00", 'int2': 'There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees', 'int3': "His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00", 'hypothesis': 'The answer is 57'}
step:sent5 & sent6 -> int2: There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees
step:int1 & int2 -> int3: His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00
QID:GSM8K_58_ee1c753c43
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00", 'int2': 'There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees', 'int3': "His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00", 'hypothesis': 'The answer is 57'}
step:int1 & int2 -> int3: His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00
QID:GSM8K_58_ee1c753c43
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00", 'int2': 'There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees', 'int3': "His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00", 'hypothesis': 'The answer is 57'}
step:int1 & int2 -> int3: His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00
step:int3 & sent7 -> hypothesis
QID:GSM8K_58_ee1c753c43
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00", 'int2': 'There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees', 'int3': "His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00", 'hypothesis': 'The answer is 57'}
step:int3 & sent7 -> hypothesis
QID:GSM8K_58_ee1c753c43
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "He spent $40.00 on groceries but they charged him a 25% fee so that's 40*.25 = $10.00", 'int2': 'There is also a $3.00 delivery fee and a $4.00 tip for an extra $3 + $4 = $7.00 in fees', 'int3': "His groceries were $40.00, there's a $10.00 fee plus another $7.00 in delivery/tip fees for a final total of $40 + $10 + $7 = $57.00", 'hypothesis': 'The answer is 57'}
step:int3 & sent7 -> hypothesis
step:sent4 & sent2 -> int1: Then add the 25% fee and the $3.00 delivery fee to the final price to find the total cost of his groceries.
step:sent5 & sent2 -> int2: Then add the $3.00 delivery fee and the $2.00 delivery fee to the final price to find the total cost of his groceries.
step:sent2 & sent5 -> int3: Then add the $3.00 delivery fee and the $2.00 delivery fee to find the total cost of his groceries.
step:sent2 & sent5 -> int4: Then add the $3.00 delivery fee and the $25.00 fee to find the total cost of his groceries.
step:sent2 & sent5 -> int5: Then add the $3.00 delivery fee and the $2.00 delivery fee to the final price to find the total cost of his groceries after the fees.
step:sent6 & sent2 & int1 -> int6: Then subtract the $4.00 tip from the final price to find the cost of his groceries after the fees.
step:sent2 & int1 & sent6 -> int7: Then subtract the $4.00 tip from the final price to find the total cost of his groceries.
step:int6 & int4 & int2 & int3 -> int8: Then subtract the $4.00 tip from the final price to find the total cost of his groceries after the fees.
step:int8 & int5 & sent2 -> int9: Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost before the fees.
step:int8 & int5 & sent2 -> int10: Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for his groceries.
step:int8 & int5 & sent2 -> int11: Then multiply the total cost of his groceries by the amount he spent on tips to find the final price.
step:int8 & int5 & sent2 -> int12: Then multiply the total cost of his groceries by the amount he spent on tips to find the difference between the final price and the cost he paid for them.
step:int5 & int8 & sent2 -> int13: Now subtract the $4.00 tip from the final price to find the total cost of his groceries after the fees.
step:int10 & sent7 & sent2 -> int14: Finally, subtract the $4.00 tip from the final price to find the difference between the final price and the cost he paid for his groceries.
step:int10 & sent2 & int12 -> int15: Now subtract the $4.00 tip from the final price to find the difference between the final price and the cost he paid for his groceries.
step:int10 & sent2 & int12 -> int16: Now subtract the cost of his groceries from the final price to find the difference between the final price and the cost he paid for them.
step:int13 & int9 & int7 -> int17: Now subtract the cost of his groceries from the difference between the final price and the cost before the fees to find the final price.
step:int15 & int11 -> int18: Now subtract the cost of his groceries from the difference between the final price and the cost after the fees to find the final price.
step:int16 & int14 & int18 -> int19: Now find the final price of his groceries by adding the cost of his groceries to the difference between the final price and the cost after the fees to find the final price.
step:int17 & sent7 & int19 -> hypothesis



======================

pred:sent1 -> int1: First find the total number of raspberries: 6 clusters * 20 fruit/cluster = 60 fruit; sent2 & int1 & sent3 -> int2: Then add the number of individual fruit to find the total number of raspberries: 60 fruit + 67 fruit = 187 raspberries; int2 & sent3 -> hypothesis
gold:sent1 -> int1: First find the number of fruit in clusters: 20 fruit/cluster * 6 clusters = 120 fruit; int1 & sent2 -> int2: Then add the number of individual fruit to find the total number of fruit: 120 fruit + 67 fruit = 187 fruit; int2 & sent3 -> hypothesis;



======================

Reading predicted proof
step:sent1 -> int1: First find the total number of raspberries: 6 clusters * 20 fruit/cluster = 60 fruit
step_parts:['sent1 -> int1', ' First find the total number of raspberries', ' 6 clusters * 20 fruit/cluster = 60 fruit']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=
step: sent2 & int1 & sent3 -> int2: Then add the number of individual fruit to find the total number of raspberries: 60 fruit + 67 fruit = 187 raspberries
step_parts:['sent2 & int1 & sent3 -> int2', ' Then add the number of individual fruit to find the total number of raspberries', ' 60 fruit + 67 fruit = 187 raspberries']
lhs_ids:['sent2', 'int1', 'sent3']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=
step: int2 & sent3 -> hypothesis
step_parts:['int2 & sent3 -> hypothesis']
lhs_ids:['int2', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 187
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: First find the total number of raspberries: 6 clusters * 20 fruit/cluster = 60 fruit; sent2 & int1 & sent3 -> int2: Then add the number of individual fruit to find the total number of raspberries: 60 fruit + 67 fruit = 187 raspberries; int2 & sent3 -> hypothesis
	sentences:['sent1 -> int1', 'int1 & sent2 & sent3 -> int2', 'int2 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': '', 'int2': '', 'hypothesis': 'the answer is 187'}



||||||||||||||||||||||

Reading gold proof
step:sent1 -> int1: First find the number of fruit in clusters: 20 fruit/cluster * 6 clusters = 120 fruit
step_parts:['sent1 -> int1', ' First find the number of fruit in clusters', ' 20 fruit/cluster * 6 clusters = 120 fruit']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=
step: int1 & sent2 -> int2: Then add the number of individual fruit to find the total number of fruit: 120 fruit + 67 fruit = 187 fruit
step_parts:['int1 & sent2 -> int2', ' Then add the number of individual fruit to find the total number of fruit', ' 120 fruit + 67 fruit = 187 fruit']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=
step: int2 & sent3 -> hypothesis
step_parts:['int2 & sent3 -> hypothesis']
lhs_ids:['int2', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 187
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: First find the number of fruit in clusters: 20 fruit/cluster * 6 clusters = 120 fruit; int1 & sent2 -> int2: Then add the number of individual fruit to find the total number of fruit: 120 fruit + 67 fruit = 187 fruit; int2 & sent3 -> hypothesis;
	sentences:['sent1 -> int1', 'int1 & sent2 -> int2', 'int2 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': '', 'int2': '', 'hypothesis': 'the answer is 187'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3'}
		sentences:['sent1', 'sent2', 'sent3']
		sentences_gold:['sent1', 'sent2', 'sent3']
		sentences:['hypothesis & sent3 -> hypothesis', 'int1 & sent2 & sent3 -> hypothesis', 'sent1 -> int1']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & sent3 -> hypothesis', 'sent1 -> int1']
step:sent1 -> int1: First find the number of fruit in clusters: 20 fruit/cluster * 6 clusters = 120 fruit
QID:GSM8K_59_d2005757cb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the number of fruit in clusters', 'int2': 'Then add the number of individual fruit to find the total number of fruit', 'hypothesis': 'The answer is 187'}
step:sent1 -> int1: First find the number of fruit in clusters: 20 fruit/cluster * 6 clusters = 120 fruit
step:int1 & sent2 -> int2: Then add the number of individual fruit to find the total number of fruit: 120 fruit + 67 fruit = 187 fruit
QID:GSM8K_59_d2005757cb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the number of fruit in clusters', 'int2': 'Then add the number of individual fruit to find the total number of fruit', 'hypothesis': 'The answer is 187'}
step:int1 & sent2 -> int2: Then add the number of individual fruit to find the total number of fruit: 120 fruit + 67 fruit = 187 fruit
QID:GSM8K_59_d2005757cb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the number of fruit in clusters', 'int2': 'Then add the number of individual fruit to find the total number of fruit', 'hypothesis': 'The answer is 187'}
step:int1 & sent2 -> int2: Then add the number of individual fruit to find the total number of fruit: 120 fruit + 67 fruit = 187 fruit
step:int2 & sent3 -> hypothesis
QID:GSM8K_59_d2005757cb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the number of fruit in clusters', 'int2': 'Then add the number of individual fruit to find the total number of fruit', 'hypothesis': 'The answer is 187'}
step:int2 & sent3 -> hypothesis
QID:GSM8K_59_d2005757cb
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find the number of fruit in clusters', 'int2': 'Then add the number of individual fruit to find the total number of fruit', 'hypothesis': 'The answer is 187'}
step:int2 & sent3 -> hypothesis
step:sent1 -> int1: First find the total number of raspberries: 6 clusters * 20 fruit/cluster = 60 fruit
step:sent2 & int1 & sent3 -> int2: Then add the number of individual fruit to find the total number of raspberries: 60 fruit + 67 fruit = 187 raspberries
step:int2 & sent3 -> hypothesis



======================

pred:sent1 -> int1: There are 25 - 1 = 15 oranges that are good.; sent1 -> int2: There are 25 - 20 = 24 unripe oranges.; int2 & sent1 & int1 & sent2 -> int3: Therefore, 25 - 15 - 24 - 2 = 17 oranges are good.; int3 & sent2 -> hypothesis
gold:sent1 -> int1: 20% of 25 oranges is (20/100)*25 = 5 oranges; int1 & sent1 -> int2: The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges; int1 & int2 & sent1 & sent2 -> int3: The rest which is 25-8 = 17 oranges are good; int3 & sent2 -> hypothesis;



======================

Reading predicted proof
step:sent1 -> int1: There are 25 - 1 = 15 oranges that are good.
step_parts:['sent1 -> int1', ' There are 25 - 1 = 15 oranges that are good.']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=there are 25 - 1 = 15 oranges that are good
step: sent1 -> int2: There are 25 - 20 = 24 unripe oranges.
step_parts:['sent1 -> int2', ' There are 25 - 20 = 24 unripe oranges.']
lhs_ids:['sent1']	 rhs = int2	 all_ancestors={'sent1'}
	 rhs = int2, int_str=there are 25 - 20 = 24 unripe oranges
step: int2 & sent1 & int1 & sent2 -> int3: Therefore, 25 - 15 - 24 - 2 = 17 oranges are good.
step_parts:['int2 & sent1 & int1 & sent2 -> int3', ' Therefore, 25 - 15 - 24 - 2 = 17 oranges are good.']
lhs_ids:['int2', 'sent1', 'int1', 'sent2']	 rhs = int3	 all_ancestors={'sent1', 'sent2'}
	 rhs = int3, int_str=therefore, 25 - 15 - 24 - 2 = 17 oranges are good
step: int3 & sent2 -> hypothesis
step_parts:['int3 & sent2 -> hypothesis']
lhs_ids:['int3', 'sent2']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 17
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: There are 25 - 1 = 15 oranges that are good.; sent1 -> int2: There are 25 - 20 = 24 unripe oranges.; int2 & sent1 & int1 & sent2 -> int3: Therefore, 25 - 15 - 24 - 2 = 17 oranges are good.; int3 & sent2 -> hypothesis
	sentences:['sent1 -> int1', 'sent1 -> int2', 'int1 & int2 & sent1 & sent2 -> int3', 'int3 & sent2 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['sent1'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent1', 'sent2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent2'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2'}
	id_to_int:{'int1': 'there are 25 - 1 = 15 oranges that are good', 'int2': 'there are 25 - 20 = 24 unripe oranges', 'int3': 'therefore, 25 - 15 - 24 - 2 = 17 oranges are good', 'hypothesis': 'the answer is 17'}



||||||||||||||||||||||

Reading gold proof
step:sent1 -> int1: 20% of 25 oranges is (20/100)*25 = 5 oranges
step_parts:['sent1 -> int1', ' 20% of 25 oranges is (20/100)*25 = 5 oranges']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=20% of 25 oranges is (20/100)*25 = 5 oranges
step: int1 & sent1 -> int2: The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges
step_parts:['int1 & sent1 -> int2', ' The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent1'}
	 rhs = int2, int_str=the total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges
step: int1 & int2 & sent1 & sent2 -> int3: The rest which is 25-8 = 17 oranges are good
step_parts:['int1 & int2 & sent1 & sent2 -> int3', ' The rest which is 25-8 = 17 oranges are good']
lhs_ids:['int1', 'int2', 'sent1', 'sent2']	 rhs = int3	 all_ancestors={'sent1', 'sent2'}
	 rhs = int3, int_str=the rest which is 25-8 = 17 oranges are good
step: int3 & sent2 -> hypothesis
step_parts:['int3 & sent2 -> hypothesis']
lhs_ids:['int3', 'sent2']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 17
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: 20% of 25 oranges is (20/100)*25 = 5 oranges; int1 & sent1 -> int2: The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges; int1 & int2 & sent1 & sent2 -> int3: The rest which is 25-8 = 17 oranges are good; int3 & sent2 -> hypothesis;
	sentences:['sent1 -> int1', 'int1 & sent1 -> int2', 'int1 & int2 & sent1 & sent2 -> int3', 'int3 & sent2 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent1', 'sent2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent2'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2'}
	id_to_int:{'int1': '20% of 25 oranges is (20/100)*25 = 5 oranges', 'int2': 'the total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges', 'int3': 'the rest which is 25-8 = 17 oranges are good', 'hypothesis': 'the answer is 17'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int3', 'hypothesis': 'int3'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int3', 'hypothesis': 'int3'}
relevant_sentences_pred:{'sent1', 'sent2'}
relevant_sentences_gold:{'sent1', 'sent2'}
		sentences:['sent1', 'sent2']
		sentences_gold:['sent1', 'sent2']
		sentences:['int1 & int1 & sent1 & sent2 -> int3', 'int3 & sent2 -> int3', 'sent1 -> int1', 'sent1 -> int1']
		sentences_gold:['int1 & int2 & sent1 & sent2 -> int3', 'int1 & sent1 -> int2', 'int3 & sent2 -> hypothesis', 'sent1 -> int1']
step:sent1 -> int1: 20% of 25 oranges is (20/100)*25 = 5 oranges
QID:GSM8K_60_b4dc5170cd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '20% of 25 oranges is (20/100)*25 = 5 oranges', 'int2': 'The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges', 'int3': 'The rest which is 25-8 = 17 oranges are good', 'hypothesis': 'The answer is 17'}
step:sent1 -> int1: 20% of 25 oranges is (20/100)*25 = 5 oranges
step:int1 & sent1 -> int2: The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges
QID:GSM8K_60_b4dc5170cd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '20% of 25 oranges is (20/100)*25 = 5 oranges', 'int2': 'The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges', 'int3': 'The rest which is 25-8 = 17 oranges are good', 'hypothesis': 'The answer is 17'}
step:int1 & sent1 -> int2: The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges
QID:GSM8K_60_b4dc5170cd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '20% of 25 oranges is (20/100)*25 = 5 oranges', 'int2': 'The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges', 'int3': 'The rest which is 25-8 = 17 oranges are good', 'hypothesis': 'The answer is 17'}
step:int1 & sent1 -> int2: The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges
step:int1 & int2 & sent1 & sent2 -> int3: The rest which is 25-8 = 17 oranges are good
QID:GSM8K_60_b4dc5170cd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '20% of 25 oranges is (20/100)*25 = 5 oranges', 'int2': 'The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges', 'int3': 'The rest which is 25-8 = 17 oranges are good', 'hypothesis': 'The answer is 17'}
step:int1 & int2 & sent1 & sent2 -> int3: The rest which is 25-8 = 17 oranges are good
QID:GSM8K_60_b4dc5170cd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '20% of 25 oranges is (20/100)*25 = 5 oranges', 'int2': 'The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges', 'int3': 'The rest which is 25-8 = 17 oranges are good', 'hypothesis': 'The answer is 17'}
step:int1 & int2 & sent1 & sent2 -> int3: The rest which is 25-8 = 17 oranges are good
QID:GSM8K_60_b4dc5170cd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '20% of 25 oranges is (20/100)*25 = 5 oranges', 'int2': 'The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges', 'int3': 'The rest which is 25-8 = 17 oranges are good', 'hypothesis': 'The answer is 17'}
step:int1 & int2 & sent1 & sent2 -> int3: The rest which is 25-8 = 17 oranges are good
QID:GSM8K_60_b4dc5170cd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '20% of 25 oranges is (20/100)*25 = 5 oranges', 'int2': 'The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges', 'int3': 'The rest which is 25-8 = 17 oranges are good', 'hypothesis': 'The answer is 17'}
step:int1 & int2 & sent1 & sent2 -> int3: The rest which is 25-8 = 17 oranges are good
step:int3 & sent2 -> hypothesis
QID:GSM8K_60_b4dc5170cd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '20% of 25 oranges is (20/100)*25 = 5 oranges', 'int2': 'The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges', 'int3': 'The rest which is 25-8 = 17 oranges are good', 'hypothesis': 'The answer is 17'}
step:int3 & sent2 -> hypothesis
QID:GSM8K_60_b4dc5170cd
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': '20% of 25 oranges is (20/100)*25 = 5 oranges', 'int2': 'The total number of bad, unripe and sour oranges is therefore 1+5+2 = 8 oranges', 'int3': 'The rest which is 25-8 = 17 oranges are good', 'hypothesis': 'The answer is 17'}
step:int3 & sent2 -> hypothesis
step:sent1 -> int1: There are 25 - 1 = 15 oranges that are good.
step:sent1 -> int2: There are 25 - 20 = 24 unripe oranges.
step:int2 & sent1 & int1 & sent2 -> int3: Therefore, 25 - 15 - 24 - 2 = 17 oranges are good.
step:int3 & sent2 -> hypothesis



======================

pred:sent2 & sent3 -> int1: She spends $800 + $500 = $1200 for the material.; sent4 & sent2 -> int2: Then she pays another $500 * 0.10 = $120 for the insurance.; int2 & int1 -> int3: So she pays a total of $1200 + $120 = $1430.; sent5 & int3 -> hypothesis
gold:sent2 & sent3 -> int1: The total cost of the broch was 500+800=$1300; int1 & sent4 -> int2: The insurance was 1300*.1=$130; int1 & int2 -> int3: So she pays 1300+130=$1430; int3 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent3 -> int1: She spends $800 + $500 = $1200 for the material.
step_parts:['sent2 & sent3 -> int1', ' She spends $800 + $500 = $1200 for the material.']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=she spends $800 + $500 = $1200 for the material
step: sent4 & sent2 -> int2: Then she pays another $500 * 0.10 = $120 for the insurance.
step_parts:['sent4 & sent2 -> int2', ' Then she pays another $500 * 0.10 = $120 for the insurance.']
lhs_ids:['sent4', 'sent2']	 rhs = int2	 all_ancestors={'sent2', 'sent4'}
	 rhs = int2, int_str=then she pays another $500 * 010 = $120 for the insurance
step: int2 & int1 -> int3: So she pays a total of $1200 + $120 = $1430.
step_parts:['int2 & int1 -> int3', ' So she pays a total of $1200 + $120 = $1430.']
lhs_ids:['int2', 'int1']	 rhs = int3	 all_ancestors={'sent2', 'sent4', 'sent3'}
	 rhs = int3, int_str=so she pays a total of $1200 + $120 = $1430
step: sent5 & int3 -> hypothesis
step_parts:['sent5 & int3 -> hypothesis']
lhs_ids:['sent5', 'int3']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 1430
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: She spends $800 + $500 = $1200 for the material.; sent4 & sent2 -> int2: Then she pays another $500 * 0.10 = $120 for the insurance.; int2 & int1 -> int3: So she pays a total of $1200 + $120 = $1430.; sent5 & int3 -> hypothesis
	sentences:['sent2 & sent3 -> int1', 'sent2 & sent4 -> int2', 'int1 & int2 -> int3', 'int3 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent4']}, {'int': 'int3', 'ancestors': ['sent2', 'sent4', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'she spends $800 + $500 = $1200 for the material', 'int2': 'then she pays another $500 * 010 = $120 for the insurance', 'int3': 'so she pays a total of $1200 + $120 = $1430', 'hypothesis': 'the answer is 1430'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent3 -> int1: The total cost of the broch was 500+800=$1300
step_parts:['sent2 & sent3 -> int1', ' The total cost of the broch was 500+800=$1300']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=the total cost of the broch was 500+800=$1300
step: int1 & sent4 -> int2: The insurance was 1300*.1=$130
step_parts:['int1 & sent4 -> int2', ' The insurance was 1300*.1=$130']
lhs_ids:['int1', 'sent4']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int2, int_str=the insurance was 1300*1=$130
step: int1 & int2 -> int3: So she pays 1300+130=$1430
step_parts:['int1 & int2 -> int3', ' So she pays 1300+130=$1430']
lhs_ids:['int1', 'int2']	 rhs = int3	 all_ancestors={'sent2', 'sent4', 'sent3'}
	 rhs = int3, int_str=so she pays 1300+130=$1430
step: int3 & sent5 -> hypothesis
step_parts:['int3 & sent5 -> hypothesis']
lhs_ids:['int3', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 1430
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: The total cost of the broch was 500+800=$1300; int1 & sent4 -> int2: The insurance was 1300*.1=$130; int1 & int2 -> int3: So she pays 1300+130=$1430; int3 & sent5 -> hypothesis;
	sentences:['sent2 & sent3 -> int1', 'int1 & sent4 -> int2', 'int1 & int2 -> int3', 'int3 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'int3', 'ancestors': ['sent2', 'sent4', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'the total cost of the broch was 500+800=$1300', 'int2': 'the insurance was 1300*1=$130', 'int3': 'so she pays 1300+130=$1430', 'hypothesis': 'the answer is 1430'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int2', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'int3': 'int2', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4', 'sent5'}
relevant_sentences_gold:{'sent2', 'sent3', 'sent4', 'sent5'}
		sentences:['sent2', 'sent3', 'sent4', 'sent5']
		sentences_gold:['sent2', 'sent3', 'sent4', 'sent5']
		sentences:['int1 & int2 -> int2', 'int2 & sent5 -> hypothesis', 'sent2 & sent3 -> int1', 'sent2 & sent4 -> int2']
		sentences_gold:['int1 & int2 -> int3', 'int1 & sent4 -> int2', 'int3 & sent5 -> hypothesis', 'sent2 & sent3 -> int1']
step:sent2 & sent3 -> int1: The total cost of the broch was 500+800=$1300
QID:GSM8K_61_6e93c38f35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total cost of the broch was 500+800=$1300', 'int2': 'The insurance was 1300*.1=$130', 'int3': 'So she pays 1300+130=$1430', 'hypothesis': 'The answer is 1430'}
step:sent2 & sent3 -> int1: The total cost of the broch was 500+800=$1300
QID:GSM8K_61_6e93c38f35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total cost of the broch was 500+800=$1300', 'int2': 'The insurance was 1300*.1=$130', 'int3': 'So she pays 1300+130=$1430', 'hypothesis': 'The answer is 1430'}
step:sent2 & sent3 -> int1: The total cost of the broch was 500+800=$1300
step:int1 & sent4 -> int2: The insurance was 1300*.1=$130
QID:GSM8K_61_6e93c38f35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total cost of the broch was 500+800=$1300', 'int2': 'The insurance was 1300*.1=$130', 'int3': 'So she pays 1300+130=$1430', 'hypothesis': 'The answer is 1430'}
step:int1 & sent4 -> int2: The insurance was 1300*.1=$130
QID:GSM8K_61_6e93c38f35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total cost of the broch was 500+800=$1300', 'int2': 'The insurance was 1300*.1=$130', 'int3': 'So she pays 1300+130=$1430', 'hypothesis': 'The answer is 1430'}
step:int1 & sent4 -> int2: The insurance was 1300*.1=$130
step:int1 & int2 -> int3: So she pays 1300+130=$1430
QID:GSM8K_61_6e93c38f35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total cost of the broch was 500+800=$1300', 'int2': 'The insurance was 1300*.1=$130', 'int3': 'So she pays 1300+130=$1430', 'hypothesis': 'The answer is 1430'}62it [29:50, 29.81s/it]63it [30:29, 32.44s/it]64it [30:54, 30.43s/it]65it [31:27, 31.19s/it]66it [31:48, 28.08s/it]67it [32:30, 32.18s/it]68it [32:58, 30.89s/it]69it [33:19, 27.88s/it]70it [33:52, 29.69s/it]71it [34:12, 26.62s/it]72it [34:57, 32.13s/it]73it [35:29, 32.09s/it]74it [36:01, 32.10s/it]75it [36:33, 32.10s/it]75it [36:33, 29.25s/it]
INFO:__main__:    Aggregated metrics:
INFO:__main__:       QAHC->P: {'counter': 75, 'proof-leaves': {'acc': 0.76, 'F1': 0.961372331372331, 'P': 0.9823333333333333, 'R': 0.9504126984126983}, 'proof-steps': {'acc': 0.0, 'F1': 0.2338889998889999, 'P': 0.23782539682539677, 'R': 0.240047619047619}, 'proof-intermediates': {'ROUGE_L_F': 0.4061512698412698, 'ROUGE_L_F_perfect_align': 0.3655258730158729, 'BLEURT': -0.405483831002244, 'BLEURT_P': 0.19925396825396827, 'BLEURT_R': 0.19447619047619047, 'BLEURT_F1': 0.1918918118918119, 'BLEURT_perfect_align': -0.3515334109258913, 'BLEURT_acc': 0.0, 'BLEURT_acc_perfect_align': 0.14666666666666667, 'fraction_perfect_align': 0.6870317460317459}, 'proof-overall': {'acc': 0.0, 'acc_perfect_align': 0.0}}

step:int1 & int2 -> int3: So she pays 1300+130=$1430
QID:GSM8K_61_6e93c38f35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total cost of the broch was 500+800=$1300', 'int2': 'The insurance was 1300*.1=$130', 'int3': 'So she pays 1300+130=$1430', 'hypothesis': 'The answer is 1430'}
step:int1 & int2 -> int3: So she pays 1300+130=$1430
step:int3 & sent5 -> hypothesis
QID:GSM8K_61_6e93c38f35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total cost of the broch was 500+800=$1300', 'int2': 'The insurance was 1300*.1=$130', 'int3': 'So she pays 1300+130=$1430', 'hypothesis': 'The answer is 1430'}
step:int3 & sent5 -> hypothesis
QID:GSM8K_61_6e93c38f35
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The total cost of the broch was 500+800=$1300', 'int2': 'The insurance was 1300*.1=$130', 'int3': 'So she pays 1300+130=$1430', 'hypothesis': 'The answer is 1430'}
step:int3 & sent5 -> hypothesis
step:sent2 & sent3 -> int1: She spends $800 + $500 = $1200 for the material.
step:sent4 & sent2 -> int2: Then she pays another $500 * 0.10 = $120 for the insurance.
step:int2 & int1 -> int3: So she pays a total of $1200 + $120 = $1430.
step:sent5 & int3 -> hypothesis



======================

pred:sent3 & sent4 -> int1: If Marcy worked for 40 years, she will get 40*.5=$20,000; sent4 & sent2 & sent5 -> int2: If she quits after 30 years, her annual pension will be $50,000-$30,000=$25,000; int2 & sent5 & int1 -> hypothesis
gold:sent3 & sent4 -> int1: First find how many years Marcy works after 20 years: 30 years - 20 years = 10 years; int1 & sent3 -> int2: Then multiply that number by the amount of her pension she gets per year: 10 years * 5% = 50%; int2 & sent2 -> int3: Then multiply that percentage by the total amount of the full pension to find how much she gets: $50,000 * 50% = $25,000; int3 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent4 -> int1: If Marcy worked for 40 years, she will get 40*.5=$20,000
step_parts:['sent3 & sent4 -> int1', ' If Marcy worked for 40 years, she will get 40*.5=$20,000']
lhs_ids:['sent3', 'sent4']	 rhs = int1	 all_ancestors={'sent3', 'sent4'}
	 rhs = int1, int_str=if marcy worked for 40 years, she will get 40*5=$20,000
step: sent4 & sent2 & sent5 -> int2: If she quits after 30 years, her annual pension will be $50,000-$30,000=$25,000
step_parts:['sent4 & sent2 & sent5 -> int2', ' If she quits after 30 years, her annual pension will be $50,000-$30,000=$25,000']
lhs_ids:['sent4', 'sent2', 'sent5']	 rhs = int2	 all_ancestors={'sent2', 'sent4', 'sent5'}
	 rhs = int2, int_str=if she quits after 30 years, her annual pension will be $50,000-$30,000=$25,000
step: int2 & sent5 & int1 -> hypothesis
step_parts:['int2 & sent5 & int1 -> hypothesis']
lhs_ids:['int2', 'sent5', 'int1']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 25000
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent4 -> int1: If Marcy worked for 40 years, she will get 40*.5=$20,000; sent4 & sent2 & sent5 -> int2: If she quits after 30 years, her annual pension will be $50,000-$30,000=$25,000; int2 & sent5 & int1 -> hypothesis
	sentences:['sent3 & sent4 -> int1', 'sent2 & sent4 & sent5 -> int2', 'int1 & int2 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent4'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent4', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3', 'sent4']}, {'int': 'int2', 'ancestors': ['sent2', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'if marcy worked for 40 years, she will get 40*5=$20,000', 'int2': 'if she quits after 30 years, her annual pension will be $50,000-$30,000=$25,000', 'hypothesis': 'the answer is 25000'}



||||||||||||||||||||||

Reading gold proof
step:sent3 & sent4 -> int1: First find how many years Marcy works after 20 years: 30 years - 20 years = 10 years
step_parts:['sent3 & sent4 -> int1', ' First find how many years Marcy works after 20 years', ' 30 years - 20 years = 10 years']
lhs_ids:['sent3', 'sent4']	 rhs = int1	 all_ancestors={'sent3', 'sent4'}
	 rhs = int1, int_str=
step: int1 & sent3 -> int2: Then multiply that number by the amount of her pension she gets per year: 10 years * 5% = 50%
step_parts:['int1 & sent3 -> int2', ' Then multiply that number by the amount of her pension she gets per year', ' 10 years * 5% = 50%']
lhs_ids:['int1', 'sent3']	 rhs = int2	 all_ancestors={'sent3', 'sent4'}
	 rhs = int2, int_str=
step: int2 & sent2 -> int3: Then multiply that percentage by the total amount of the full pension to find how much she gets: $50,000 * 50% = $25,000
step_parts:['int2 & sent2 -> int3', ' Then multiply that percentage by the total amount of the full pension to find how much she gets', ' $50,000 * 50% = $25,000']
lhs_ids:['int2', 'sent2']	 rhs = int3	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int3, int_str=
step: int3 & sent5 -> hypothesis
step_parts:['int3 & sent5 -> hypothesis']
lhs_ids:['int3', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 25000
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent4 -> int1: First find how many years Marcy works after 20 years: 30 years - 20 years = 10 years; int1 & sent3 -> int2: Then multiply that number by the amount of her pension she gets per year: 10 years * 5% = 50%; int2 & sent2 -> int3: Then multiply that percentage by the total amount of the full pension to find how much she gets: $50,000 * 50% = $25,000; int3 & sent5 -> hypothesis;
	sentences:['sent3 & sent4 -> int1', 'int1 & sent3 -> int2', 'int2 & sent2 -> int3', 'int3 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3', 'sent4']}, {'int': 'int2', 'ancestors': ['sent3', 'sent4']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': '', 'int2': '', 'int3': '', 'hypothesis': 'the answer is 25000'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4', 'sent5'}
relevant_sentences_gold:{'sent2', 'sent3', 'sent4', 'sent5'}
		sentences:['sent2', 'sent3', 'sent4', 'sent5']
		sentences_gold:['sent2', 'sent3', 'sent4', 'sent5']
		sentences:['hypothesis & int1 & sent5 -> hypothesis', 'sent2 & sent4 & sent5 -> hypothesis', 'sent3 & sent4 -> int1']
		sentences_gold:['int1 & sent3 -> int2', 'int2 & sent2 -> int3', 'int3 & sent5 -> hypothesis', 'sent3 & sent4 -> int1']
step:sent3 & sent4 -> int1: First find how many years Marcy works after 20 years: 30 years - 20 years = 10 years
QID:GSM8K_62_aa8b921815
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many years Marcy works after 20 years', 'int2': 'Then multiply that number by the amount of her pension she gets per year', 'int3': 'Then multiply that percentage by the total amount of the full pension to find how much she gets', 'hypothesis': 'The answer is 25000'}
step:sent3 & sent4 -> int1: First find how many years Marcy works after 20 years: 30 years - 20 years = 10 years
QID:GSM8K_62_aa8b921815
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many years Marcy works after 20 years', 'int2': 'Then multiply that number by the amount of her pension she gets per year', 'int3': 'Then multiply that percentage by the total amount of the full pension to find how much she gets', 'hypothesis': 'The answer is 25000'}
step:sent3 & sent4 -> int1: First find how many years Marcy works after 20 years: 30 years - 20 years = 10 years
step:int1 & sent3 -> int2: Then multiply that number by the amount of her pension she gets per year: 10 years * 5% = 50%
QID:GSM8K_62_aa8b921815
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many years Marcy works after 20 years', 'int2': 'Then multiply that number by the amount of her pension she gets per year', 'int3': 'Then multiply that percentage by the total amount of the full pension to find how much she gets', 'hypothesis': 'The answer is 25000'}
step:int1 & sent3 -> int2: Then multiply that number by the amount of her pension she gets per year: 10 years * 5% = 50%
QID:GSM8K_62_aa8b921815
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many years Marcy works after 20 years', 'int2': 'Then multiply that number by the amount of her pension she gets per year', 'int3': 'Then multiply that percentage by the total amount of the full pension to find how much she gets', 'hypothesis': 'The answer is 25000'}
step:int1 & sent3 -> int2: Then multiply that number by the amount of her pension she gets per year: 10 years * 5% = 50%
step:int2 & sent2 -> int3: Then multiply that percentage by the total amount of the full pension to find how much she gets: $50,000 * 50% = $25,000
QID:GSM8K_62_aa8b921815
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many years Marcy works after 20 years', 'int2': 'Then multiply that number by the amount of her pension she gets per year', 'int3': 'Then multiply that percentage by the total amount of the full pension to find how much she gets', 'hypothesis': 'The answer is 25000'}
step:int2 & sent2 -> int3: Then multiply that percentage by the total amount of the full pension to find how much she gets: $50,000 * 50% = $25,000
QID:GSM8K_62_aa8b921815
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many years Marcy works after 20 years', 'int2': 'Then multiply that number by the amount of her pension she gets per year', 'int3': 'Then multiply that percentage by the total amount of the full pension to find how much she gets', 'hypothesis': 'The answer is 25000'}
step:int2 & sent2 -> int3: Then multiply that percentage by the total amount of the full pension to find how much she gets: $50,000 * 50% = $25,000
step:int3 & sent5 -> hypothesis
QID:GSM8K_62_aa8b921815
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many years Marcy works after 20 years', 'int2': 'Then multiply that number by the amount of her pension she gets per year', 'int3': 'Then multiply that percentage by the total amount of the full pension to find how much she gets', 'hypothesis': 'The answer is 25000'}
step:int3 & sent5 -> hypothesis
QID:GSM8K_62_aa8b921815
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'First find how many years Marcy works after 20 years', 'int2': 'Then multiply that number by the amount of her pension she gets per year', 'int3': 'Then multiply that percentage by the total amount of the full pension to find how much she gets', 'hypothesis': 'The answer is 25000'}
step:int3 & sent5 -> hypothesis
step:sent3 & sent4 -> int1: If Marcy worked for 40 years, she will get 40*.5=$20,000
step:sent4 & sent2 & sent5 -> int2: If she quits after 30 years, her annual pension will be $50,000-$30,000=$25,000
step:int2 & sent5 & int1 -> hypothesis



======================

pred:sent1 & sent3 -> int1: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140-$96 = $144; sent3 & sent1 -> int2: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140*.10 = $144; sent1 & sent3 -> int3: If the streaming company charged her $140 in the first half of the year, and she accepts 10% less money in the second half, the total amount she has paid for the streaming service is $140+$10=$140; sent1 & sent3 -> int4: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service was $140*0.2 = $108; int1 & int4 & sent4 -> int5: By the end of the year, she had paid a total of $144+$108 = $1596; int3 & int2 & int5 & sent4 -> hypothesis
gold:sent2 -> int1: A year has twelve months, so a half of the year is 12/2 = 6 months,; int1 & sent1 -> int2: For the first six months, the streaming service charged her a total of 6*140 = $840; sent1 & sent3 -> int3: For the next half of the year, the streaming service company charged her 10/100*140 = $14 less; int3 & sent1 -> int4: She paid $140-$14 = $126 each month for the remaining half of the year,; int1 & int4 & sent3 -> int5: In total, she paid 126*6 = $756 for the other half of the year for the streaming service.; int2 & int5 -> int6: The total amount of money she paid at the end of the year is $840+$756 = $1596; int6 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent3 -> int1: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140-$96 = $144
step_parts:['sent1 & sent3 -> int1', ' If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140-$96 = $144']
lhs_ids:['sent1', 'sent3']	 rhs = int1	 all_ancestors={'sent1', 'sent3'}
	 rhs = int1, int_str=if the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140-$96 = $144
step: sent3 & sent1 -> int2: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140*.10 = $144
step_parts:['sent3 & sent1 -> int2', ' If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140*.10 = $144']
lhs_ids:['sent3', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent3'}
	 rhs = int2, int_str=if the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140*10 = $144
step: sent1 & sent3 -> int3: If the streaming company charged her $140 in the first half of the year, and she accepts 10% less money in the second half, the total amount she has paid for the streaming service is $140+$10=$140
step_parts:['sent1 & sent3 -> int3', ' If the streaming company charged her $140 in the first half of the year, and she accepts 10% less money in the second half, the total amount she has paid for the streaming service is $140+$10=$140']
lhs_ids:['sent1', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent3'}
	 rhs = int3, int_str=if the streaming company charged her $140 in the first half of the year, and she accepts 10% less money in the second half, the total amount she has paid for the streaming service is $140+$10=$140
step: sent1 & sent3 -> int4: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service was $140*0.2 = $108
step_parts:['sent1 & sent3 -> int4', ' If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service was $140*0.2 = $108']
lhs_ids:['sent1', 'sent3']	 rhs = int4	 all_ancestors={'sent1', 'sent3'}
	 rhs = int4, int_str=if the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service was $140*02 = $108
step: int1 & int4 & sent4 -> int5: By the end of the year, she had paid a total of $144+$108 = $1596
step_parts:['int1 & int4 & sent4 -> int5', ' By the end of the year, she had paid a total of $144+$108 = $1596']
lhs_ids:['int1', 'int4', 'sent4']	 rhs = int5	 all_ancestors={'sent1', 'sent3', 'sent4'}
	 rhs = int5, int_str=by the end of the year, she had paid a total of $144+$108 = $1596
step: int3 & int2 & int5 & sent4 -> hypothesis
step_parts:['int3 & int2 & int5 & sent4 -> hypothesis']
lhs_ids:['int3', 'int2', 'int5', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 1596
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent3 -> int1: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140-$96 = $144; sent3 & sent1 -> int2: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140*.10 = $144; sent1 & sent3 -> int3: If the streaming company charged her $140 in the first half of the year, and she accepts 10% less money in the second half, the total amount she has paid for the streaming service is $140+$10=$140; sent1 & sent3 -> int4: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service was $140*0.2 = $108; int1 & int4 & sent4 -> int5: By the end of the year, she had paid a total of $144+$108 = $1596; int3 & int2 & int5 & sent4 -> hypothesis
	sentences:['sent1 & sent3 -> int1', 'sent1 & sent3 -> int2', 'sent1 & sent3 -> int3', 'sent1 & sent3 -> int4', 'int1 & int4 & sent4 -> int5', 'int2 & int3 & int5 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent3'], 'rhs': 'int1'}, {'lhs': ['sent1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['sent1', 'sent3'], 'rhs': 'int3'}, {'lhs': ['sent1', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int1', 'int4', 'sent4'], 'rhs': 'int5'}, {'lhs': ['int2', 'int3', 'int5', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent3']}, {'int': 'int4', 'ancestors': ['sent1', 'sent3']}, {'int': 'int5', 'ancestors': ['sent1', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent3']}]
	relevant_sentences:{'sent1', 'sent3', 'sent4'}
	id_to_int:{'int1': 'if the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140-$96 = $144', 'int2': 'if the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140*10 = $144', 'int3': 'if the streaming company charged her $140 in the first half of the year, and she accepts 10% less money in the second half, the total amount she has paid for the streaming service is $140+$10=$140', 'int4': 'if the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service was $140*02 = $108', 'int5': 'by the end of the year, she had paid a total of $144+$108 = $1596', 'hypothesis': 'the answer is 1596'}



||||||||||||||||||||||

Reading gold proof
step:sent2 -> int1: A year has twelve months, so a half of the year is 12/2 = 6 months,
step_parts:['sent2 -> int1', ' A year has twelve months, so a half of the year is 12/2 = 6 months,']
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=a year has twelve months, so a half of the year is 12/2 = 6 months,
step: int1 & sent1 -> int2: For the first six months, the streaming service charged her a total of 6*140 = $840
step_parts:['int1 & sent1 -> int2', ' For the first six months, the streaming service charged her a total of 6*140 = $840']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=for the first six months, the streaming service charged her a total of 6*140 = $840
step: sent1 & sent3 -> int3: For the next half of the year, the streaming service company charged her 10/100*140 = $14 less
step_parts:['sent1 & sent3 -> int3', ' For the next half of the year, the streaming service company charged her 10/100*140 = $14 less']
lhs_ids:['sent1', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent3'}
	 rhs = int3, int_str=for the next half of the year, the streaming service company charged her 10/100*140 = $14 less
step: int3 & sent1 -> int4: She paid $140-$14 = $126 each month for the remaining half of the year,
step_parts:['int3 & sent1 -> int4', ' She paid $140-$14 = $126 each month for the remaining half of the year,']
lhs_ids:['int3', 'sent1']	 rhs = int4	 all_ancestors={'sent1', 'sent3'}
	 rhs = int4, int_str=she paid $140-$14 = $126 each month for the remaining half of the year,
step: int1 & int4 & sent3 -> int5: In total, she paid 126*6 = $756 for the other half of the year for the streaming service.
step_parts:['int1 & int4 & sent3 -> int5', ' In total, she paid 126*6 = $756 for the other half of the year for the streaming service.']
lhs_ids:['int1', 'int4', 'sent3']	 rhs = int5	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int5, int_str=in total, she paid 126*6 = $756 for the other half of the year for the streaming service
step: int2 & int5 -> int6: The total amount of money she paid at the end of the year is $840+$756 = $1596
step_parts:['int2 & int5 -> int6', ' The total amount of money she paid at the end of the year is $840+$756 = $1596']
lhs_ids:['int2', 'int5']	 rhs = int6	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int6, int_str=the total amount of money she paid at the end of the year is $840+$756 = $1596
step: int6 & sent4 -> hypothesis
step_parts:['int6 & sent4 -> hypothesis']
lhs_ids:['int6', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 1596
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: A year has twelve months, so a half of the year is 12/2 = 6 months,; int1 & sent1 -> int2: For the first six months, the streaming service charged her a total of 6*140 = $840; sent1 & sent3 -> int3: For the next half of the year, the streaming service company charged her 10/100*140 = $14 less; int3 & sent1 -> int4: She paid $140-$14 = $126 each month for the remaining half of the year,; int1 & int4 & sent3 -> int5: In total, she paid 126*6 = $756 for the other half of the year for the streaming service.; int2 & int5 -> int6: The total amount of money she paid at the end of the year is $840+$756 = $1596; int6 & sent4 -> hypothesis;
	sentences:['sent2 -> int1', 'int1 & sent1 -> int2', 'sent1 & sent3 -> int3', 'int3 & sent1 -> int4', 'int1 & int4 & sent3 -> int5', 'int2 & int5 -> int6', 'int6 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['sent1', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent1'], 'rhs': 'int4'}, {'lhs': ['int1', 'int4', 'sent3'], 'rhs': 'int5'}, {'lhs': ['int2', 'int5'], 'rhs': 'int6'}, {'lhs': ['int6', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent3']}, {'int': 'int4', 'ancestors': ['sent1', 'sent3']}, {'int': 'int5', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int6', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'a year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'for the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'for the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'she paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'in total, she paid 126*6 = $756 for the other half of the year for the streaming service', 'int6': 'the total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'the answer is 1596'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int3', 'int2': 'int3', 'int3': 'int3', 'int4': 'int3', 'int5': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int3', 'int2': 'int3', 'int3': 'int3', 'int4': 'int3', 'int5': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['hypothesis & int3 & int3 & sent4 -> hypothesis', 'int3 & int3 & sent4 -> hypothesis', 'sent1 & sent3 -> int3', 'sent1 & sent3 -> int3', 'sent1 & sent3 -> int3', 'sent1 & sent3 -> int3']
		sentences_gold:['int1 & int4 & sent3 -> int5', 'int1 & sent1 -> int2', 'int2 & int5 -> int6', 'int3 & sent1 -> int4', 'int6 & sent4 -> hypothesis', 'sent1 & sent3 -> int3', 'sent2 -> int1']
step:sent2 -> int1: A year has twelve months, so a half of the year is 12/2 = 6 months,
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:sent2 -> int1: A year has twelve months, so a half of the year is 12/2 = 6 months,
step:int1 & sent1 -> int2: For the first six months, the streaming service charged her a total of 6*140 = $840
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:int1 & sent1 -> int2: For the first six months, the streaming service charged her a total of 6*140 = $840
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:int1 & sent1 -> int2: For the first six months, the streaming service charged her a total of 6*140 = $840
step:sent1 & sent3 -> int3: For the next half of the year, the streaming service company charged her 10/100*140 = $14 less
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:sent1 & sent3 -> int3: For the next half of the year, the streaming service company charged her 10/100*140 = $14 less
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:sent1 & sent3 -> int3: For the next half of the year, the streaming service company charged her 10/100*140 = $14 less
step:int3 & sent1 -> int4: She paid $140-$14 = $126 each month for the remaining half of the year,
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:int3 & sent1 -> int4: She paid $140-$14 = $126 each month for the remaining half of the year,
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:int3 & sent1 -> int4: She paid $140-$14 = $126 each month for the remaining half of the year,
step:int1 & int4 & sent3 -> int5: In total, she paid 126*6 = $756 for the other half of the year for the streaming service.
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:int1 & int4 & sent3 -> int5: In total, she paid 126*6 = $756 for the other half of the year for the streaming service.
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:int1 & int4 & sent3 -> int5: In total, she paid 126*6 = $756 for the other half of the year for the streaming service.
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:int1 & int4 & sent3 -> int5: In total, she paid 126*6 = $756 for the other half of the year for the streaming service.
step:int2 & int5 -> int6: The total amount of money she paid at the end of the year is $840+$756 = $1596
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:int2 & int5 -> int6: The total amount of money she paid at the end of the year is $840+$756 = $1596
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:int2 & int5 -> int6: The total amount of money she paid at the end of the year is $840+$756 = $1596
step:int6 & sent4 -> hypothesis
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:int6 & sent4 -> hypothesis
QID:GSM8K_63_1883b4fc6e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A year has twelve months, so a half of the year is 12/2 = 6 months,', 'int2': 'For the first six months, the streaming service charged her a total of 6*140 = $840', 'int3': 'For the next half of the year, the streaming service company charged her 10/100*140 = $14 less', 'int4': 'She paid $140-$14 = $126 each month for the remaining half of the year,', 'int5': 'In total, she paid 126*6 = $756 for the other half of the year for the streaming service.', 'int6': 'The total amount of money she paid at the end of the year is $840+$756 = $1596', 'hypothesis': 'The answer is 1596'}
step:int6 & sent4 -> hypothesis
step:sent1 & sent3 -> int1: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140-$96 = $144
step:sent3 & sent1 -> int2: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140*.10 = $144
step:sent1 & sent3 -> int3: If the streaming company charged her $140 in the first half of the year, and she accepts 10% less money in the second half, the total amount she has paid for the streaming service is $140+$10=$140
step:sent1 & sent3 -> int4: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service was $140*0.2 = $108
step:int1 & int4 & sent4 -> int5: By the end of the year, she had paid a total of $144+$108 = $1596
step:int3 & int2 & int5 & sent4 -> hypothesis



======================

pred:sent4 & sent5 -> int1: She filled up her tank with 4 gallons of gas because 12 x 4 = 4; sent3 & int1 -> int2: She drove 100 miles since last filling up because 4 x 100 = 100; int2 & sent3 -> int3: She can go 300 miles on a single tank of gas because 100 / 100 = 300; int3 & sent6 -> hypothesis
gold:sent3 & sent4 -> int1: To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon; int1 & sent5 -> int2: To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles; int2 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent4 & sent5 -> int1: She filled up her tank with 4 gallons of gas because 12 x 4 = 4
step_parts:['sent4 & sent5 -> int1', ' She filled up her tank with 4 gallons of gas because 12 x 4 = 4']
lhs_ids:['sent4', 'sent5']	 rhs = int1	 all_ancestors={'sent4', 'sent5'}
	 rhs = int1, int_str=she filled up her tank with 4 gallons of gas because 12 x 4 = 4
step: sent3 & int1 -> int2: She drove 100 miles since last filling up because 4 x 100 = 100
step_parts:['sent3 & int1 -> int2', ' She drove 100 miles since last filling up because 4 x 100 = 100']
lhs_ids:['sent3', 'int1']	 rhs = int2	 all_ancestors={'sent3', 'sent4', 'sent5'}
	 rhs = int2, int_str=she drove 100 miles since last filling up because 4 x 100 = 100
step: int2 & sent3 -> int3: She can go 300 miles on a single tank of gas because 100 / 100 = 300
step_parts:['int2 & sent3 -> int3', ' She can go 300 miles on a single tank of gas because 100 / 100 = 300']
lhs_ids:['int2', 'sent3']	 rhs = int3	 all_ancestors={'sent3', 'sent4', 'sent5'}
	 rhs = int3, int_str=she can go 300 miles on a single tank of gas because 100 / 100 = 300
step: int3 & sent6 -> hypothesis
step_parts:['int3 & sent6 -> hypothesis']
lhs_ids:['int3', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 300
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent4 & sent5 -> int1: She filled up her tank with 4 gallons of gas because 12 x 4 = 4; sent3 & int1 -> int2: She drove 100 miles since last filling up because 4 x 100 = 100; int2 & sent3 -> int3: She can go 300 miles on a single tank of gas because 100 / 100 = 300; int3 & sent6 -> hypothesis
	sentences:['sent4 & sent5 -> int1', 'int1 & sent3 -> int2', 'int2 & sent3 -> int3', 'int3 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent4', 'sent5'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent4', 'sent5']}, {'int': 'int2', 'ancestors': ['sent3', 'sent4', 'sent5']}, {'int': 'int3', 'ancestors': ['sent3', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent6', 'sent4', 'sent3', 'sent5'}
	id_to_int:{'int1': 'she filled up her tank with 4 gallons of gas because 12 x 4 = 4', 'int2': 'she drove 100 miles since last filling up because 4 x 100 = 100', 'int3': 'she can go 300 miles on a single tank of gas because 100 / 100 = 300', 'hypothesis': 'the answer is 300'}



||||||||||||||||||||||

Reading gold proof
step:sent3 & sent4 -> int1: To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon
step_parts:['sent3 & sent4 -> int1', ' To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon']
lhs_ids:['sent3', 'sent4']	 rhs = int1	 all_ancestors={'sent3', 'sent4'}
	 rhs = int1, int_str=to find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon
step: int1 & sent5 -> int2: To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles
step_parts:['int1 & sent5 -> int2', ' To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles']
lhs_ids:['int1', 'sent5']	 rhs = int2	 all_ancestors={'sent3', 'sent4', 'sent5'}
	 rhs = int2, int_str=to find how far olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles
step: int2 & sent6 -> hypothesis
step_parts:['int2 & sent6 -> hypothesis']
lhs_ids:['int2', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent6', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 300
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent4 -> int1: To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon; int1 & sent5 -> int2: To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles; int2 & sent6 -> hypothesis;
	sentences:['sent3 & sent4 -> int1', 'int1 & sent5 -> int2', 'int2 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent5'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3', 'sent4']}, {'int': 'int2', 'ancestors': ['sent3', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent6', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent6', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'to find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon', 'int2': 'to find how far olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles', 'hypothesis': 'the answer is 300'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'int3': 'int2', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'int3': 'int2', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent6', 'sent4', 'sent3', 'sent5'}
relevant_sentences_gold:{'sent6', 'sent3', 'sent4', 'sent5'}
		sentences:['sent3', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent3', 'sent4', 'sent5', 'sent6']
		sentences:['int2 & sent3 -> int2', 'int2 & sent3 -> int2', 'int2 & sent6 -> hypothesis', 'sent4 & sent5 -> int2']
		sentences_gold:['int1 & sent5 -> int2', 'int2 & sent6 -> hypothesis', 'sent3 & sent4 -> int1']
step:sent3 & sent4 -> int1: To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon
QID:GSM8K_64_74e8075a62
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon', 'int2': 'To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles', 'hypothesis': 'The answer is 300'}
step:sent3 & sent4 -> int1: To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon
QID:GSM8K_64_74e8075a62
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon', 'int2': 'To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles', 'hypothesis': 'The answer is 300'}
step:sent3 & sent4 -> int1: To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon
step:int1 & sent5 -> int2: To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles
QID:GSM8K_64_74e8075a62
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon', 'int2': 'To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles', 'hypothesis': 'The answer is 300'}
step:int1 & sent5 -> int2: To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles
QID:GSM8K_64_74e8075a62
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon', 'int2': 'To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles', 'hypothesis': 'The answer is 300'}
step:int1 & sent5 -> int2: To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles
step:int2 & sent6 -> hypothesis
QID:GSM8K_64_74e8075a62
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon', 'int2': 'To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles', 'hypothesis': 'The answer is 300'}
step:int2 & sent6 -> hypothesis
QID:GSM8K_64_74e8075a62
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'To find miles per gallon divide 100 miles / 4 gallons = 25 miles per gallon', 'int2': 'To find how far Olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles', 'hypothesis': 'The answer is 300'}
step:int2 & sent6 -> hypothesis
step:sent4 & sent5 -> int1: She filled up her tank with 4 gallons of gas because 12 x 4 = 4
step:sent3 & int1 -> int2: She drove 100 miles since last filling up because 4 x 100 = 100
step:int2 & sent3 -> int3: She can go 300 miles on a single tank of gas because 100 / 100 = 300
step:int3 & sent6 -> hypothesis



======================

pred:sent3 & sent1 -> int1: He reads for 1/2*2=4 hours a night.; sent4 & sent1 -> int2: He spends 2*4=6 hours a week watching TV.; int2 & sent4 -> int3: He spends 6*3=24 hours a week reading.; int1 & int3 & sent5 -> int4: Therefore, he spends 24+4=36 hours in 4 weeks.; sent5 & int4 -> hypothesis
gold:sent1 & sent2 & sent3 -> int1: He reads for 2/2=1 hour a night; int1 & sent1 & sent3 -> int2: So he spends 2+1=3 hours on these activities; int1 & int2 & sent4 -> int3: That means he spends 3*3=9 hours a week on them; int3 & sent5 -> int4: So in 4 weeks, he spends 9*4=36 hours on these activities; int4 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent1 -> int1: He reads for 1/2*2=4 hours a night.
step_parts:['sent3 & sent1 -> int1', ' He reads for 1/2*2=4 hours a night.']
lhs_ids:['sent3', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent3'}
	 rhs = int1, int_str=he reads for 1/2*2=4 hours a night
step: sent4 & sent1 -> int2: He spends 2*4=6 hours a week watching TV.
step_parts:['sent4 & sent1 -> int2', ' He spends 2*4=6 hours a week watching TV.']
lhs_ids:['sent4', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent4'}
	 rhs = int2, int_str=he spends 2*4=6 hours a week watching tv
step: int2 & sent4 -> int3: He spends 6*3=24 hours a week reading.
step_parts:['int2 & sent4 -> int3', ' He spends 6*3=24 hours a week reading.']
lhs_ids:['int2', 'sent4']	 rhs = int3	 all_ancestors={'sent1', 'sent4'}
	 rhs = int3, int_str=he spends 6*3=24 hours a week reading
step: int1 & int3 & sent5 -> int4: Therefore, he spends 24+4=36 hours in 4 weeks.
step_parts:['int1 & int3 & sent5 -> int4', ' Therefore, he spends 24+4=36 hours in 4 weeks.']
lhs_ids:['int1', 'int3', 'sent5']	 rhs = int4	 all_ancestors={'sent1', 'sent3', 'sent4', 'sent5'}
	 rhs = int4, int_str=therefore, he spends 24+4=36 hours in 4 weeks
step: sent5 & int4 -> hypothesis
step_parts:['sent5 & int4 -> hypothesis']
lhs_ids:['sent5', 'int4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 36
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent1 -> int1: He reads for 1/2*2=4 hours a night.; sent4 & sent1 -> int2: He spends 2*4=6 hours a week watching TV.; int2 & sent4 -> int3: He spends 6*3=24 hours a week reading.; int1 & int3 & sent5 -> int4: Therefore, he spends 24+4=36 hours in 4 weeks.; sent5 & int4 -> hypothesis
	sentences:['sent1 & sent3 -> int1', 'sent1 & sent4 -> int2', 'int2 & sent4 -> int3', 'int1 & int3 & sent5 -> int4', 'int4 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent3'], 'rhs': 'int1'}, {'lhs': ['sent1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int1', 'int3', 'sent5'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent4']}, {'int': 'int3', 'ancestors': ['sent1', 'sent4']}, {'int': 'int4', 'ancestors': ['sent1', 'sent3', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'he reads for 1/2*2=4 hours a night', 'int2': 'he spends 2*4=6 hours a week watching tv', 'int3': 'he spends 6*3=24 hours a week reading', 'int4': 'therefore, he spends 24+4=36 hours in 4 weeks', 'hypothesis': 'the answer is 36'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 & sent3 -> int1: He reads for 2/2=1 hour a night
step_parts:['sent1 & sent2 & sent3 -> int1', ' He reads for 2/2=1 hour a night']
lhs_ids:['sent1', 'sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int1, int_str=he reads for 2/2=1 hour a night
step: int1 & sent1 & sent3 -> int2: So he spends 2+1=3 hours on these activities
step_parts:['int1 & sent1 & sent3 -> int2', ' So he spends 2+1=3 hours on these activities']
lhs_ids:['int1', 'sent1', 'sent3']	 rhs = int2	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int2, int_str=so he spends 2+1=3 hours on these activities
step: int1 & int2 & sent4 -> int3: That means he spends 3*3=9 hours a week on them
step_parts:['int1 & int2 & sent4 -> int3', ' That means he spends 3*3=9 hours a week on them']
lhs_ids:['int1', 'int2', 'sent4']	 rhs = int3	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent3'}
	 rhs = int3, int_str=that means he spends 3*3=9 hours a week on them
step: int3 & sent5 -> int4: So in 4 weeks, he spends 9*4=36 hours on these activities
step_parts:['int3 & sent5 -> int4', ' So in 4 weeks, he spends 9*4=36 hours on these activities']
lhs_ids:['int3', 'sent5']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = int4, int_str=so in 4 weeks, he spends 9*4=36 hours on these activities
step: int4 & sent5 -> hypothesis
step_parts:['int4 & sent5 -> hypothesis']
lhs_ids:['int4', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 36
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 & sent3 -> int1: He reads for 2/2=1 hour a night; int1 & sent1 & sent3 -> int2: So he spends 2+1=3 hours on these activities; int1 & int2 & sent4 -> int3: That means he spends 3*3=9 hours a week on them; int3 & sent5 -> int4: So in 4 weeks, he spends 9*4=36 hours on these activities; int4 & sent5 -> hypothesis;
	sentences:['sent1 & sent2 & sent3 -> int1', 'int1 & sent1 & sent3 -> int2', 'int1 & int2 & sent4 -> int3', 'int3 & sent5 -> int4', 'int4 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent5'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent3']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent5', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'he reads for 2/2=1 hour a night', 'int2': 'so he spends 2+1=3 hours on these activities', 'int3': 'that means he spends 3*3=9 hours a week on them', 'int4': 'so in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'the answer is 36'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'int3', 'int4': 'int4', 'hypothesis': 'int4'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'int3', 'int4': 'int4', 'hypothesis': 'int4'}
relevant_sentences_pred:{'sent1', 'sent3', 'sent4', 'sent5'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
		sentences:['sent1', 'sent3', 'sent4', 'sent5']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4', 'sent5']
		sentences:['int1 & int3 & sent5 -> int4', 'int3 & sent4 -> int3', 'int4 & sent5 -> int4', 'sent1 & sent3 -> int1', 'sent1 & sent4 -> int3']
		sentences_gold:['int1 & int2 & sent4 -> int3', 'int1 & sent1 & sent3 -> int2', 'int3 & sent5 -> int4', 'int4 & sent5 -> hypothesis', 'sent1 & sent2 & sent3 -> int1']
step:sent1 & sent2 & sent3 -> int1: He reads for 2/2=1 hour a night
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:sent1 & sent2 & sent3 -> int1: He reads for 2/2=1 hour a night
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:sent1 & sent2 & sent3 -> int1: He reads for 2/2=1 hour a night
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:sent1 & sent2 & sent3 -> int1: He reads for 2/2=1 hour a night
step:int1 & sent1 & sent3 -> int2: So he spends 2+1=3 hours on these activities
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:int1 & sent1 & sent3 -> int2: So he spends 2+1=3 hours on these activities
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:int1 & sent1 & sent3 -> int2: So he spends 2+1=3 hours on these activities
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:int1 & sent1 & sent3 -> int2: So he spends 2+1=3 hours on these activities
step:int1 & int2 & sent4 -> int3: That means he spends 3*3=9 hours a week on them
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:int1 & int2 & sent4 -> int3: That means he spends 3*3=9 hours a week on them
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:int1 & int2 & sent4 -> int3: That means he spends 3*3=9 hours a week on them
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:int1 & int2 & sent4 -> int3: That means he spends 3*3=9 hours a week on them
step:int3 & sent5 -> int4: So in 4 weeks, he spends 9*4=36 hours on these activities
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:int3 & sent5 -> int4: So in 4 weeks, he spends 9*4=36 hours on these activities
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:int3 & sent5 -> int4: So in 4 weeks, he spends 9*4=36 hours on these activities
step:int4 & sent5 -> hypothesis
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:int4 & sent5 -> hypothesis
QID:GSM8K_65_b2468a824b
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'He reads for 2/2=1 hour a night', 'int2': 'So he spends 2+1=3 hours on these activities', 'int3': 'That means he spends 3*3=9 hours a week on them', 'int4': 'So in 4 weeks, he spends 9*4=36 hours on these activities', 'hypothesis': 'The answer is 36'}
step:int4 & sent5 -> hypothesis
step:sent3 & sent1 -> int1: He reads for 1/2*2=4 hours a night.
step:sent4 & sent1 -> int2: He spends 2*4=6 hours a week watching TV.
step:int2 & sent4 -> int3: He spends 6*3=24 hours a week reading.
step:int1 & int3 & sent5 -> int4: Therefore, he spends 24+4=36 hours in 4 weeks.
step:sent5 & int4 -> hypothesis



======================

pred:sent1 & sent4 -> int1: There are 4 schools * 5 players each = 20 people.; int1 & sent6 & sent5 -> int2: The total number of people from all four schools is 20 + 5 = 48 people.; int2 & sent6 -> hypothesis
gold:sent2 & sent3 -> int1: Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.; int1 & sent4 -> int2: So each school has sent 2 teams * 5 players per team = 10 players.; sent2 & sent3 & sent5 -> int3: They have also each sent 2 teams * 1 coach per team = 2 coaches.; int2 & int3 -> int4: In total, each school has sent 10 players + 2 coaches = 12 people.; int4 & sent1 -> int5: Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.; int5 & sent6 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent4 -> int1: There are 4 schools * 5 players each = 20 people.
step_parts:['sent1 & sent4 -> int1', ' There are 4 schools * 5 players each = 20 people.']
lhs_ids:['sent1', 'sent4']	 rhs = int1	 all_ancestors={'sent1', 'sent4'}
	 rhs = int1, int_str=there are 4 schools * 5 players each = 20 people
step: int1 & sent6 & sent5 -> int2: The total number of people from all four schools is 20 + 5 = 48 people.
step_parts:['int1 & sent6 & sent5 -> int2', ' The total number of people from all four schools is 20 + 5 = 48 people.']
lhs_ids:['int1', 'sent6', 'sent5']	 rhs = int2	 all_ancestors={'sent1', 'sent4', 'sent5', 'sent6'}
	 rhs = int2, int_str=the total number of people from all four schools is 20 + 5 = 48 people
step: int2 & sent6 -> hypothesis
step_parts:['int2 & sent6 -> hypothesis']
lhs_ids:['int2', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent5', 'sent6'}
	 rhs = hypothesis, int_str=the answer is 48
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent4 -> int1: There are 4 schools * 5 players each = 20 people.; int1 & sent6 & sent5 -> int2: The total number of people from all four schools is 20 + 5 = 48 people.; int2 & sent6 -> hypothesis
	sentences:['sent1 & sent4 -> int1', 'int1 & sent5 & sent6 -> int2', 'int2 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent4'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent5', 'sent6'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent4']}, {'int': 'int2', 'ancestors': ['sent1', 'sent4', 'sent5', 'sent6']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent5', 'sent6']}]
	relevant_sentences:{'sent1', 'sent4', 'sent5', 'sent6'}
	id_to_int:{'int1': 'there are 4 schools * 5 players each = 20 people', 'int2': 'the total number of people from all four schools is 20 + 5 = 48 people', 'hypothesis': 'the answer is 48'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent3 -> int1: Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.
step_parts:['sent2 & sent3 -> int1', ' Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams
step: int1 & sent4 -> int2: So each school has sent 2 teams * 5 players per team = 10 players.
step_parts:['int1 & sent4 -> int2', ' So each school has sent 2 teams * 5 players per team = 10 players.']
lhs_ids:['int1', 'sent4']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int2, int_str=so each school has sent 2 teams * 5 players per team = 10 players
step: sent2 & sent3 & sent5 -> int3: They have also each sent 2 teams * 1 coach per team = 2 coaches.
step_parts:['sent2 & sent3 & sent5 -> int3', ' They have also each sent 2 teams * 1 coach per team = 2 coaches.']
lhs_ids:['sent2', 'sent3', 'sent5']	 rhs = int3	 all_ancestors={'sent2', 'sent3', 'sent5'}
	 rhs = int3, int_str=they have also each sent 2 teams * 1 coach per team = 2 coaches
step: int2 & int3 -> int4: In total, each school has sent 10 players + 2 coaches = 12 people.
step_parts:['int2 & int3 -> int4', ' In total, each school has sent 10 players + 2 coaches = 12 people.']
lhs_ids:['int2', 'int3']	 rhs = int4	 all_ancestors={'sent2', 'sent4', 'sent5', 'sent3'}
	 rhs = int4, int_str=in total, each school has sent 10 players + 2 coaches = 12 people
step: int4 & sent1 -> int5: Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.
step_parts:['int4 & sent1 -> int5', ' Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.']
lhs_ids:['int4', 'sent1']	 rhs = int5	 all_ancestors={'sent1', 'sent2', 'sent5', 'sent3', 'sent4'}
	 rhs = int5, int_str=therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people
step: int5 & sent6 -> hypothesis
step_parts:['int5 & sent6 -> hypothesis']
lhs_ids:['int5', 'sent6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 48
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.; int1 & sent4 -> int2: So each school has sent 2 teams * 5 players per team = 10 players.; sent2 & sent3 & sent5 -> int3: They have also each sent 2 teams * 1 coach per team = 2 coaches.; int2 & int3 -> int4: In total, each school has sent 10 players + 2 coaches = 12 people.; int4 & sent1 -> int5: Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.; int5 & sent6 -> hypothesis;
	sentences:['sent2 & sent3 -> int1', 'int1 & sent4 -> int2', 'sent2 & sent3 & sent5 -> int3', 'int2 & int3 -> int4', 'int4 & sent1 -> int5', 'int5 & sent6 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['sent2', 'sent3', 'sent5'], 'rhs': 'int3'}, {'lhs': ['int2', 'int3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent1'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent6'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3', 'sent5']}, {'int': 'int4', 'ancestors': ['sent2', 'sent4', 'sent5', 'sent3']}, {'int': 'int5', 'ancestors': ['sent1', 'sent2', 'sent5', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent6', 'sent5', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent6', 'sent5', 'sent3', 'sent4'}
	id_to_int:{'int1': 'each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams', 'int2': 'so each school has sent 2 teams * 5 players per team = 10 players', 'int3': 'they have also each sent 2 teams * 1 coach per team = 2 coaches', 'int4': 'in total, each school has sent 10 players + 2 coaches = 12 people', 'int5': 'therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people', 'hypothesis': 'the answer is 48'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int5', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int5', 'int2': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent4', 'sent5', 'sent6'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent6', 'sent5', 'sent3', 'sent4'}
		sentences:['sent1', 'sent4', 'sent5', 'sent6']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4', 'sent5', 'sent6']
		sentences:['hypothesis & sent6 -> hypothesis', 'int5 & sent5 & sent6 -> hypothesis', 'sent1 & sent4 -> int5']
		sentences_gold:['int1 & sent4 -> int2', 'int2 & int3 -> int4', 'int4 & sent1 -> int5', 'int5 & sent6 -> hypothesis', 'sent2 & sent3 & sent5 -> int3', 'sent2 & sent3 -> int1']
step:sent2 & sent3 -> int1: Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:sent2 & sent3 -> int1: Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:sent2 & sent3 -> int1: Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.
step:int1 & sent4 -> int2: So each school has sent 2 teams * 5 players per team = 10 players.
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:int1 & sent4 -> int2: So each school has sent 2 teams * 5 players per team = 10 players.
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:int1 & sent4 -> int2: So each school has sent 2 teams * 5 players per team = 10 players.
step:sent2 & sent3 & sent5 -> int3: They have also each sent 2 teams * 1 coach per team = 2 coaches.
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:sent2 & sent3 & sent5 -> int3: They have also each sent 2 teams * 1 coach per team = 2 coaches.
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:sent2 & sent3 & sent5 -> int3: They have also each sent 2 teams * 1 coach per team = 2 coaches.
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:sent2 & sent3 & sent5 -> int3: They have also each sent 2 teams * 1 coach per team = 2 coaches.
step:int2 & int3 -> int4: In total, each school has sent 10 players + 2 coaches = 12 people.
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:int2 & int3 -> int4: In total, each school has sent 10 players + 2 coaches = 12 people.
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:int2 & int3 -> int4: In total, each school has sent 10 players + 2 coaches = 12 people.
step:int4 & sent1 -> int5: Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:int4 & sent1 -> int5: Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:int4 & sent1 -> int5: Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.
step:int5 & sent6 -> hypothesis
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:int5 & sent6 -> hypothesis
QID:GSM8K_66_c163f23711
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Each school has sent 1 girls’ basketball team + 1 boys’ basketball team = 2 teams.', 'int2': 'So each school has sent 2 teams * 5 players per team = 10 players.', 'int3': 'They have also each sent 2 teams * 1 coach per team = 2 coaches.', 'int4': 'In total, each school has sent 10 players + 2 coaches = 12 people.', 'int5': 'Therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people.', 'hypothesis': 'The answer is 48'}
step:int5 & sent6 -> hypothesis
step:sent1 & sent4 -> int1: There are 4 schools * 5 players each = 20 people.
step:int1 & sent6 & sent5 -> int2: The total number of people from all four schools is 20 + 5 = 48 people.
step:int2 & sent6 -> hypothesis



======================

pred:sent2 -> int1: 35 fewer rubies than diamonds are 175 rubies.; sent2 -> int2: There were 175 rubies - 35 = 110 diamonds.; sent2 -> int3: There were 175 diamonds - 35 = 110 rubies.; int3 & sent3 -> int4: There were 110 rubies * 2 emeralds = 354 emeralds.; int1 & int2 & int4 -> int5: There were 110 rubies + 354 emeralds = 595 gems in the chest.; int5 & sent4 -> hypothesis
gold:sent2 -> int1: There were 175 - 35 = 140 rubies in the treasure chest.; int1 & sent3 -> int2: There were 140 x 2 = 280 emeralds in the treasure chest.; int1 & int2 & sent2 -> int3: So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.; int3 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent2 -> int1: 35 fewer rubies than diamonds are 175 rubies.
step_parts:['sent2 -> int1', ' 35 fewer rubies than diamonds are 175 rubies.']
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=35 fewer rubies than diamonds are 175 rubies
step: sent2 -> int2: There were 175 rubies - 35 = 110 diamonds.
step_parts:['sent2 -> int2', ' There were 175 rubies - 35 = 110 diamonds.']
lhs_ids:['sent2']	 rhs = int2	 all_ancestors={'sent2'}
	 rhs = int2, int_str=there were 175 rubies - 35 = 110 diamonds
step: sent2 -> int3: There were 175 diamonds - 35 = 110 rubies.
step_parts:['sent2 -> int3', ' There were 175 diamonds - 35 = 110 rubies.']
lhs_ids:['sent2']	 rhs = int3	 all_ancestors={'sent2'}
	 rhs = int3, int_str=there were 175 diamonds - 35 = 110 rubies
step: int3 & sent3 -> int4: There were 110 rubies * 2 emeralds = 354 emeralds.
step_parts:['int3 & sent3 -> int4', ' There were 110 rubies * 2 emeralds = 354 emeralds.']
lhs_ids:['int3', 'sent3']	 rhs = int4	 all_ancestors={'sent2', 'sent3'}
	 rhs = int4, int_str=there were 110 rubies * 2 emeralds = 354 emeralds
step: int1 & int2 & int4 -> int5: There were 110 rubies + 354 emeralds = 595 gems in the chest.
step_parts:['int1 & int2 & int4 -> int5', ' There were 110 rubies + 354 emeralds = 595 gems in the chest.']
lhs_ids:['int1', 'int2', 'int4']	 rhs = int5	 all_ancestors={'sent2', 'sent3'}
	 rhs = int5, int_str=there were 110 rubies + 354 emeralds = 595 gems in the chest
step: int5 & sent4 -> hypothesis
step_parts:['int5 & sent4 -> hypothesis']
lhs_ids:['int5', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 595
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: 35 fewer rubies than diamonds are 175 rubies.; sent2 -> int2: There were 175 rubies - 35 = 110 diamonds.; sent2 -> int3: There were 175 diamonds - 35 = 110 rubies.; int3 & sent3 -> int4: There were 110 rubies * 2 emeralds = 354 emeralds.; int1 & int2 & int4 -> int5: There were 110 rubies + 354 emeralds = 595 gems in the chest.; int5 & sent4 -> hypothesis
	sentences:['sent2 -> int1', 'sent2 -> int2', 'sent2 -> int3', 'int3 & sent3 -> int4', 'int1 & int2 & int4 -> int5', 'int5 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['sent2'], 'rhs': 'int2'}, {'lhs': ['sent2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int1', 'int2', 'int4'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent2']}, {'int': 'int3', 'ancestors': ['sent2']}, {'int': 'int4', 'ancestors': ['sent2', 'sent3']}, {'int': 'int5', 'ancestors': ['sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': '35 fewer rubies than diamonds are 175 rubies', 'int2': 'there were 175 rubies - 35 = 110 diamonds', 'int3': 'there were 175 diamonds - 35 = 110 rubies', 'int4': 'there were 110 rubies * 2 emeralds = 354 emeralds', 'int5': 'there were 110 rubies + 354 emeralds = 595 gems in the chest', 'hypothesis': 'the answer is 595'}



||||||||||||||||||||||

Reading gold proof
step:sent2 -> int1: There were 175 - 35 = 140 rubies in the treasure chest.
step_parts:['sent2 -> int1', ' There were 175 - 35 = 140 rubies in the treasure chest.']
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=there were 175 - 35 = 140 rubies in the treasure chest
step: int1 & sent3 -> int2: There were 140 x 2 = 280 emeralds in the treasure chest.
step_parts:['int1 & sent3 -> int2', ' There were 140 x 2 = 280 emeralds in the treasure chest.']
lhs_ids:['int1', 'sent3']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=there were 140 x 2 = 280 emeralds in the treasure chest
step: int1 & int2 & sent2 -> int3: So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.
step_parts:['int1 & int2 & sent2 -> int3', ' So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.']
lhs_ids:['int1', 'int2', 'sent2']	 rhs = int3	 all_ancestors={'sent2', 'sent3'}
	 rhs = int3, int_str=so, the total number of gems in the treasure chest is 175 + 140 + 280 = 595
step: int3 & sent4 -> hypothesis
step_parts:['int3 & sent4 -> hypothesis']
lhs_ids:['int3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 595
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: There were 175 - 35 = 140 rubies in the treasure chest.; int1 & sent3 -> int2: There were 140 x 2 = 280 emeralds in the treasure chest.; int1 & int2 & sent2 -> int3: So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.; int3 & sent4 -> hypothesis;
	sentences:['sent2 -> int1', 'int1 & sent3 -> int2', 'int1 & int2 & sent2 -> int3', 'int3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'there were 175 - 35 = 140 rubies in the treasure chest', 'int2': 'there were 140 x 2 = 280 emeralds in the treasure chest', 'int3': 'so, the total number of gems in the treasure chest is 175 + 140 + 280 = 595', 'hypothesis': 'the answer is 595'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'int2', 'int5': 'int2', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'int2', 'int5': 'int2', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent2', 'sent3', 'sent4'}
		sentences:['sent2', 'sent3', 'sent4']
		sentences_gold:['sent2', 'sent3', 'sent4']
		sentences:['int1 & int1 & int2 -> int2', 'int1 & sent3 -> int2', 'int2 & sent4 -> hypothesis', 'sent2 -> int1', 'sent2 -> int1', 'sent2 -> int1']
		sentences_gold:['int1 & int2 & sent2 -> int3', 'int1 & sent3 -> int2', 'int3 & sent4 -> hypothesis', 'sent2 -> int1']
step:sent2 -> int1: There were 175 - 35 = 140 rubies in the treasure chest.
QID:GSM8K_67_eac7b1ff98
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There were 175 - 35 = 140 rubies in the treasure chest.', 'int2': 'There were 140 x 2 = 280 emeralds in the treasure chest.', 'int3': 'So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.', 'hypothesis': 'The answer is 595'}
step:sent2 -> int1: There were 175 - 35 = 140 rubies in the treasure chest.
step:int1 & sent3 -> int2: There were 140 x 2 = 280 emeralds in the treasure chest.
QID:GSM8K_67_eac7b1ff98
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There were 175 - 35 = 140 rubies in the treasure chest.', 'int2': 'There were 140 x 2 = 280 emeralds in the treasure chest.', 'int3': 'So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.', 'hypothesis': 'The answer is 595'}
step:int1 & sent3 -> int2: There were 140 x 2 = 280 emeralds in the treasure chest.
QID:GSM8K_67_eac7b1ff98
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There were 175 - 35 = 140 rubies in the treasure chest.', 'int2': 'There were 140 x 2 = 280 emeralds in the treasure chest.', 'int3': 'So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.', 'hypothesis': 'The answer is 595'}
step:int1 & sent3 -> int2: There were 140 x 2 = 280 emeralds in the treasure chest.
step:int1 & int2 & sent2 -> int3: So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.
QID:GSM8K_67_eac7b1ff98
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There were 175 - 35 = 140 rubies in the treasure chest.', 'int2': 'There were 140 x 2 = 280 emeralds in the treasure chest.', 'int3': 'So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.', 'hypothesis': 'The answer is 595'}
step:int1 & int2 & sent2 -> int3: So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.
QID:GSM8K_67_eac7b1ff98
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There were 175 - 35 = 140 rubies in the treasure chest.', 'int2': 'There were 140 x 2 = 280 emeralds in the treasure chest.', 'int3': 'So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.', 'hypothesis': 'The answer is 595'}
step:int1 & int2 & sent2 -> int3: So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.
QID:GSM8K_67_eac7b1ff98
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There were 175 - 35 = 140 rubies in the treasure chest.', 'int2': 'There were 140 x 2 = 280 emeralds in the treasure chest.', 'int3': 'So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.', 'hypothesis': 'The answer is 595'}
step:int1 & int2 & sent2 -> int3: So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.
step:int3 & sent4 -> hypothesis
QID:GSM8K_67_eac7b1ff98
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There were 175 - 35 = 140 rubies in the treasure chest.', 'int2': 'There were 140 x 2 = 280 emeralds in the treasure chest.', 'int3': 'So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.', 'hypothesis': 'The answer is 595'}
step:int3 & sent4 -> hypothesis
QID:GSM8K_67_eac7b1ff98
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There were 175 - 35 = 140 rubies in the treasure chest.', 'int2': 'There were 140 x 2 = 280 emeralds in the treasure chest.', 'int3': 'So, the total number of gems in the treasure chest is 175 + 140 + 280 = 595.', 'hypothesis': 'The answer is 595'}
step:int3 & sent4 -> hypothesis
step:sent2 -> int1: 35 fewer rubies than diamonds are 175 rubies.
step:sent2 -> int2: There were 175 rubies - 35 = 110 diamonds.
step:sent2 -> int3: There were 175 diamonds - 35 = 110 rubies.
step:int3 & sent3 -> int4: There were 110 rubies * 2 emeralds = 354 emeralds.
step:int1 & int2 & int4 -> int5: There were 110 rubies + 354 emeralds = 595 gems in the chest.
step:int5 & sent4 -> hypothesis



======================

pred:sent3 & sent1 -> int1: Dr. Wertz taught 60 x 2 = 180 boys.; int1 & sent4 -> int2: There are 5 x 5 = 15 students at every teacher.; int2 & sent5 & sent3 -> int3: Therefore, there are 60 + 15 = 36 teachers.; int3 & sent5 -> hypothesis
gold:sent1 & sent3 -> int1: There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys; int1 & sent3 -> int2: There are 120 + 60 = 180 students in total; int2 & sent4 -> int3: If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers; int3 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent1 -> int1: Dr. Wertz taught 60 x 2 = 180 boys.
step_parts:['sent3 & sent1 -> int1', ' Dr. Wertz taught 60 x 2 = 180 boys.']
lhs_ids:['sent3', 'sent1']	 rhs = int1	 all_ancestors={'sent1', 'sent3'}
	 rhs = int1, int_str=dr wertz taught 60 x 2 = 180 boys
step: int1 & sent4 -> int2: There are 5 x 5 = 15 students at every teacher.
step_parts:['int1 & sent4 -> int2', ' There are 5 x 5 = 15 students at every teacher.']
lhs_ids:['int1', 'sent4']	 rhs = int2	 all_ancestors={'sent1', 'sent3', 'sent4'}
	 rhs = int2, int_str=there are 5 x 5 = 15 students at every teacher
step: int2 & sent5 & sent3 -> int3: Therefore, there are 60 + 15 = 36 teachers.
step_parts:['int2 & sent5 & sent3 -> int3', ' Therefore, there are 60 + 15 = 36 teachers.']
lhs_ids:['int2', 'sent5', 'sent3']	 rhs = int3	 all_ancestors={'sent1', 'sent3', 'sent4', 'sent5'}
	 rhs = int3, int_str=therefore, there are 60 + 15 = 36 teachers
step: int3 & sent5 -> hypothesis
step_parts:['int3 & sent5 -> hypothesis']
lhs_ids:['int3', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 36
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent1 -> int1: Dr. Wertz taught 60 x 2 = 180 boys.; int1 & sent4 -> int2: There are 5 x 5 = 15 students at every teacher.; int2 & sent5 & sent3 -> int3: Therefore, there are 60 + 15 = 36 teachers.; int3 & sent5 -> hypothesis
	sentences:['sent1 & sent3 -> int1', 'int1 & sent4 -> int2', 'int2 & sent3 & sent5 -> int3', 'int3 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3', 'sent5'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3', 'sent4']}, {'int': 'int3', 'ancestors': ['sent1', 'sent3', 'sent4', 'sent5']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent1', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'dr wertz taught 60 x 2 = 180 boys', 'int2': 'there are 5 x 5 = 15 students at every teacher', 'int3': 'therefore, there are 60 + 15 = 36 teachers', 'hypothesis': 'the answer is 36'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent3 -> int1: There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys
step_parts:['sent1 & sent3 -> int1', ' There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys']
lhs_ids:['sent1', 'sent3']	 rhs = int1	 all_ancestors={'sent1', 'sent3'}
	 rhs = int1, int_str=there are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys
step: int1 & sent3 -> int2: There are 120 + 60 = 180 students in total
step_parts:['int1 & sent3 -> int2', ' There are 120 + 60 = 180 students in total']
lhs_ids:['int1', 'sent3']	 rhs = int2	 all_ancestors={'sent1', 'sent3'}
	 rhs = int2, int_str=there are 120 + 60 = 180 students in total
step: int2 & sent4 -> int3: If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers
step_parts:['int2 & sent4 -> int3', ' If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers']
lhs_ids:['int2', 'sent4']	 rhs = int3	 all_ancestors={'sent1', 'sent3', 'sent4'}
	 rhs = int3, int_str=if there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers
step: int3 & sent5 -> hypothesis
step_parts:['int3 & sent5 -> hypothesis']
lhs_ids:['int3', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 36
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent3 -> int1: There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys; int1 & sent3 -> int2: There are 120 + 60 = 180 students in total; int2 & sent4 -> int3: If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers; int3 & sent5 -> hypothesis;
	sentences:['sent1 & sent3 -> int1', 'int1 & sent3 -> int2', 'int2 & sent4 -> int3', 'int3 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent3']}, {'int': 'int2', 'ancestors': ['sent1', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent1', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'there are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys', 'int2': 'there are 120 + 60 = 180 students in total', 'int3': 'if there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers', 'hypothesis': 'the answer is 36'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'hypothesis', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'hypothesis', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent3', 'sent4', 'sent5'}
relevant_sentences_gold:{'sent1', 'sent3', 'sent4', 'sent5'}
		sentences:['sent1', 'sent3', 'sent4', 'sent5']
		sentences_gold:['sent1', 'sent3', 'sent4', 'sent5']
		sentences:['hypothesis & sent5 -> hypothesis', 'int1 & sent4 -> int3', 'int3 & sent3 & sent5 -> hypothesis', 'sent1 & sent3 -> int1']
		sentences_gold:['int1 & sent3 -> int2', 'int2 & sent4 -> int3', 'int3 & sent5 -> hypothesis', 'sent1 & sent3 -> int1']
step:sent1 & sent3 -> int1: There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys
QID:GSM8K_68_e7bde02c2e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys', 'int2': 'There are 120 + 60 = 180 students in total', 'int3': 'If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers', 'hypothesis': 'The answer is 36'}
step:sent1 & sent3 -> int1: There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys
QID:GSM8K_68_e7bde02c2e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys', 'int2': 'There are 120 + 60 = 180 students in total', 'int3': 'If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers', 'hypothesis': 'The answer is 36'}
step:sent1 & sent3 -> int1: There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys
step:int1 & sent3 -> int2: There are 120 + 60 = 180 students in total
QID:GSM8K_68_e7bde02c2e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys', 'int2': 'There are 120 + 60 = 180 students in total', 'int3': 'If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers', 'hypothesis': 'The answer is 36'}
step:int1 & sent3 -> int2: There are 120 + 60 = 180 students in total
QID:GSM8K_68_e7bde02c2e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys', 'int2': 'There are 120 + 60 = 180 students in total', 'int3': 'If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers', 'hypothesis': 'The answer is 36'}
step:int1 & sent3 -> int2: There are 120 + 60 = 180 students in total
step:int2 & sent4 -> int3: If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers
QID:GSM8K_68_e7bde02c2e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys', 'int2': 'There are 120 + 60 = 180 students in total', 'int3': 'If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers', 'hypothesis': 'The answer is 36'}
step:int2 & sent4 -> int3: If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers
QID:GSM8K_68_e7bde02c2e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys', 'int2': 'There are 120 + 60 = 180 students in total', 'int3': 'If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers', 'hypothesis': 'The answer is 36'}
step:int2 & sent4 -> int3: If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers
step:int3 & sent5 -> hypothesis
QID:GSM8K_68_e7bde02c2e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys', 'int2': 'There are 120 + 60 = 180 students in total', 'int3': 'If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers', 'hypothesis': 'The answer is 36'}
step:int3 & sent5 -> hypothesis
QID:GSM8K_68_e7bde02c2e
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'There are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys', 'int2': 'There are 120 + 60 = 180 students in total', 'int3': 'If there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers', 'hypothesis': 'The answer is 36'}
step:int3 & sent5 -> hypothesis
step:sent3 & sent1 -> int1: Dr. Wertz taught 60 x 2 = 180 boys.
step:int1 & sent4 -> int2: There are 5 x 5 = 15 students at every teacher.
step:int2 & sent5 & sent3 -> int3: Therefore, there are 60 + 15 = 36 teachers.
step:int3 & sent5 -> hypothesis



======================

pred:sent2 -> int1: For 8 weeks, Bailey receives a weekly allowance of $5.; int1 & sent4 & sent3 -> int2: At the end of the 8 weeks, Bailey has $100 - $5 = $60.; sent5 & int2 -> hypothesis
gold:sent2 -> int1: In 8 weeks, Bailey receives $5 * 8 = $40 in allowance; int1 & sent3 & sent4 -> int2: Bailey started with $100 - $40 = $60; int2 & sent3 & sent4 & sent5 -> hypothesis;



======================

Reading predicted proof
step:sent2 -> int1: For 8 weeks, Bailey receives a weekly allowance of $5.
step_parts:['sent2 -> int1', ' For 8 weeks, Bailey receives a weekly allowance of $5.']
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=for 8 weeks, bailey receives a weekly allowance of $5
step: int1 & sent4 & sent3 -> int2: At the end of the 8 weeks, Bailey has $100 - $5 = $60.
step_parts:['int1 & sent4 & sent3 -> int2', ' At the end of the 8 weeks, Bailey has $100 - $5 = $60.']
lhs_ids:['int1', 'sent4', 'sent3']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int2, int_str=at the end of the 8 weeks, bailey has $100 - $5 = $60
step: sent5 & int2 -> hypothesis
step_parts:['sent5 & int2 -> hypothesis']
lhs_ids:['sent5', 'int2']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 60
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: For 8 weeks, Bailey receives a weekly allowance of $5.; int1 & sent4 & sent3 -> int2: At the end of the 8 weeks, Bailey has $100 - $5 = $60.; sent5 & int2 -> hypothesis
	sentences:['sent2 -> int1', 'int1 & sent3 & sent4 -> int2', 'int2 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'for 8 weeks, bailey receives a weekly allowance of $5', 'int2': 'at the end of the 8 weeks, bailey has $100 - $5 = $60', 'hypothesis': 'the answer is 60'}



||||||||||||||||||||||

Reading gold proof
step:sent2 -> int1: In 8 weeks, Bailey receives $5 * 8 = $40 in allowance
step_parts:['sent2 -> int1', ' In 8 weeks, Bailey receives $5 * 8 = $40 in allowance']
lhs_ids:['sent2']	 rhs = int1	 all_ancestors={'sent2'}
	 rhs = int1, int_str=in 8 weeks, bailey receives $5 * 8 = $40 in allowance
step: int1 & sent3 & sent4 -> int2: Bailey started with $100 - $40 = $60
step_parts:['int1 & sent3 & sent4 -> int2', ' Bailey started with $100 - $40 = $60']
lhs_ids:['int1', 'sent3', 'sent4']	 rhs = int2	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int2, int_str=bailey started with $100 - $40 = $60
step: int2 & sent3 & sent4 & sent5 -> hypothesis
step_parts:['int2 & sent3 & sent4 & sent5 -> hypothesis']
lhs_ids:['int2', 'sent3', 'sent4', 'sent5']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4', 'sent5'}
	 rhs = hypothesis, int_str=the answer is 60
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 -> int1: In 8 weeks, Bailey receives $5 * 8 = $40 in allowance; int1 & sent3 & sent4 -> int2: Bailey started with $100 - $40 = $60; int2 & sent3 & sent4 & sent5 -> hypothesis;
	sentences:['sent2 -> int1', 'int1 & sent3 & sent4 -> int2', 'int2 & sent3 & sent4 & sent5 -> hypothesis']
	inferences:[{'lhs': ['sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent3', 'sent4'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3', 'sent4', 'sent5'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4', 'sent5']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent5'}
	id_to_int:{'int1': 'in 8 weeks, bailey receives $5 * 8 = $40 in allowance', 'int2': 'bailey started with $100 - $40 = $60', 'hypothesis': 'the answer is 60'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int2', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4', 'sent5'}
relevant_sentences_gold:{'sent2', 'sent3', 'sent4', 'sent5'}
		sentences:['sent2', 'sent3', 'sent4', 'sent5']
		sentences_gold:['sent2', 'sent3', 'sent4', 'sent5']
		sentences:['int1 & sent3 & sent4 -> int2', 'int2 & sent5 -> hypothesis', 'sent2 -> int1']
		sentences_gold:['int1 & sent3 & sent4 -> int2', 'int2 & sent3 & sent4 & sent5 -> hypothesis', 'sent2 -> int1']
step:sent2 -> int1: In 8 weeks, Bailey receives $5 * 8 = $40 in allowance
QID:GSM8K_69_3b456d32d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'In 8 weeks, Bailey receives $5 * 8 = $40 in allowance', 'int2': 'Bailey started with $100 - $40 = $60', 'hypothesis': 'The answer is 60'}
step:sent2 -> int1: In 8 weeks, Bailey receives $5 * 8 = $40 in allowance
step:int1 & sent3 & sent4 -> int2: Bailey started with $100 - $40 = $60
QID:GSM8K_69_3b456d32d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'In 8 weeks, Bailey receives $5 * 8 = $40 in allowance', 'int2': 'Bailey started with $100 - $40 = $60', 'hypothesis': 'The answer is 60'}
step:int1 & sent3 & sent4 -> int2: Bailey started with $100 - $40 = $60
QID:GSM8K_69_3b456d32d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'In 8 weeks, Bailey receives $5 * 8 = $40 in allowance', 'int2': 'Bailey started with $100 - $40 = $60', 'hypothesis': 'The answer is 60'}
step:int1 & sent3 & sent4 -> int2: Bailey started with $100 - $40 = $60
QID:GSM8K_69_3b456d32d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'In 8 weeks, Bailey receives $5 * 8 = $40 in allowance', 'int2': 'Bailey started with $100 - $40 = $60', 'hypothesis': 'The answer is 60'}
step:int1 & sent3 & sent4 -> int2: Bailey started with $100 - $40 = $60
step:int2 & sent3 & sent4 & sent5 -> hypothesis
QID:GSM8K_69_3b456d32d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'In 8 weeks, Bailey receives $5 * 8 = $40 in allowance', 'int2': 'Bailey started with $100 - $40 = $60', 'hypothesis': 'The answer is 60'}
step:int2 & sent3 & sent4 & sent5 -> hypothesis
QID:GSM8K_69_3b456d32d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'In 8 weeks, Bailey receives $5 * 8 = $40 in allowance', 'int2': 'Bailey started with $100 - $40 = $60', 'hypothesis': 'The answer is 60'}
step:int2 & sent3 & sent4 & sent5 -> hypothesis
QID:GSM8K_69_3b456d32d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'In 8 weeks, Bailey receives $5 * 8 = $40 in allowance', 'int2': 'Bailey started with $100 - $40 = $60', 'hypothesis': 'The answer is 60'}
step:int2 & sent3 & sent4 & sent5 -> hypothesis
QID:GSM8K_69_3b456d32d8
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'In 8 weeks, Bailey receives $5 * 8 = $40 in allowance', 'int2': 'Bailey started with $100 - $40 = $60', 'hypothesis': 'The answer is 60'}
step:int2 & sent3 & sent4 & sent5 -> hypothesis
step:sent2 -> int1: For 8 weeks, Bailey receives a weekly allowance of $5.
step:int1 & sent4 & sent3 -> int2: At the end of the 8 weeks, Bailey has $100 - $5 = $60.
step:sent5 & int2 -> hypothesis



======================

pred:sent1 -> int1: She teaches 8 classes * 15 students = 120 students.; sent2 & sent1 -> int2: She teaches 5 classes * 15 students = 45 students.; int1 & int2 -> int3: So she makes 45 students * 120 students = $335.; sent3 & int3 -> int4: She makes $335 * $15.00 per student = $7425.; sent4 & int4 -> hypothesis
gold:sent1 -> int1: She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes; int1 & sent1 -> int2: She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes; int2 & sent2 -> int3: There are 15 students in each of the 33 classes so there are 15*33 = 495 students; int3 & sent3 -> int4: Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425; int4 & sent2 & sent3 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent1 -> int1: She teaches 8 classes * 15 students = 120 students.
step_parts:['sent1 -> int1', ' She teaches 8 classes * 15 students = 120 students.']
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=she teaches 8 classes * 15 students = 120 students
step: sent2 & sent1 -> int2: She teaches 5 classes * 15 students = 45 students.
step_parts:['sent2 & sent1 -> int2', ' She teaches 5 classes * 15 students = 45 students.']
lhs_ids:['sent2', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=she teaches 5 classes * 15 students = 45 students
step: int1 & int2 -> int3: So she makes 45 students * 120 students = $335.
step_parts:['int1 & int2 -> int3', ' So she makes 45 students * 120 students = $335.']
lhs_ids:['int1', 'int2']	 rhs = int3	 all_ancestors={'sent1', 'sent2'}
	 rhs = int3, int_str=so she makes 45 students * 120 students = $335
step: sent3 & int3 -> int4: She makes $335 * $15.00 per student = $7425.
step_parts:['sent3 & int3 -> int4', ' She makes $335 * $15.00 per student = $7425.']
lhs_ids:['sent3', 'int3']	 rhs = int4	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int4, int_str=she makes $335 * $1500 per student = $7425
step: sent4 & int4 -> hypothesis
step_parts:['sent4 & int4 -> hypothesis']
lhs_ids:['sent4', 'int4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent4', 'sent3', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 7425
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: She teaches 8 classes * 15 students = 120 students.; sent2 & sent1 -> int2: She teaches 5 classes * 15 students = 45 students.; int1 & int2 -> int3: So she makes 45 students * 120 students = $335.; sent3 & int3 -> int4: She makes $335 * $15.00 per student = $7425.; sent4 & int4 -> hypothesis
	sentences:['sent1 -> int1', 'sent1 & sent2 -> int2', 'int1 & int2 -> int3', 'int3 & sent3 -> int4', 'int4 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['sent1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2']}, {'int': 'int4', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent4', 'sent3', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'she teaches 8 classes * 15 students = 120 students', 'int2': 'she teaches 5 classes * 15 students = 45 students', 'int3': 'so she makes 45 students * 120 students = $335', 'int4': 'she makes $335 * $1500 per student = $7425', 'hypothesis': 'the answer is 7425'}



||||||||||||||||||||||

Reading gold proof
step:sent1 -> int1: She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes
step_parts:['sent1 -> int1', " She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes"]
lhs_ids:['sent1']	 rhs = int1	 all_ancestors={'sent1'}
	 rhs = int1, int_str=she teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes
step: int1 & sent1 -> int2: She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes
step_parts:['int1 & sent1 -> int2', ' She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent1'}
	 rhs = int2, int_str=she teaches 25 classes during the week and 8 classes on saturday for a total of 25+8 = 33 classes
step: int2 & sent2 -> int3: There are 15 students in each of the 33 classes so there are 15*33 = 495 students
step_parts:['int2 & sent2 -> int3', ' There are 15 students in each of the 33 classes so there are 15*33 = 495 students']
lhs_ids:['int2', 'sent2']	 rhs = int3	 all_ancestors={'sent1', 'sent2'}
	 rhs = int3, int_str=there are 15 students in each of the 33 classes so there are 15*33 = 495 students
step: int3 & sent3 -> int4: Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425
step_parts:['int3 & sent3 -> int4', ' Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425']
lhs_ids:['int3', 'sent3']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int4, int_str=each student pays $1500 per class and there are 495 students so judy makes 15*495 = $7,425
step: int4 & sent2 & sent3 & sent4 -> hypothesis
step_parts:['int4 & sent2 & sent3 & sent4 -> hypothesis']
lhs_ids:['int4', 'sent2', 'sent3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 7425
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 -> int1: She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes; int1 & sent1 -> int2: She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes; int2 & sent2 -> int3: There are 15 students in each of the 33 classes so there are 15*33 = 495 students; int3 & sent3 -> int4: Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425; int4 & sent2 & sent3 & sent4 -> hypothesis;
	sentences:['sent1 -> int1', 'int1 & sent1 -> int2', 'int2 & sent2 -> int3', 'int3 & sent3 -> int4', 'int4 & sent2 & sent3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent2', 'sent3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1']}, {'int': 'int2', 'ancestors': ['sent1']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': "she teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", 'int2': 'she teaches 25 classes during the week and 8 classes on saturday for a total of 25+8 = 33 classes', 'int3': 'there are 15 students in each of the 33 classes so there are 15*33 = 495 students', 'int4': 'each student pays $1500 per class and there are 495 students so judy makes 15*495 = $7,425', 'hypothesis': 'the answer is 7425'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'int3', 'int4': 'int4', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int3', 'int3': 'int3', 'int4': 'int4', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['int1 & int3 -> int3', 'int3 & sent3 -> int4', 'int4 & sent4 -> hypothesis', 'sent1 & sent2 -> int3', 'sent1 -> int1']
		sentences_gold:['int1 & sent1 -> int2', 'int2 & sent2 -> int3', 'int3 & sent3 -> int4', 'int4 & sent2 & sent3 & sent4 -> hypothesis', 'sent1 -> int1']
step:sent1 -> int1: She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes
QID:GSM8K_70_5540274292
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", 'int2': 'She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes', 'int3': 'There are 15 students in each of the 33 classes so there are 15*33 = 495 students', 'int4': 'Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425', 'hypothesis': 'The answer is 7425'}
step:sent1 -> int1: She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes
step:int1 & sent1 -> int2: She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes
QID:GSM8K_70_5540274292
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", 'int2': 'She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes', 'int3': 'There are 15 students in each of the 33 classes so there are 15*33 = 495 students', 'int4': 'Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425', 'hypothesis': 'The answer is 7425'}
step:int1 & sent1 -> int2: She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes
QID:GSM8K_70_5540274292
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", 'int2': 'She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes', 'int3': 'There are 15 students in each of the 33 classes so there are 15*33 = 495 students', 'int4': 'Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425', 'hypothesis': 'The answer is 7425'}
step:int1 & sent1 -> int2: She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes
step:int2 & sent2 -> int3: There are 15 students in each of the 33 classes so there are 15*33 = 495 students
QID:GSM8K_70_5540274292
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", 'int2': 'She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes', 'int3': 'There are 15 students in each of the 33 classes so there are 15*33 = 495 students', 'int4': 'Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425', 'hypothesis': 'The answer is 7425'}
step:int2 & sent2 -> int3: There are 15 students in each of the 33 classes so there are 15*33 = 495 students
QID:GSM8K_70_5540274292
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", 'int2': 'She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes', 'int3': 'There are 15 students in each of the 33 classes so there are 15*33 = 495 students', 'int4': 'Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425', 'hypothesis': 'The answer is 7425'}
step:int2 & sent2 -> int3: There are 15 students in each of the 33 classes so there are 15*33 = 495 students
step:int3 & sent3 -> int4: Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425
QID:GSM8K_70_5540274292
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", 'int2': 'She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes', 'int3': 'There are 15 students in each of the 33 classes so there are 15*33 = 495 students', 'int4': 'Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425', 'hypothesis': 'The answer is 7425'}
step:int3 & sent3 -> int4: Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425
QID:GSM8K_70_5540274292
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", 'int2': 'She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes', 'int3': 'There are 15 students in each of the 33 classes so there are 15*33 = 495 students', 'int4': 'Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425', 'hypothesis': 'The answer is 7425'}
step:int3 & sent3 -> int4: Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425
step:int4 & sent2 & sent3 & sent4 -> hypothesis
QID:GSM8K_70_5540274292
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", 'int2': 'She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes', 'int3': 'There are 15 students in each of the 33 classes so there are 15*33 = 495 students', 'int4': 'Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425', 'hypothesis': 'The answer is 7425'}
step:int4 & sent2 & sent3 & sent4 -> hypothesis
QID:GSM8K_70_5540274292
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", 'int2': 'She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes', 'int3': 'There are 15 students in each of the 33 classes so there are 15*33 = 495 students', 'int4': 'Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425', 'hypothesis': 'The answer is 7425'}
step:int4 & sent2 & sent3 & sent4 -> hypothesis
QID:GSM8K_70_5540274292
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", 'int2': 'She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes', 'int3': 'There are 15 students in each of the 33 classes so there are 15*33 = 495 students', 'int4': 'Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425', 'hypothesis': 'The answer is 7425'}
step:int4 & sent2 & sent3 & sent4 -> hypothesis
QID:GSM8K_70_5540274292
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': "She teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", 'int2': 'She teaches 25 classes during the week and 8 classes on Saturday for a total of 25+8 = 33 classes', 'int3': 'There are 15 students in each of the 33 classes so there are 15*33 = 495 students', 'int4': 'Each student pays $15.00 per class and there are 495 students so Judy makes 15*495 = $7,425', 'hypothesis': 'The answer is 7425'}
step:int4 & sent2 & sent3 & sent4 -> hypothesis
step:sent1 -> int1: She teaches 8 classes * 15 students = 120 students.
step:sent2 & sent1 -> int2: She teaches 5 classes * 15 students = 45 students.
step:int1 & int2 -> int3: So she makes 45 students * 120 students = $335.
step:sent3 & int3 -> int4: She makes $335 * $15.00 per student = $7425.
step:sent4 & int4 -> hypothesis



======================

pred:sent2 & sent3 -> int1: The second recipe has 2 * 20 = 40 instructions.; sent2 & int1 -> int2: So, Kelian has to read 20 + 40 = 60 instructions.; int2 & sent4 -> hypothesis
gold:sent2 & sent3 -> int1: The second recipe has 2 * 20 instructions = 40 instructions.; int1 & sent2 -> int2: The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.; int2 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent2 & sent3 -> int1: The second recipe has 2 * 20 = 40 instructions.
step_parts:['sent2 & sent3 -> int1', ' The second recipe has 2 * 20 = 40 instructions.']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=the second recipe has 2 * 20 = 40 instructions
step: sent2 & int1 -> int2: So, Kelian has to read 20 + 40 = 60 instructions.
step_parts:['sent2 & int1 -> int2', ' So, Kelian has to read 20 + 40 = 60 instructions.']
lhs_ids:['sent2', 'int1']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=so, kelian has to read 20 + 40 = 60 instructions
step: int2 & sent4 -> hypothesis
step_parts:['int2 & sent4 -> hypothesis']
lhs_ids:['int2', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 60
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: The second recipe has 2 * 20 = 40 instructions.; sent2 & int1 -> int2: So, Kelian has to read 20 + 40 = 60 instructions.; int2 & sent4 -> hypothesis
	sentences:['sent2 & sent3 -> int1', 'int1 & sent2 -> int2', 'int2 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'the second recipe has 2 * 20 = 40 instructions', 'int2': 'so, kelian has to read 20 + 40 = 60 instructions', 'hypothesis': 'the answer is 60'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent3 -> int1: The second recipe has 2 * 20 instructions = 40 instructions.
step_parts:['sent2 & sent3 -> int1', ' The second recipe has 2 * 20 instructions = 40 instructions.']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=the second recipe has 2 * 20 instructions = 40 instructions
step: int1 & sent2 -> int2: The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.
step_parts:['int1 & sent2 -> int2', ' The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=the total for the two dishes is 40 instructions + 20 instructions = 60 instructions
step: int2 & sent4 -> hypothesis
step_parts:['int2 & sent4 -> hypothesis']
lhs_ids:['int2', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 60
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: The second recipe has 2 * 20 instructions = 40 instructions.; int1 & sent2 -> int2: The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.; int2 & sent4 -> hypothesis;
	sentences:['sent2 & sent3 -> int1', 'int1 & sent2 -> int2', 'int2 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'the second recipe has 2 * 20 instructions = 40 instructions', 'int2': 'the total for the two dishes is 40 instructions + 20 instructions = 60 instructions', 'hypothesis': 'the answer is 60'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'hypothesis': 'hypothesis'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'hypothesis': 'hypothesis'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent2', 'sent3', 'sent4'}
		sentences:['sent2', 'sent3', 'sent4']
		sentences_gold:['sent2', 'sent3', 'sent4']
		sentences:['int1 & sent2 -> int1', 'int1 & sent4 -> hypothesis', 'sent2 & sent3 -> int1']
		sentences_gold:['int1 & sent2 -> int2', 'int2 & sent4 -> hypothesis', 'sent2 & sent3 -> int1']
step:sent2 & sent3 -> int1: The second recipe has 2 * 20 instructions = 40 instructions.
QID:GSM8K_71_c4f2bf54b1
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second recipe has 2 * 20 instructions = 40 instructions.', 'int2': 'The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.', 'hypothesis': 'The answer is 60'}
step:sent2 & sent3 -> int1: The second recipe has 2 * 20 instructions = 40 instructions.
QID:GSM8K_71_c4f2bf54b1
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second recipe has 2 * 20 instructions = 40 instructions.', 'int2': 'The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.', 'hypothesis': 'The answer is 60'}
step:sent2 & sent3 -> int1: The second recipe has 2 * 20 instructions = 40 instructions.
step:int1 & sent2 -> int2: The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.
QID:GSM8K_71_c4f2bf54b1
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second recipe has 2 * 20 instructions = 40 instructions.', 'int2': 'The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.', 'hypothesis': 'The answer is 60'}
step:int1 & sent2 -> int2: The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.
QID:GSM8K_71_c4f2bf54b1
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second recipe has 2 * 20 instructions = 40 instructions.', 'int2': 'The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.', 'hypothesis': 'The answer is 60'}
step:int1 & sent2 -> int2: The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.
step:int2 & sent4 -> hypothesis
QID:GSM8K_71_c4f2bf54b1
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second recipe has 2 * 20 instructions = 40 instructions.', 'int2': 'The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.', 'hypothesis': 'The answer is 60'}
step:int2 & sent4 -> hypothesis
QID:GSM8K_71_c4f2bf54b1
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'The second recipe has 2 * 20 instructions = 40 instructions.', 'int2': 'The total for the two dishes is 40 instructions + 20 instructions = 60 instructions.', 'hypothesis': 'The answer is 60'}
step:int2 & sent4 -> hypothesis
step:sent2 & sent3 -> int1: The second recipe has 2 * 20 = 40 instructions.
step:sent2 & int1 -> int2: So, Kelian has to read 20 + 40 = 60 instructions.
step:int2 & sent4 -> hypothesis



======================

pred:sent3 & sent2 -> int1: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $63; sent3 & sent2 -> int2: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $76; sent3 & sent2 -> int3: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $69; sent3 & sent1 -> int4: Tommy sells 43 brownies at $3 a slice, for a total of 43 * $3 = $63; int2 & int3 & sent1 -> int5: After selling the brownies, Tommy has raised $69 + $76 = $221; int3 & int4 & int1 -> int6: In total, he raises $63 + $69 = $221; int5 & sent4 & int6 -> hypothesis
gold:sent1 & sent3 -> int1: Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.; sent2 & sent3 -> int2: Tommy raised 23 slices x $4 = $92 by selling cheesecakes.; int1 & int2 & sent4 -> int3: In total Tommy has raised $129 + $92 = $221; int3 & sent3 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent2 -> int1: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $63
step_parts:['sent3 & sent2 -> int1', ' He also sells 23 slices of cheesecake, for a total of 23 * $4 = $63']
lhs_ids:['sent3', 'sent2']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=he also sells 23 slices of cheesecake, for a total of 23 * $4 = $63
step: sent3 & sent2 -> int2: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $76
step_parts:['sent3 & sent2 -> int2', ' He also sells 23 slices of cheesecake, for a total of 23 * $4 = $76']
lhs_ids:['sent3', 'sent2']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=he also sells 23 slices of cheesecake, for a total of 23 * $4 = $76
step: sent3 & sent2 -> int3: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $69
step_parts:['sent3 & sent2 -> int3', ' He also sells 23 slices of cheesecake, for a total of 23 * $4 = $69']
lhs_ids:['sent3', 'sent2']	 rhs = int3	 all_ancestors={'sent2', 'sent3'}
	 rhs = int3, int_str=he also sells 23 slices of cheesecake, for a total of 23 * $4 = $69
step: sent3 & sent1 -> int4: Tommy sells 43 brownies at $3 a slice, for a total of 43 * $3 = $63
step_parts:['sent3 & sent1 -> int4', ' Tommy sells 43 brownies at $3 a slice, for a total of 43 * $3 = $63']
lhs_ids:['sent3', 'sent1']	 rhs = int4	 all_ancestors={'sent1', 'sent3'}
	 rhs = int4, int_str=tommy sells 43 brownies at $3 a slice, for a total of 43 * $3 = $63
step: int2 & int3 & sent1 -> int5: After selling the brownies, Tommy has raised $69 + $76 = $221
step_parts:['int2 & int3 & sent1 -> int5', ' After selling the brownies, Tommy has raised $69 + $76 = $221']
lhs_ids:['int2', 'int3', 'sent1']	 rhs = int5	 all_ancestors={'sent2', 'sent3', 'sent1'}
	 rhs = int5, int_str=after selling the brownies, tommy has raised $69 + $76 = $221
step: int3 & int4 & int1 -> int6: In total, he raises $63 + $69 = $221
step_parts:['int3 & int4 & int1 -> int6', ' In total, he raises $63 + $69 = $221']
lhs_ids:['int3', 'int4', 'int1']	 rhs = int6	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int6, int_str=in total, he raises $63 + $69 = $221
step: int5 & sent4 & int6 -> hypothesis
step_parts:['int5 & sent4 & int6 -> hypothesis']
lhs_ids:['int5', 'sent4', 'int6']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent4', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 221
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent2 -> int1: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $63; sent3 & sent2 -> int2: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $76; sent3 & sent2 -> int3: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $69; sent3 & sent1 -> int4: Tommy sells 43 brownies at $3 a slice, for a total of 43 * $3 = $63; int2 & int3 & sent1 -> int5: After selling the brownies, Tommy has raised $69 + $76 = $221; int3 & int4 & int1 -> int6: In total, he raises $63 + $69 = $221; int5 & sent4 & int6 -> hypothesis
	sentences:['sent2 & sent3 -> int1', 'sent2 & sent3 -> int2', 'sent2 & sent3 -> int3', 'sent1 & sent3 -> int4', 'int2 & int3 & sent1 -> int5', 'int1 & int3 & int4 -> int6', 'int5 & int6 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent3'], 'rhs': 'int2'}, {'lhs': ['sent2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['sent1', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int2', 'int3', 'sent1'], 'rhs': 'int5'}, {'lhs': ['int1', 'int3', 'int4'], 'rhs': 'int6'}, {'lhs': ['int5', 'int6', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3']}, {'int': 'int4', 'ancestors': ['sent1', 'sent3']}, {'int': 'int5', 'ancestors': ['sent2', 'sent3', 'sent1']}, {'int': 'int6', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent4', 'sent3']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4', 'sent1'}
	id_to_int:{'int1': 'he also sells 23 slices of cheesecake, for a total of 23 * $4 = $63', 'int2': 'he also sells 23 slices of cheesecake, for a total of 23 * $4 = $76', 'int3': 'he also sells 23 slices of cheesecake, for a total of 23 * $4 = $69', 'int4': 'tommy sells 43 brownies at $3 a slice, for a total of 43 * $3 = $63', 'int5': 'after selling the brownies, tommy has raised $69 + $76 = $221', 'int6': 'in total, he raises $63 + $69 = $221', 'hypothesis': 'the answer is 221'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent3 -> int1: Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.
step_parts:['sent1 & sent3 -> int1', ' Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.']
lhs_ids:['sent1', 'sent3']	 rhs = int1	 all_ancestors={'sent1', 'sent3'}
	 rhs = int1, int_str=tommy raised 43 brownies x $3/brownie = $129 by selling brownies
step: sent2 & sent3 -> int2: Tommy raised 23 slices x $4 = $92 by selling cheesecakes.
step_parts:['sent2 & sent3 -> int2', ' Tommy raised 23 slices x $4 = $92 by selling cheesecakes.']
lhs_ids:['sent2', 'sent3']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=tommy raised 23 slices x $4 = $92 by selling cheesecakes
step: int1 & int2 & sent4 -> int3: In total Tommy has raised $129 + $92 = $221
step_parts:['int1 & int2 & sent4 -> int3', ' In total Tommy has raised $129 + $92 = $221']
lhs_ids:['int1', 'int2', 'sent4']	 rhs = int3	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent4'}
	 rhs = int3, int_str=in total tommy has raised $129 + $92 = $221
step: int3 & sent3 & sent4 -> hypothesis
step_parts:['int3 & sent3 & sent4 -> hypothesis']
lhs_ids:['int3', 'sent3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 221
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent3 -> int1: Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.; sent2 & sent3 -> int2: Tommy raised 23 slices x $4 = $92 by selling cheesecakes.; int1 & int2 & sent4 -> int3: In total Tommy has raised $129 + $92 = $221; int3 & sent3 & sent4 -> hypothesis;
	sentences:['sent1 & sent3 -> int1', 'sent2 & sent3 -> int2', 'int1 & int2 & sent4 -> int3', 'int3 & sent3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent3'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int1', 'int2', 'sent4'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2', 'sent4']}]
	relevant_sentences:{'sent1', 'sent3', 'sent2', 'sent4'}
	id_to_int:{'int1': 'tommy raised 43 brownies x $3/brownie = $129 by selling brownies', 'int2': 'tommy raised 23 slices x $4 = $92 by selling cheesecakes', 'int3': 'in total tommy has raised $129 + $92 = $221', 'hypothesis': 'the answer is 221'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'int3': 'int2', 'int4': 'int1', 'int5': 'int3', 'int6': 'int3', 'hypothesis': 'int3'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int2', 'int2': 'int2', 'int3': 'int2', 'int4': 'int1', 'int5': 'int3', 'int6': 'int3', 'hypothesis': 'int3'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4', 'sent1'}
relevant_sentences_gold:{'sent1', 'sent3', 'sent2', 'sent4'}
		sentences:['sent1', 'sent2', 'sent3', 'sent4']
		sentences_gold:['sent1', 'sent2', 'sent3', 'sent4']
		sentences:['int1 & int2 & int2 -> int3', 'int2 & int2 & sent1 -> int3', 'int3 & int3 & sent4 -> int3', 'sent1 & sent3 -> int1', 'sent2 & sent3 -> int2', 'sent2 & sent3 -> int2', 'sent2 & sent3 -> int2']
		sentences_gold:['int1 & int2 & sent4 -> int3', 'int3 & sent3 & sent4 -> hypothesis', 'sent1 & sent3 -> int1', 'sent2 & sent3 -> int2']
step:sent1 & sent3 -> int1: Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.
QID:GSM8K_72_53c969e291
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.', 'int2': 'Tommy raised 23 slices x $4 = $92 by selling cheesecakes.', 'int3': 'In total Tommy has raised $129 + $92 = $221', 'hypothesis': 'The answer is 221'}
step:sent1 & sent3 -> int1: Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.
QID:GSM8K_72_53c969e291
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.', 'int2': 'Tommy raised 23 slices x $4 = $92 by selling cheesecakes.', 'int3': 'In total Tommy has raised $129 + $92 = $221', 'hypothesis': 'The answer is 221'}
step:sent1 & sent3 -> int1: Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.
step:sent2 & sent3 -> int2: Tommy raised 23 slices x $4 = $92 by selling cheesecakes.
QID:GSM8K_72_53c969e291
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.', 'int2': 'Tommy raised 23 slices x $4 = $92 by selling cheesecakes.', 'int3': 'In total Tommy has raised $129 + $92 = $221', 'hypothesis': 'The answer is 221'}
step:sent2 & sent3 -> int2: Tommy raised 23 slices x $4 = $92 by selling cheesecakes.
QID:GSM8K_72_53c969e291
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.', 'int2': 'Tommy raised 23 slices x $4 = $92 by selling cheesecakes.', 'int3': 'In total Tommy has raised $129 + $92 = $221', 'hypothesis': 'The answer is 221'}
step:sent2 & sent3 -> int2: Tommy raised 23 slices x $4 = $92 by selling cheesecakes.
step:int1 & int2 & sent4 -> int3: In total Tommy has raised $129 + $92 = $221
QID:GSM8K_72_53c969e291
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.', 'int2': 'Tommy raised 23 slices x $4 = $92 by selling cheesecakes.', 'int3': 'In total Tommy has raised $129 + $92 = $221', 'hypothesis': 'The answer is 221'}
step:int1 & int2 & sent4 -> int3: In total Tommy has raised $129 + $92 = $221
QID:GSM8K_72_53c969e291
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.', 'int2': 'Tommy raised 23 slices x $4 = $92 by selling cheesecakes.', 'int3': 'In total Tommy has raised $129 + $92 = $221', 'hypothesis': 'The answer is 221'}
step:int1 & int2 & sent4 -> int3: In total Tommy has raised $129 + $92 = $221
QID:GSM8K_72_53c969e291
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.', 'int2': 'Tommy raised 23 slices x $4 = $92 by selling cheesecakes.', 'int3': 'In total Tommy has raised $129 + $92 = $221', 'hypothesis': 'The answer is 221'}
step:int1 & int2 & sent4 -> int3: In total Tommy has raised $129 + $92 = $221
step:int3 & sent3 & sent4 -> hypothesis
QID:GSM8K_72_53c969e291
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.', 'int2': 'Tommy raised 23 slices x $4 = $92 by selling cheesecakes.', 'int3': 'In total Tommy has raised $129 + $92 = $221', 'hypothesis': 'The answer is 221'}
step:int3 & sent3 & sent4 -> hypothesis
QID:GSM8K_72_53c969e291
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.', 'int2': 'Tommy raised 23 slices x $4 = $92 by selling cheesecakes.', 'int3': 'In total Tommy has raised $129 + $92 = $221', 'hypothesis': 'The answer is 221'}
step:int3 & sent3 & sent4 -> hypothesis
QID:GSM8K_72_53c969e291
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Tommy raised 43 brownies x $3/brownie = $129 by selling brownies.', 'int2': 'Tommy raised 23 slices x $4 = $92 by selling cheesecakes.', 'int3': 'In total Tommy has raised $129 + $92 = $221', 'hypothesis': 'The answer is 221'}
step:int3 & sent3 & sent4 -> hypothesis
step:sent3 & sent2 -> int1: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $63
step:sent3 & sent2 -> int2: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $76
step:sent3 & sent2 -> int3: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $69
step:sent3 & sent1 -> int4: Tommy sells 43 brownies at $3 a slice, for a total of 43 * $3 = $63
step:int2 & int3 & sent1 -> int5: After selling the brownies, Tommy has raised $69 + $76 = $221
step:int3 & int4 & int1 -> int6: In total, he raises $63 + $69 = $221
step:int5 & sent4 & int6 -> hypothesis



======================

pred:sent1 & sent2 -> int1: Shira will pay 5*150=$300 for the cell phones.; int1 & sent2 -> int2: The total cost of the cell phones is $300+$220=$450; int2 & sent2 -> int3: The interest will be charged at a rate of 0.2*$450=$25 per month.; sent3 & int3 -> int4: Thus, Shira will pay a total of $250+$25=$255 each month.; int4 & sent3 -> hypothesis
gold:sent1 & sent2 -> int1: A $150 x 2/100 = $3 interest will be charged for each unit.; int1 & sent1 -> int2: So, each cell phone costs $150 + $3 = $153.; int2 & sent1 -> int3: The total amount to be paid for 5 cell phones is $153 x 5 = $765.; int3 & sent3 -> int4: Thus, Shiela will pay $765/3 = $255 each month.; int4 & sent3 -> hypothesis;



======================

Reading predicted proof
step:sent1 & sent2 -> int1: Shira will pay 5*150=$300 for the cell phones.
step_parts:['sent1 & sent2 -> int1', ' Shira will pay 5*150=$300 for the cell phones.']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=shira will pay 5*150=$300 for the cell phones
step: int1 & sent2 -> int2: The total cost of the cell phones is $300+$220=$450
step_parts:['int1 & sent2 -> int2', ' The total cost of the cell phones is $300+$220=$450']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=the total cost of the cell phones is $300+$220=$450
step: int2 & sent2 -> int3: The interest will be charged at a rate of 0.2*$450=$25 per month.
step_parts:['int2 & sent2 -> int3', ' The interest will be charged at a rate of 0.2*$450=$25 per month.']
lhs_ids:['int2', 'sent2']	 rhs = int3	 all_ancestors={'sent1', 'sent2'}
	 rhs = int3, int_str=the interest will be charged at a rate of 02*$450=$25 per month
step: sent3 & int3 -> int4: Thus, Shira will pay a total of $250+$25=$255 each month.
step_parts:['sent3 & int3 -> int4', ' Thus, Shira will pay a total of $250+$25=$255 each month.']
lhs_ids:['sent3', 'int3']	 rhs = int4	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = int4, int_str=thus, shira will pay a total of $250+$25=$255 each month
step: int4 & sent3 -> hypothesis
step_parts:['int4 & sent3 -> hypothesis']
lhs_ids:['int4', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent3', 'sent2'}
	 rhs = hypothesis, int_str=the answer is 255
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: Shira will pay 5*150=$300 for the cell phones.; int1 & sent2 -> int2: The total cost of the cell phones is $300+$220=$450; int2 & sent2 -> int3: The interest will be charged at a rate of 0.2*$450=$25 per month.; sent3 & int3 -> int4: Thus, Shira will pay a total of $250+$25=$255 each month.; int4 & sent3 -> hypothesis
	sentences:['sent1 & sent2 -> int1', 'int1 & sent2 -> int2', 'int2 & sent2 -> int3', 'int3 & sent3 -> int4', 'int4 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2']}, {'int': 'int4', 'ancestors': ['sent1', 'sent3', 'sent2']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent3', 'sent2']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'shira will pay 5*150=$300 for the cell phones', 'int2': 'the total cost of the cell phones is $300+$220=$450', 'int3': 'the interest will be charged at a rate of 02*$450=$25 per month', 'int4': 'thus, shira will pay a total of $250+$25=$255 each month', 'hypothesis': 'the answer is 255'}



||||||||||||||||||||||

Reading gold proof
step:sent1 & sent2 -> int1: A $150 x 2/100 = $3 interest will be charged for each unit.
step_parts:['sent1 & sent2 -> int1', ' A $150 x 2/100 = $3 interest will be charged for each unit.']
lhs_ids:['sent1', 'sent2']	 rhs = int1	 all_ancestors={'sent1', 'sent2'}
	 rhs = int1, int_str=a $150 x 2/100 = $3 interest will be charged for each unit
step: int1 & sent1 -> int2: So, each cell phone costs $150 + $3 = $153.
step_parts:['int1 & sent1 -> int2', ' So, each cell phone costs $150 + $3 = $153.']
lhs_ids:['int1', 'sent1']	 rhs = int2	 all_ancestors={'sent1', 'sent2'}
	 rhs = int2, int_str=so, each cell phone costs $150 + $3 = $153
step: int2 & sent1 -> int3: The total amount to be paid for 5 cell phones is $153 x 5 = $765.
step_parts:['int2 & sent1 -> int3', ' The total amount to be paid for 5 cell phones is $153 x 5 = $765.']
lhs_ids:['int2', 'sent1']	 rhs = int3	 all_ancestors={'sent1', 'sent2'}
	 rhs = int3, int_str=the total amount to be paid for 5 cell phones is $153 x 5 = $765
step: int3 & sent3 -> int4: Thus, Shiela will pay $765/3 = $255 each month.
step_parts:['int3 & sent3 -> int4', ' Thus, Shiela will pay $765/3 = $255 each month.']
lhs_ids:['int3', 'sent3']	 rhs = int4	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = int4, int_str=thus, shiela will pay $765/3 = $255 each month
step: int4 & sent3 -> hypothesis
step_parts:['int4 & sent3 -> hypothesis']
lhs_ids:['int4', 'sent3']	 rhs = hypothesis	 all_ancestors={'sent1', 'sent2', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 255
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent1 & sent2 -> int1: A $150 x 2/100 = $3 interest will be charged for each unit.; int1 & sent1 -> int2: So, each cell phone costs $150 + $3 = $153.; int2 & sent1 -> int3: The total amount to be paid for 5 cell phones is $153 x 5 = $765.; int3 & sent3 -> int4: Thus, Shiela will pay $765/3 = $255 each month.; int4 & sent3 -> hypothesis;
	sentences:['sent1 & sent2 -> int1', 'int1 & sent1 -> int2', 'int2 & sent1 -> int3', 'int3 & sent3 -> int4', 'int4 & sent3 -> hypothesis']
	inferences:[{'lhs': ['sent1', 'sent2'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent1'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent1'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent3'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent1', 'sent2']}, {'int': 'int2', 'ancestors': ['sent1', 'sent2']}, {'int': 'int3', 'ancestors': ['sent1', 'sent2']}, {'int': 'int4', 'ancestors': ['sent1', 'sent2', 'sent3']}, {'int': 'hypothesis', 'ancestors': ['sent1', 'sent2', 'sent3']}]
	relevant_sentences:{'sent1', 'sent2', 'sent3'}
	id_to_int:{'int1': 'a $150 x 2/100 = $3 interest will be charged for each unit', 'int2': 'so, each cell phone costs $150 + $3 = $153', 'int3': 'the total amount to be paid for 5 cell phones is $153 x 5 = $765', 'int4': 'thus, shiela will pay $765/3 = $255 each month', 'hypothesis': 'the answer is 255'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'int4', 'hypothesis': 'int4'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'int4', 'hypothesis': 'int4'}
relevant_sentences_pred:{'sent1', 'sent2', 'sent3'}
relevant_sentences_gold:{'sent1', 'sent2', 'sent3'}
		sentences:['sent1', 'sent2', 'sent3']
		sentences_gold:['sent1', 'sent2', 'sent3']
		sentences:['int1 & sent2 -> int1', 'int1 & sent2 -> int1', 'int1 & sent3 -> int4', 'int4 & sent3 -> int4', 'sent1 & sent2 -> int1']
		sentences_gold:['int1 & sent1 -> int2', 'int2 & sent1 -> int3', 'int3 & sent3 -> int4', 'int4 & sent3 -> hypothesis', 'sent1 & sent2 -> int1']
step:sent1 & sent2 -> int1: A $150 x 2/100 = $3 interest will be charged for each unit.
QID:GSM8K_73_5e0a20f343
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A $150 x 2/100 = $3 interest will be charged for each unit.', 'int2': 'So, each cell phone costs $150 + $3 = $153.', 'int3': 'The total amount to be paid for 5 cell phones is $153 x 5 = $765.', 'int4': 'Thus, Shiela will pay $765/3 = $255 each month.', 'hypothesis': 'The answer is 255'}
step:sent1 & sent2 -> int1: A $150 x 2/100 = $3 interest will be charged for each unit.
QID:GSM8K_73_5e0a20f343
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A $150 x 2/100 = $3 interest will be charged for each unit.', 'int2': 'So, each cell phone costs $150 + $3 = $153.', 'int3': 'The total amount to be paid for 5 cell phones is $153 x 5 = $765.', 'int4': 'Thus, Shiela will pay $765/3 = $255 each month.', 'hypothesis': 'The answer is 255'}
step:sent1 & sent2 -> int1: A $150 x 2/100 = $3 interest will be charged for each unit.
step:int1 & sent1 -> int2: So, each cell phone costs $150 + $3 = $153.
QID:GSM8K_73_5e0a20f343
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A $150 x 2/100 = $3 interest will be charged for each unit.', 'int2': 'So, each cell phone costs $150 + $3 = $153.', 'int3': 'The total amount to be paid for 5 cell phones is $153 x 5 = $765.', 'int4': 'Thus, Shiela will pay $765/3 = $255 each month.', 'hypothesis': 'The answer is 255'}
step:int1 & sent1 -> int2: So, each cell phone costs $150 + $3 = $153.
QID:GSM8K_73_5e0a20f343
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A $150 x 2/100 = $3 interest will be charged for each unit.', 'int2': 'So, each cell phone costs $150 + $3 = $153.', 'int3': 'The total amount to be paid for 5 cell phones is $153 x 5 = $765.', 'int4': 'Thus, Shiela will pay $765/3 = $255 each month.', 'hypothesis': 'The answer is 255'}
step:int1 & sent1 -> int2: So, each cell phone costs $150 + $3 = $153.
step:int2 & sent1 -> int3: The total amount to be paid for 5 cell phones is $153 x 5 = $765.
QID:GSM8K_73_5e0a20f343
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A $150 x 2/100 = $3 interest will be charged for each unit.', 'int2': 'So, each cell phone costs $150 + $3 = $153.', 'int3': 'The total amount to be paid for 5 cell phones is $153 x 5 = $765.', 'int4': 'Thus, Shiela will pay $765/3 = $255 each month.', 'hypothesis': 'The answer is 255'}
step:int2 & sent1 -> int3: The total amount to be paid for 5 cell phones is $153 x 5 = $765.
QID:GSM8K_73_5e0a20f343
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A $150 x 2/100 = $3 interest will be charged for each unit.', 'int2': 'So, each cell phone costs $150 + $3 = $153.', 'int3': 'The total amount to be paid for 5 cell phones is $153 x 5 = $765.', 'int4': 'Thus, Shiela will pay $765/3 = $255 each month.', 'hypothesis': 'The answer is 255'}
step:int2 & sent1 -> int3: The total amount to be paid for 5 cell phones is $153 x 5 = $765.
step:int3 & sent3 -> int4: Thus, Shiela will pay $765/3 = $255 each month.
QID:GSM8K_73_5e0a20f343
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A $150 x 2/100 = $3 interest will be charged for each unit.', 'int2': 'So, each cell phone costs $150 + $3 = $153.', 'int3': 'The total amount to be paid for 5 cell phones is $153 x 5 = $765.', 'int4': 'Thus, Shiela will pay $765/3 = $255 each month.', 'hypothesis': 'The answer is 255'}
step:int3 & sent3 -> int4: Thus, Shiela will pay $765/3 = $255 each month.
QID:GSM8K_73_5e0a20f343
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A $150 x 2/100 = $3 interest will be charged for each unit.', 'int2': 'So, each cell phone costs $150 + $3 = $153.', 'int3': 'The total amount to be paid for 5 cell phones is $153 x 5 = $765.', 'int4': 'Thus, Shiela will pay $765/3 = $255 each month.', 'hypothesis': 'The answer is 255'}
step:int3 & sent3 -> int4: Thus, Shiela will pay $765/3 = $255 each month.
step:int4 & sent3 -> hypothesis
QID:GSM8K_73_5e0a20f343
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A $150 x 2/100 = $3 interest will be charged for each unit.', 'int2': 'So, each cell phone costs $150 + $3 = $153.', 'int3': 'The total amount to be paid for 5 cell phones is $153 x 5 = $765.', 'int4': 'Thus, Shiela will pay $765/3 = $255 each month.', 'hypothesis': 'The answer is 255'}
step:int4 & sent3 -> hypothesis
QID:GSM8K_73_5e0a20f343
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'A $150 x 2/100 = $3 interest will be charged for each unit.', 'int2': 'So, each cell phone costs $150 + $3 = $153.', 'int3': 'The total amount to be paid for 5 cell phones is $153 x 5 = $765.', 'int4': 'Thus, Shiela will pay $765/3 = $255 each month.', 'hypothesis': 'The answer is 255'}
step:int4 & sent3 -> hypothesis
step:sent1 & sent2 -> int1: Shira will pay 5*150=$300 for the cell phones.
step:int1 & sent2 -> int2: The total cost of the cell phones is $300+$220=$450
step:int2 & sent2 -> int3: The interest will be charged at a rate of 0.2*$450=$25 per month.
step:sent3 & int3 -> int4: Thus, Shira will pay a total of $250+$25=$255 each month.
step:int4 & sent3 -> hypothesis



======================

pred:sent8 & sent3 -> int1: Artie sells marigolds for $2.74 per pot, so that's 2.74*12 = $38.; sent9 & sent5 -> int2: He also sells petunias for $1.87 per pot, for a total of 9.87*9 = $18.; sent9 & sent5 -> int3: And he sells begonias for $2.12 per pot, for a total of 17.12*17 = $32.; int2 & int3 & int1 -> int4: In total, he makes 36+18+32 = $88,; sent10 & int4 -> hypothesis
gold:sent3 & sent7 -> int1: Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.; sent4 & sent7 -> int2: Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.; sent5 & sent7 -> int3: Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.; int1 & sent8 -> int4: Artie sells 12 marigolds x $3 = $36; int2 & sent9 -> int5: Artie sells 9 petunias x $2 = $18; int3 & sent9 -> int6: Artie sells 17 begonias x $2 = $34; int4 & int5 & int6 & sent10 -> int7: Altogether, Artie will make $36 + $18 + $34 = $88; int7 & sent10 & sent8 & sent9 -> hypothesis;



======================

Reading predicted proof
step:sent8 & sent3 -> int1: Artie sells marigolds for $2.74 per pot, so that's 2.74*12 = $38.
step_parts:['sent8 & sent3 -> int1', " Artie sells marigolds for $2.74 per pot, so that's 2.74*12 = $38."]
lhs_ids:['sent8', 'sent3']	 rhs = int1	 all_ancestors={'sent8', 'sent3'}
	 rhs = int1, int_str=artie sells marigolds for $274 per pot, so that's 274*12 = $38
step: sent9 & sent5 -> int2: He also sells petunias for $1.87 per pot, for a total of 9.87*9 = $18.
step_parts:['sent9 & sent5 -> int2', ' He also sells petunias for $1.87 per pot, for a total of 9.87*9 = $18.']
lhs_ids:['sent9', 'sent5']	 rhs = int2	 all_ancestors={'sent5', 'sent9'}
	 rhs = int2, int_str=he also sells petunias for $187 per pot, for a total of 987*9 = $18
step: sent9 & sent5 -> int3: And he sells begonias for $2.12 per pot, for a total of 17.12*17 = $32.
step_parts:['sent9 & sent5 -> int3', ' And he sells begonias for $2.12 per pot, for a total of 17.12*17 = $32.']
lhs_ids:['sent9', 'sent5']	 rhs = int3	 all_ancestors={'sent5', 'sent9'}
	 rhs = int3, int_str=and he sells begonias for $212 per pot, for a total of 1712*17 = $32
step: int2 & int3 & int1 -> int4: In total, he makes 36+18+32 = $88,
step_parts:['int2 & int3 & int1 -> int4', ' In total, he makes 36+18+32 = $88,']
lhs_ids:['int2', 'int3', 'int1']	 rhs = int4	 all_ancestors={'sent8', 'sent3', 'sent5', 'sent9'}
	 rhs = int4, int_str=in total, he makes 36+18+32 = $88,
step: sent10 & int4 -> hypothesis
step_parts:['sent10 & int4 -> hypothesis']
lhs_ids:['sent10', 'int4']	 rhs = hypothesis	 all_ancestors={'sent9', 'sent3', 'sent5', 'sent10', 'sent8'}
	 rhs = hypothesis, int_str=the answer is 88
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent8 & sent3 -> int1: Artie sells marigolds for $2.74 per pot, so that's 2.74*12 = $38.; sent9 & sent5 -> int2: He also sells petunias for $1.87 per pot, for a total of 9.87*9 = $18.; sent9 & sent5 -> int3: And he sells begonias for $2.12 per pot, for a total of 17.12*17 = $32.; int2 & int3 & int1 -> int4: In total, he makes 36+18+32 = $88,; sent10 & int4 -> hypothesis
	sentences:['sent3 & sent8 -> int1', 'sent5 & sent9 -> int2', 'sent5 & sent9 -> int3', 'int1 & int2 & int3 -> int4', 'int4 & sent10 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent8'], 'rhs': 'int1'}, {'lhs': ['sent5', 'sent9'], 'rhs': 'int2'}, {'lhs': ['sent5', 'sent9'], 'rhs': 'int3'}, {'lhs': ['int1', 'int2', 'int3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent10'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent8', 'sent3']}, {'int': 'int2', 'ancestors': ['sent5', 'sent9']}, {'int': 'int3', 'ancestors': ['sent5', 'sent9']}, {'int': 'int4', 'ancestors': ['sent8', 'sent3', 'sent5', 'sent9']}, {'int': 'hypothesis', 'ancestors': ['sent9', 'sent3', 'sent5', 'sent10', 'sent8']}]
	relevant_sentences:{'sent5', 'sent8', 'sent3', 'sent10', 'sent9'}
	id_to_int:{'int1': "artie sells marigolds for $274 per pot, so that's 274*12 = $38", 'int2': 'he also sells petunias for $187 per pot, for a total of 987*9 = $18', 'int3': 'and he sells begonias for $212 per pot, for a total of 1712*17 = $32', 'int4': 'in total, he makes 36+18+32 = $88,', 'hypothesis': 'the answer is 88'}



||||||||||||||||||||||

Reading gold proof
step:sent3 & sent7 -> int1: Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.
step_parts:['sent3 & sent7 -> int1', ' Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.']
lhs_ids:['sent3', 'sent7']	 rhs = int1	 all_ancestors={'sent3', 'sent7'}
	 rhs = int1, int_str=artie will round his marigolds up from $274 to $3, since the number following the 2 is 5 or higher
step: sent4 & sent7 -> int2: Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.
step_parts:['sent4 & sent7 -> int2', ' Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.']
lhs_ids:['sent4', 'sent7']	 rhs = int2	 all_ancestors={'sent4', 'sent7'}
	 rhs = int2, int_str=artie will round his petunias up from $187 to $2, since the number following the 1 is 5 or higher
step: sent5 & sent7 -> int3: Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.
step_parts:['sent5 & sent7 -> int3', ' Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.']
lhs_ids:['sent5', 'sent7']	 rhs = int3	 all_ancestors={'sent7', 'sent5'}
	 rhs = int3, int_str=artie will round his begonias down from $212 to $2, since the number following the 2 is less than 5
step: int1 & sent8 -> int4: Artie sells 12 marigolds x $3 = $36
step_parts:['int1 & sent8 -> int4', ' Artie sells 12 marigolds x $3 = $36']
lhs_ids:['int1', 'sent8']	 rhs = int4	 all_ancestors={'sent3', 'sent8', 'sent7'}
	 rhs = int4, int_str=artie sells 12 marigolds x $3 = $36
step: int2 & sent9 -> int5: Artie sells 9 petunias x $2 = $18
step_parts:['int2 & sent9 -> int5', ' Artie sells 9 petunias x $2 = $18']
lhs_ids:['int2', 'sent9']	 rhs = int5	 all_ancestors={'sent4', 'sent7', 'sent9'}
	 rhs = int5, int_str=artie sells 9 petunias x $2 = $18
step: int3 & sent9 -> int6: Artie sells 17 begonias x $2 = $34
step_parts:['int3 & sent9 -> int6', ' Artie sells 17 begonias x $2 = $34']
lhs_ids:['int3', 'sent9']	 rhs = int6	 all_ancestors={'sent9', 'sent7', 'sent5'}
	 rhs = int6, int_str=artie sells 17 begonias x $2 = $34
step: int4 & int5 & int6 & sent10 -> int7: Altogether, Artie will make $36 + $18 + $34 = $88
step_parts:['int4 & int5 & int6 & sent10 -> int7', ' Altogether, Artie will make $36 + $18 + $34 = $88']
lhs_ids:['int4', 'int5', 'int6', 'sent10']	 rhs = int7	 all_ancestors={'sent4', 'sent10', 'sent5', 'sent9', 'sent3', 'sent8', 'sent7'}
	 rhs = int7, int_str=altogether, artie will make $36 + $18 + $34 = $88
step: int7 & sent10 & sent8 & sent9 -> hypothesis
step_parts:['int7 & sent10 & sent8 & sent9 -> hypothesis']
lhs_ids:['int7', 'sent10', 'sent8', 'sent9']	 rhs = hypothesis	 all_ancestors={'sent4', 'sent10', 'sent5', 'sent9', 'sent3', 'sent8', 'sent7'}
	 rhs = hypothesis, int_str=the answer is 88
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent7 -> int1: Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.; sent4 & sent7 -> int2: Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.; sent5 & sent7 -> int3: Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.; int1 & sent8 -> int4: Artie sells 12 marigolds x $3 = $36; int2 & sent9 -> int5: Artie sells 9 petunias x $2 = $18; int3 & sent9 -> int6: Artie sells 17 begonias x $2 = $34; int4 & int5 & int6 & sent10 -> int7: Altogether, Artie will make $36 + $18 + $34 = $88; int7 & sent10 & sent8 & sent9 -> hypothesis;
	sentences:['sent3 & sent7 -> int1', 'sent4 & sent7 -> int2', 'sent5 & sent7 -> int3', 'int1 & sent8 -> int4', 'int2 & sent9 -> int5', 'int3 & sent9 -> int6', 'int4 & int5 & int6 & sent10 -> int7', 'int7 & sent10 & sent8 & sent9 -> hypothesis']
	inferences:[{'lhs': ['sent3', 'sent7'], 'rhs': 'int1'}, {'lhs': ['sent4', 'sent7'], 'rhs': 'int2'}, {'lhs': ['sent5', 'sent7'], 'rhs': 'int3'}, {'lhs': ['int1', 'sent8'], 'rhs': 'int4'}, {'lhs': ['int2', 'sent9'], 'rhs': 'int5'}, {'lhs': ['int3', 'sent9'], 'rhs': 'int6'}, {'lhs': ['int4', 'int5', 'int6', 'sent10'], 'rhs': 'int7'}, {'lhs': ['int7', 'sent10', 'sent8', 'sent9'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent3', 'sent7']}, {'int': 'int2', 'ancestors': ['sent4', 'sent7']}, {'int': 'int3', 'ancestors': ['sent7', 'sent5']}, {'int': 'int4', 'ancestors': ['sent3', 'sent8', 'sent7']}, {'int': 'int5', 'ancestors': ['sent4', 'sent7', 'sent9']}, {'int': 'int6', 'ancestors': ['sent9', 'sent7', 'sent5']}, {'int': 'int7', 'ancestors': ['sent4', 'sent10', 'sent5', 'sent9', 'sent3', 'sent8', 'sent7']}, {'int': 'hypothesis', 'ancestors': ['sent4', 'sent10', 'sent5', 'sent9', 'sent3', 'sent8', 'sent7']}]
	relevant_sentences:{'sent5', 'sent3', 'sent8', 'sent10', 'sent4', 'sent9', 'sent7'}
	id_to_int:{'int1': 'artie will round his marigolds up from $274 to $3, since the number following the 2 is 5 or higher', 'int2': 'artie will round his petunias up from $187 to $2, since the number following the 1 is 5 or higher', 'int3': 'artie will round his begonias down from $212 to $2, since the number following the 2 is less than 5', 'int4': 'artie sells 12 marigolds x $3 = $36', 'int5': 'artie sells 9 petunias x $2 = $18', 'int6': 'artie sells 17 begonias x $2 = $34', 'int7': 'altogether, artie will make $36 + $18 + $34 = $88', 'hypothesis': 'the answer is 88'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int4', 'int2': 'int6', 'int3': 'int6', 'int4': 'int7', 'hypothesis': 'int7'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int4', 'int2': 'int6', 'int3': 'int6', 'int4': 'int7', 'hypothesis': 'int7'}
relevant_sentences_pred:{'sent5', 'sent8', 'sent3', 'sent10', 'sent9'}
relevant_sentences_gold:{'sent5', 'sent3', 'sent8', 'sent10', 'sent4', 'sent9', 'sent7'}
		sentences:['sent10', 'sent3', 'sent5', 'sent8', 'sent9']
		sentences_gold:['sent10', 'sent3', 'sent4', 'sent5', 'sent7', 'sent8', 'sent9']
		sentences:['int4 & int6 & int6 -> int7', 'int7 & sent10 -> int7', 'sent3 & sent8 -> int4', 'sent5 & sent9 -> int6', 'sent5 & sent9 -> int6']
		sentences_gold:['int1 & sent8 -> int4', 'int2 & sent9 -> int5', 'int3 & sent9 -> int6', 'int4 & int5 & int6 & sent10 -> int7', 'int7 & sent10 & sent8 & sent9 -> hypothesis', 'sent3 & sent7 -> int1', 'sent4 & sent7 -> int2', 'sent5 & sent7 -> int3']
step:sent3 & sent7 -> int1: Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:sent3 & sent7 -> int1: Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:sent3 & sent7 -> int1: Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.
step:sent4 & sent7 -> int2: Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:sent4 & sent7 -> int2: Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:sent4 & sent7 -> int2: Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.
step:sent5 & sent7 -> int3: Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:sent5 & sent7 -> int3: Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:sent5 & sent7 -> int3: Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.
step:int1 & sent8 -> int4: Artie sells 12 marigolds x $3 = $36
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int1 & sent8 -> int4: Artie sells 12 marigolds x $3 = $36
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int1 & sent8 -> int4: Artie sells 12 marigolds x $3 = $36
step:int2 & sent9 -> int5: Artie sells 9 petunias x $2 = $18
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int2 & sent9 -> int5: Artie sells 9 petunias x $2 = $18
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int2 & sent9 -> int5: Artie sells 9 petunias x $2 = $18
step:int3 & sent9 -> int6: Artie sells 17 begonias x $2 = $34
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int3 & sent9 -> int6: Artie sells 17 begonias x $2 = $34
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int3 & sent9 -> int6: Artie sells 17 begonias x $2 = $34
step:int4 & int5 & int6 & sent10 -> int7: Altogether, Artie will make $36 + $18 + $34 = $88
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int4 & int5 & int6 & sent10 -> int7: Altogether, Artie will make $36 + $18 + $34 = $88
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int4 & int5 & int6 & sent10 -> int7: Altogether, Artie will make $36 + $18 + $34 = $88
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int4 & int5 & int6 & sent10 -> int7: Altogether, Artie will make $36 + $18 + $34 = $88
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int4 & int5 & int6 & sent10 -> int7: Altogether, Artie will make $36 + $18 + $34 = $88
step:int7 & sent10 & sent8 & sent9 -> hypothesis
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int7 & sent10 & sent8 & sent9 -> hypothesis
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int7 & sent10 & sent8 & sent9 -> hypothesis
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int7 & sent10 & sent8 & sent9 -> hypothesis
QID:GSM8K_74_0a4493ada4
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Artie will round his marigolds up from $2.74 to $3, since the number following the 2 is 5 or higher.', 'int2': 'Artie will round his petunias up from $1.87 to $2, since the number following the 1 is 5 or higher.', 'int3': 'Artie will round his begonias down from $2.12 to $2, since the number following the 2 is less than 5.', 'int4': 'Artie sells 12 marigolds x $3 = $36', 'int5': 'Artie sells 9 petunias x $2 = $18', 'int6': 'Artie sells 17 begonias x $2 = $34', 'int7': 'Altogether, Artie will make $36 + $18 + $34 = $88', 'hypothesis': 'The answer is 88'}
step:int7 & sent10 & sent8 & sent9 -> hypothesis
step:sent8 & sent3 -> int1: Artie sells marigolds for $2.74 per pot, so that's 2.74*12 = $38.
step:sent9 & sent5 -> int2: He also sells petunias for $1.87 per pot, for a total of 9.87*9 = $18.
step:sent9 & sent5 -> int3: And he sells begonias for $2.12 per pot, for a total of 17.12*17 = $32.
step:int2 & int3 & int1 -> int4: In total, he makes 36+18+32 = $88,
step:sent10 & int4 -> hypothesis



======================

pred:sent3 & sent2 -> int1: Each level has 16 square footage / 2 = 8 square footage; sent3 & sent2 -> int2: Each level has 16/2=4 square footage because 4 x 2 = 4; sent3 & int2 -> int3: The bottom level has 16 square footage because 4 - 16 = 16; int3 & sent3 & sent4 -> int4: The average square footage per level is 60 square footage because 4 x 16 = 60; int1 & int4 & sent4 -> hypothesis
gold:sent2 & sent3 -> int1: Level 3 is 32 square feet because 16 x 2 = 32; int1 & sent2 -> int2: Level 2 is 64 square feet because 32 x 2 = 64; int2 & sent2 -> int3: Level 1 is 128 square feet because 64 x 2 = 128; int1 & int2 & int3 & sent3 -> int4: The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240; int4 & sent4 -> int5: The average square footage of a level is 60 because 240 / 4 = 60; int5 & sent3 & sent4 -> hypothesis;



======================

Reading predicted proof
step:sent3 & sent2 -> int1: Each level has 16 square footage / 2 = 8 square footage
step_parts:['sent3 & sent2 -> int1', ' Each level has 16 square footage / 2 = 8 square footage']
lhs_ids:['sent3', 'sent2']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=each level has 16 square footage / 2 = 8 square footage
step: sent3 & sent2 -> int2: Each level has 16/2=4 square footage because 4 x 2 = 4
step_parts:['sent3 & sent2 -> int2', ' Each level has 16/2=4 square footage because 4 x 2 = 4']
lhs_ids:['sent3', 'sent2']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=each level has 16/2=4 square footage because 4 x 2 = 4
step: sent3 & int2 -> int3: The bottom level has 16 square footage because 4 - 16 = 16
step_parts:['sent3 & int2 -> int3', ' The bottom level has 16 square footage because 4 - 16 = 16']
lhs_ids:['sent3', 'int2']	 rhs = int3	 all_ancestors={'sent2', 'sent3'}
	 rhs = int3, int_str=the bottom level has 16 square footage because 4 - 16 = 16
step: int3 & sent3 & sent4 -> int4: The average square footage per level is 60 square footage because 4 x 16 = 60
step_parts:['int3 & sent3 & sent4 -> int4', ' The average square footage per level is 60 square footage because 4 x 16 = 60']
lhs_ids:['int3', 'sent3', 'sent4']	 rhs = int4	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int4, int_str=the average square footage per level is 60 square footage because 4 x 16 = 60
step: int1 & int4 & sent4 -> hypothesis
step_parts:['int1 & int4 & sent4 -> hypothesis']
lhs_ids:['int1', 'int4', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent4', 'sent3'}
	 rhs = hypothesis, int_str=the answer is 60
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent3 & sent2 -> int1: Each level has 16 square footage / 2 = 8 square footage; sent3 & sent2 -> int2: Each level has 16/2=4 square footage because 4 x 2 = 4; sent3 & int2 -> int3: The bottom level has 16 square footage because 4 - 16 = 16; int3 & sent3 & sent4 -> int4: The average square footage per level is 60 square footage because 4 x 16 = 60; int1 & int4 & sent4 -> hypothesis
	sentences:['sent2 & sent3 -> int1', 'sent2 & sent3 -> int2', 'int2 & sent3 -> int3', 'int3 & sent3 & sent4 -> int4', 'int1 & int4 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['sent2', 'sent3'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent3'], 'rhs': 'int3'}, {'lhs': ['int3', 'sent3', 'sent4'], 'rhs': 'int4'}, {'lhs': ['int1', 'int4', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3']}, {'int': 'int4', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent4', 'sent3']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'each level has 16 square footage / 2 = 8 square footage', 'int2': 'each level has 16/2=4 square footage because 4 x 2 = 4', 'int3': 'the bottom level has 16 square footage because 4 - 16 = 16', 'int4': 'the average square footage per level is 60 square footage because 4 x 16 = 60', 'hypothesis': 'the answer is 60'}



||||||||||||||||||||||

Reading gold proof
step:sent2 & sent3 -> int1: Level 3 is 32 square feet because 16 x 2 = 32
step_parts:['sent2 & sent3 -> int1', ' Level 3 is 32 square feet because 16 x 2 = 32']
lhs_ids:['sent2', 'sent3']	 rhs = int1	 all_ancestors={'sent2', 'sent3'}
	 rhs = int1, int_str=level 3 is 32 square feet because 16 x 2 = 32
step: int1 & sent2 -> int2: Level 2 is 64 square feet because 32 x 2 = 64
step_parts:['int1 & sent2 -> int2', ' Level 2 is 64 square feet because 32 x 2 = 64']
lhs_ids:['int1', 'sent2']	 rhs = int2	 all_ancestors={'sent2', 'sent3'}
	 rhs = int2, int_str=level 2 is 64 square feet because 32 x 2 = 64
step: int2 & sent2 -> int3: Level 1 is 128 square feet because 64 x 2 = 128
step_parts:['int2 & sent2 -> int3', ' Level 1 is 128 square feet because 64 x 2 = 128']
lhs_ids:['int2', 'sent2']	 rhs = int3	 all_ancestors={'sent2', 'sent3'}
	 rhs = int3, int_str=level 1 is 128 square feet because 64 x 2 = 128
step: int1 & int2 & int3 & sent3 -> int4: The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240
step_parts:['int1 & int2 & int3 & sent3 -> int4', ' The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240']
lhs_ids:['int1', 'int2', 'int3', 'sent3']	 rhs = int4	 all_ancestors={'sent2', 'sent3'}
	 rhs = int4, int_str=the four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240
step: int4 & sent4 -> int5: The average square footage of a level is 60 because 240 / 4 = 60
step_parts:['int4 & sent4 -> int5', ' The average square footage of a level is 60 because 240 / 4 = 60']
lhs_ids:['int4', 'sent4']	 rhs = int5	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = int5, int_str=the average square footage of a level is 60 because 240 / 4 = 60
step: int5 & sent3 & sent4 -> hypothesis
step_parts:['int5 & sent3 & sent4 -> hypothesis']
lhs_ids:['int5', 'sent3', 'sent4']	 rhs = hypothesis	 all_ancestors={'sent2', 'sent3', 'sent4'}
	 rhs = hypothesis, int_str=the answer is 60
step:
step_parts:['']
	<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	proof:sent2 & sent3 -> int1: Level 3 is 32 square feet because 16 x 2 = 32; int1 & sent2 -> int2: Level 2 is 64 square feet because 32 x 2 = 64; int2 & sent2 -> int3: Level 1 is 128 square feet because 64 x 2 = 128; int1 & int2 & int3 & sent3 -> int4: The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240; int4 & sent4 -> int5: The average square footage of a level is 60 because 240 / 4 = 60; int5 & sent3 & sent4 -> hypothesis;
	sentences:['sent2 & sent3 -> int1', 'int1 & sent2 -> int2', 'int2 & sent2 -> int3', 'int1 & int2 & int3 & sent3 -> int4', 'int4 & sent4 -> int5', 'int5 & sent3 & sent4 -> hypothesis']
	inferences:[{'lhs': ['sent2', 'sent3'], 'rhs': 'int1'}, {'lhs': ['int1', 'sent2'], 'rhs': 'int2'}, {'lhs': ['int2', 'sent2'], 'rhs': 'int3'}, {'lhs': ['int1', 'int2', 'int3', 'sent3'], 'rhs': 'int4'}, {'lhs': ['int4', 'sent4'], 'rhs': 'int5'}, {'lhs': ['int5', 'sent3', 'sent4'], 'rhs': 'hypothesis'}]
	int_to_all_ancestors_list:[{'int': 'int1', 'ancestors': ['sent2', 'sent3']}, {'int': 'int2', 'ancestors': ['sent2', 'sent3']}, {'int': 'int3', 'ancestors': ['sent2', 'sent3']}, {'int': 'int4', 'ancestors': ['sent2', 'sent3']}, {'int': 'int5', 'ancestors': ['sent2', 'sent3', 'sent4']}, {'int': 'hypothesis', 'ancestors': ['sent2', 'sent3', 'sent4']}]
	relevant_sentences:{'sent2', 'sent3', 'sent4'}
	id_to_int:{'int1': 'level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'the four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'the average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'the answer is 60'}
%%%%%%%%%	pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'int5', 'hypothesis': 'int5'}



++++++++++++++++++++++++++++++++++++
pred_int_to_gold_int_mapping:{'int1': 'int1', 'int2': 'int1', 'int3': 'int1', 'int4': 'int5', 'hypothesis': 'int5'}
relevant_sentences_pred:{'sent2', 'sent3', 'sent4'}
relevant_sentences_gold:{'sent2', 'sent3', 'sent4'}
		sentences:['sent2', 'sent3', 'sent4']
		sentences_gold:['sent2', 'sent3', 'sent4']
		sentences:['int1 & int5 & sent4 -> int5', 'int1 & sent3 & sent4 -> int5', 'int1 & sent3 -> int1', 'sent2 & sent3 -> int1', 'sent2 & sent3 -> int1']
		sentences_gold:['int1 & int2 & int3 & sent3 -> int4', 'int1 & sent2 -> int2', 'int2 & sent2 -> int3', 'int4 & sent4 -> int5', 'int5 & sent3 & sent4 -> hypothesis', 'sent2 & sent3 -> int1']
step:sent2 & sent3 -> int1: Level 3 is 32 square feet because 16 x 2 = 32
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:sent2 & sent3 -> int1: Level 3 is 32 square feet because 16 x 2 = 32
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:sent2 & sent3 -> int1: Level 3 is 32 square feet because 16 x 2 = 32
step:int1 & sent2 -> int2: Level 2 is 64 square feet because 32 x 2 = 64
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int1 & sent2 -> int2: Level 2 is 64 square feet because 32 x 2 = 64
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int1 & sent2 -> int2: Level 2 is 64 square feet because 32 x 2 = 64
step:int2 & sent2 -> int3: Level 1 is 128 square feet because 64 x 2 = 128
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int2 & sent2 -> int3: Level 1 is 128 square feet because 64 x 2 = 128
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int2 & sent2 -> int3: Level 1 is 128 square feet because 64 x 2 = 128
step:int1 & int2 & int3 & sent3 -> int4: The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int1 & int2 & int3 & sent3 -> int4: The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int1 & int2 & int3 & sent3 -> int4: The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int1 & int2 & int3 & sent3 -> int4: The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int1 & int2 & int3 & sent3 -> int4: The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240
step:int4 & sent4 -> int5: The average square footage of a level is 60 because 240 / 4 = 60
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int4 & sent4 -> int5: The average square footage of a level is 60 because 240 / 4 = 60
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int4 & sent4 -> int5: The average square footage of a level is 60 because 240 / 4 = 60
step:int5 & sent3 & sent4 -> hypothesis
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int5 & sent3 & sent4 -> hypothesis
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int5 & sent3 & sent4 -> hypothesis
QID:GSM8K_75_df37851fde
gold_triples:{'sent1': 'first beaker has 2 yellow chemicals', 'sent2': 'second beaker has 3 orange chemicals', 'sent3': 'third beaker has 4 purple chemicals', 'sent4': 'fourth beaker has 1 orange chemical', 'sent5': 'fifth beaker has 4 green chemicals', 'sent6': 'sixth beaker has 3 red chemicals', 'sent7': 'seventh beaker has 3 purple chemicals', 'sent8': 'throw out one unit of last beaker', 'sent9': 'throw out three units of third one', 'sent10': 'pour fourth beaker into it', 'sent11': 'it turns brown', 'sent12': 'throw out one unit of it', 'int1': 'Level 3 is 32 square feet because 16 x 2 = 32', 'int2': 'Level 2 is 64 square feet because 32 x 2 = 64', 'int3': 'Level 1 is 128 square feet because 64 x 2 = 128', 'int4': 'The four levels total to 240 square feet because 128 + 64 + 32 + 16 = 240', 'int5': 'The average square footage of a level is 60 because 240 / 4 = 60', 'hypothesis': 'The answer is 60'}
step:int5 & sent3 & sent4 -> hypothesis
step:sent3 & sent2 -> int1: Each level has 16 square footage / 2 = 8 square footage
step:sent3 & sent2 -> int2: Each level has 16/2=4 square footage because 4 x 2 = 4
step:sent3 & int2 -> int3: The bottom level has 16 square footage because 4 - 16 = 16
step:int3 & sent3 & sent4 -> int4: The average square footage per level is 60 square footage because 4 x 16 = 60
step:int1 & int4 & sent4 -> hypothesis

=================
Percentage recall per gold proof depth
Gold_proof_depth	#Gold answers	#Correct predictions	%accuracy (recall)	%Gold answers	%Correct Predictions
=========================
num_dev_answers:75
num_dev_answers_seen_in_train_context:0
num_dev_answers_seen_in_train_answers:0

======================
collated:{'QAHC->P': {'counter': 75, 'proof-leaves': {'acc': 0.76, 'F1': 0.961372331372331, 'P': 0.9823333333333333, 'R': 0.9504126984126983}, 'proof-steps': {'acc': 0.0, 'F1': 0.2338889998889999, 'P': 0.23782539682539677, 'R': 0.240047619047619}, 'proof-intermediates': {'ROUGE_L_F': 0.4061512698412698, 'ROUGE_L_F_perfect_align': 0.3655258730158729, 'BLEURT': -0.405483831002244, 'BLEURT_P': 0.19925396825396827, 'BLEURT_R': 0.19447619047619047, 'BLEURT_F1': 0.1918918118918119, 'BLEURT_perfect_align': -0.3515334109258913, 'BLEURT_acc': 0.0, 'BLEURT_acc_perfect_align': 0.14666666666666667, 'fraction_perfect_align': 0.6870317460317459}, 'proof-overall': {'acc': 0.0, 'acc_perfect_align': 0.0}}}
leave-F1	leaves-Acc	steps-F1	steps-Acc	int-BLEURT-F1	int-BLEURT-Acc	overall-Acc
96.14	76.0	23.39	0.0	19.19	0.0	0.0
