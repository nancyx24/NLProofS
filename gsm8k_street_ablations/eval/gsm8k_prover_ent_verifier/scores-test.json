{"id": "GSM8K_0_0c3da8c7d5", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent2 -> int1: She eats 3 for breakfast every day and makes muffins for 4 people every day with 4 people = 12 people.; sent3 & sent2 -> int2: She eats 3 for breakfast every day and makes muffins for 4 people every day for a total of 3*4 = 12 people; sent1 & sent4 -> int3: She sells 16 eggs daily for $2 per egg, so she makes 16*2 = $48.; int1 & int2 -> int4: She makes 12 muffins every day for a total of 12*12 = 36 muffins; int3 & int1 & int2 -> int5: She makes a total of 12+12 = 18 dollars every day.; sent5 & int5 & int4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent2 -> int1: She eats 3 for breakfast every day and makes muffins for 4 people every day with 4 people = 12 people.; sent3 & sent2 -> int2: She eats 3 for breakfast every day and makes muffins for 4 people every day for a total of 3*4 = 12 people; sent1 & sent4 -> int3: She sells 16 eggs daily for $2 per egg, so she makes 16*2 = $48.; int1 & int2 -> int4: She makes 12 muffins every day for a total of 12*12 = 36 muffins; int3 & int1 & int2 -> int5: She makes a total of 12+12 = 18 dollars every day.; sent5 & int5 & int4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4", "sent5"], "gold": ["sent1", "sent2", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int1 & int1 & int1 -> int1", "int1 & int1 & sent5 -> hypothesis", "int1 & int1 -> int1", "sent1 & sent4 -> int1", "sent2 & sent3 -> int1", "sent2 & sent3 -> int1"], "gold": ["int1 & sent4 -> int2", "int2 & sent5 -> hypothesis", "sent1 & sent2 & sent3 & sent4 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int1", "int4": "int1", "int5": "int1", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 & sent3 -> int1", "sent2 & sent3 -> int1", "sent1 & sent4 -> int1", "int1 & int1 -> int1", "int1 & int1 & int1 -> int1", "int1 & int1 & sent5 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.365, "ROUGE_L_F_perfect_align": 0.625, "BLEURT": -0.11490031083424886, "BLEURT_perfect_align": 0.3367440551519394, "BLEURT_P": 0.16666666666666666, "BLEURT_R": 0.3333333333333333, "BLEURT_F1": 0.2222222222222222, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.3333333333333333, "pred": ["she eats 3 for breakfast every day and makes muffins for 4 people every day with 4 people = 12 people", "she eats 3 for breakfast every day and makes muffins for 4 people every day for a total of 3*4 = 12 people", "she sells 16 eggs daily for $2 per egg, so she makes 16*2 = $48", "she makes 12 muffins every day for a total of 12*12 = 36 muffins", "she makes a total of 12+12 = 18 dollars every day", "the answer is 18"], "gold": ["janet sells 16 - 3 - 4 = 9 duck eggs a day", "janet sells 16 - 3 - 4 = 9 duck eggs a day", "janet sells 16 - 3 - 4 = 9 duck eggs a day", "janet sells 16 - 3 - 4 = 9 duck eggs a day", "janet sells 16 - 3 - 4 = 9 duck eggs a day", "the answer is 18"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_1_e1817d7abd", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent1 -> int1: First find how many white fibers there are in the robe: 2 / 2 = 1; sent1 & int1 -> int2: Then find how many blue fibers there are in the robe: 2 + 1 = 3; int2 & sent3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent1 -> int1: First find how many white fibers there are in the robe: 2 / 2 = 1; sent1 & int1 -> int2: Then find how many blue fibers there are in the robe: 2 + 1 = 3; int2 & sent3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3"], "gold": ["sent1", "sent2", "sent3"]}, "proof-steps": {"P": 0.6666666666666666, "R": 0.6666666666666666, "F1": 0.6666666666666666, "acc": 0, "pred": ["int1 & sent1 -> int1", "int1 & sent3 -> int2", "sent1 & sent2 -> int1"], "gold": ["int1 & sent3 -> int2", "int2 & sent3 -> hypothesis", "sent1 & sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent1 & sent2 -> int1", "int1 & sent1 -> int1", "int1 & sent3 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.215, "ROUGE_L_F_perfect_align": 0.215, "BLEURT": -1.5670145750045776, "BLEURT_perfect_align": -1.5670145750045776, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["", "the answer is 3"], "gold": ["it takes 2/2=1 bolt of white fiber", "so the total amount of fabric is 2+1=3 bolts of fabric"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_2_ecffc3947e", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent4 -> int1: First find how much the house value increased by multiplying the price by 150%: $80,000 * 150% = $100,000; int1 & sent3 -> int2: Then subtract the cost of repairs from the purchase price to find the profit: $100,000 - $50,000 = $75,000; sent5 & int2 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent4 -> int1: First find how much the house value increased by multiplying the price by 150%: $80,000 * 150% = $100,000; int1 & sent3 -> int2: Then subtract the cost of repairs from the purchase price to find the profit: $100,000 - $50,000 = $75,000; sent5 & int2 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4", "sent5"], "gold": ["sent2", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.6666666666666666, "R": 0.4, "F1": 0.5, "acc": 0, "pred": ["int2 & sent3 -> int4", "int4 & sent5 -> hypothesis", "sent2 & sent4 -> int2"], "gold": ["int1 & int2 & int3 -> int4", "int2 -> int3", "int4 & sent5 -> hypothesis", "sent2 & sent3 -> int1", "sent2 & sent4 -> int2"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int4", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 & sent4 -> int2", "int2 & sent3 -> int4", "int4 & sent5 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.5, "ROUGE_L_F_perfect_align": 0.5, "BLEURT": -0.07142263650894165, "BLEURT_perfect_align": -0.07142263650894165, "BLEURT_P": 0.3333333333333333, "BLEURT_R": 0.2, "BLEURT_F1": 0.25, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["", "the answer is 70000"], "gold": ["so he made a profit of 200,000-130,000=$70,000", "the answer is 70000"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_3_ac5e5c9d28", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 & sent2 -> int1: He runs 3*60=240 meters in a week; sent3 & int1 -> int2: So he runs 240*7=540 meters a week; int2 & sent3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 & sent2 -> int1: He runs 3*60=240 meters in a week; sent3 & int1 -> int2: So he runs 240*7=540 meters a week; int2 & sent3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3"], "gold": ["sent1", "sent2", "sent3"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.3333333333333333, "F1": 0.3333333333333333, "acc": 0, "pred": ["hypothesis & sent3 -> hypothesis", "int2 & sent3 -> hypothesis", "sent1 & sent2 -> int2"], "gold": ["int1 & sent2 -> int2", "int2 & sent3 -> hypothesis", "sent1 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "int2": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent1 & sent2 -> int2", "int2 & sent3 -> hypothesis", "hypothesis & sent3 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.59, "ROUGE_L_F_perfect_align": 0.59, "BLEURT": -0.022704424957434338, "BLEURT_perfect_align": -0.022704424957434338, "BLEURT_P": 0.3333333333333333, "BLEURT_R": 0.3333333333333333, "BLEURT_F1": 0.3333333333333333, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["he runs 3*60=240 meters in a week", "so he runs 240*7=540 meters a week", "the answer is 540"], "gold": ["so he runs 9*60=540 meters", "the answer is 540", "the answer is 540"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_4_7bec3d29ea", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent4 & sent5 -> int1: In the afternoon, she gives her flock 25 + 15 = 30 cups of feed.; sent1 & sent6 & int1 -> int2: Since the size of Wendi's flock is 20 chickens, she gives her flock 30 / 3 = 20 cups of feed in the final meal of the day.; int2 & sent6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent4 & sent5 -> int1: In the afternoon, she gives her flock 25 + 15 = 30 cups of feed.; sent1 & sent6 & int1 -> int2: Since the size of Wendi's flock is 20 chickens, she gives her flock 30 / 3 = 20 cups of feed in the final meal of the day.; int2 & sent6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent4", "sent5", "sent6"], "gold": ["sent1", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int2 & sent1 & sent6 -> int2", "int2 & sent6 -> int2", "sent4 & sent5 -> int2"], "gold": ["int1 & sent4 & sent5 & sent6 -> int2", "int2 & sent6 -> hypothesis", "sent1 & sent6 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int2", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent4 & sent5 -> int2", "int2 & sent1 & sent6 -> int2", "int2 & sent6 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.32, "ROUGE_L_F_perfect_align": 0.29, "BLEURT": -0.8530895337462425, "BLEURT_perfect_align": -1.06779520586133, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.6666666666666666, "pred": ["in the afternoon, she gives her flock 25 + 15 = 30 cups of feed", "since the size of wendi's flock is 20 chickens, she gives her flock 30 / 3 = 20 cups of feed in the final meal of the day", "the answer is 20"], "gold": ["if she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed", "if she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed", "if she feeds the flock 15 cups of feed in the morning, and 25 cups in the afternoon, then the final meal would require 60-15-25=20 cups of chicken feed"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_5_6f13335704", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent3 -> int1: The first pair of glasses costs $5 x 16 = $40.; sent2 & sent3 -> int2: The second pair of glasses costs $5 x 60/100 = $2.; int2 & int1 -> int3: So, Kylar needs to pay $40 + $2 = $64 for the glasses.; sent4 & int3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent3 -> int1: The first pair of glasses costs $5 x 16 = $40.; sent2 & sent3 -> int2: The second pair of glasses costs $5 x 60/100 = $2.; int2 & int1 -> int3: So, Kylar needs to pay $40 + $2 = $64 for the glasses.; sent4 & int3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.75, "F1": 0.8571428571428571, "acc": 0, "pred": ["sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.25, "R": 0.16666666666666666, "F1": 0.2, "acc": 0, "pred": ["int2 & int2 -> int2", "int2 & sent4 -> hypothesis", "sent2 & sent3 -> int2", "sent2 & sent3 -> int2"], "gold": ["int1 & int2 -> int3", "int2 & sent2 -> int4", "int3 & int4 -> int5", "int5 & sent4 -> hypothesis", "sent1 & sent2 -> int1", "sent2 & sent3 -> int2"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int2", "int3": "int2", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 & sent3 -> int2", "sent2 & sent3 -> int2", "int2 & int2 -> int2", "int2 & sent4 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.4525, "ROUGE_L_F_perfect_align": 0.27, "BLEURT": 0.0125710628926754, "BLEURT_perfect_align": -0.33471763630708057, "BLEURT_P": 0.25, "BLEURT_R": 0.16666666666666666, "BLEURT_F1": 0.2, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.75, "pred": ["the first pair of glasses costs $5 x 16 = $40", "the second pair of glasses costs $5 x 60/100 = $2", "so, kylar needs to pay $40 + $2 = $64 for the glasses", "the answer is 64"], "gold": ["if every second glass is cheaper, that means kylar is going to buy 16 / 2 = 8 cheaper glasses", "if every second glass is cheaper, that means kylar is going to buy 16 / 2 = 8 cheaper glasses", "if every second glass is cheaper, that means kylar is going to buy 16 / 2 = 8 cheaper glasses", "the answer is 64"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_6_8c57a63641", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent4 & sent2 -> int1: Charleston has 4 * 20 = 80 sheep.; sent1 & int1 -> int2: Toulouse has 2 * 80 = 120 sheep.; int1 & sent1 -> int3: Toulouse has 80 * 2 = 160 sheep.; sent1 & int1 -> int4: Toulouse has 2 * 80 = 100 sheep.; int3 & int4 & int2 -> int5: In total, there are 160 + 120 + 160 = 260 sheep.; int5 & sent4 & sent3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent4 & sent2 -> int1: Charleston has 4 * 20 = 80 sheep.; sent1 & int1 -> int2: Toulouse has 2 * 80 = 120 sheep.; int1 & sent1 -> int3: Toulouse has 80 * 2 = 160 sheep.; sent1 & int1 -> int4: Toulouse has 2 * 80 = 100 sheep.; int3 & int4 & int2 -> int5: In total, there are 160 + 120 + 160 = 260 sheep.; int5 & sent4 & sent3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 0.75, "R": 1.0, "F1": 0.8571428571428571, "acc": 0, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent4"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.5, "F1": 0.4, "acc": 0, "pred": ["int1 & sent1 -> int2", "int1 & sent1 -> int2", "int1 & sent1 -> int2", "int2 & int2 & int2 -> int2", "int2 & sent3 & sent4 -> int2", "sent2 & sent4 -> int1"], "gold": ["int1 & int2 & sent4 -> int3", "int1 & sent1 -> int2", "int3 & sent4 -> hypothesis", "sent2 & sent4 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int2", "int3": "int2", "int4": "int2", "int5": "int2", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent2 & sent4 -> int1", "int1 & sent1 -> int2", "int1 & sent1 -> int2", "int1 & sent1 -> int2", "int2 & int2 & int2 -> int2", "int2 & sent3 & sent4 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.46, "ROUGE_L_F_perfect_align": 0.52, "BLEURT": -0.24098149066170058, "BLEURT_perfect_align": 0.07102154344320297, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.8333333333333334, "pred": ["charleston has 4 * 20 = 80 sheep", "toulouse has 2 * 80 = 120 sheep", "toulouse has 80 * 2 = 160 sheep", "toulouse has 2 * 80 = 100 sheep", "in total, there are 160 + 120 + 160 = 260 sheep", "the answer is 260"], "gold": ["if seattle has 20 sheep, charleston has 4 * 20 sheep = 80 sheep", "toulouse has twice as many sheep as charleston, which is 2 * 80 sheep = 160 sheep", "toulouse has twice as many sheep as charleston, which is 2 * 80 sheep = 160 sheep", "toulouse has twice as many sheep as charleston, which is 2 * 80 sheep = 160 sheep", "toulouse has twice as many sheep as charleston, which is 2 * 80 sheep = 160 sheep", "toulouse has twice as many sheep as charleston, which is 2 * 80 sheep = 160 sheep"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_7_ec85fd850b", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent4 -> int1: Then find the time it takes to install the update: 20 minutes * 2 GB/minute = 60 minutes; sent1 & sent3 -> int2: The first 40 MB of the file takes 200 / 40 = 8 minutes.; int1 & int2 -> int3: Then add the time to each step to find the total time: 60 minutes + 8 minutes = 160 minutes; int2 & sent3 -> int4: Then find the time it takes to download the second 40 MB: 8 minutes * 40% = 2 hours; int2 & sent3 -> int5: Then find the time it takes to download the next 40 MB: 8 minutes * 40% = 2 hours; int2 & sent3 -> int6: The second 40 MB of the file takes 40 MB * 4 MB/minute = 16 minutes.; int4 & int6 -> int7: Then multiply the speed of the second 40 MB by the time it takes to download the first 40 MB: 2 hours * 4 MB/minute = 8 minutes; int7 & int5 & int3 & sent6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent4 -> int1: Then find the time it takes to install the update: 20 minutes * 2 GB/minute = 60 minutes; sent1 & sent3 -> int2: The first 40 MB of the file takes 200 / 40 = 8 minutes.; int1 & int2 -> int3: Then add the time to each step to find the total time: 60 minutes + 8 minutes = 160 minutes; int2 & sent3 -> int4: Then find the time it takes to download the second 40 MB: 8 minutes * 40% = 2 hours; int2 & sent3 -> int5: Then find the time it takes to download the next 40 MB: 8 minutes * 40% = 2 hours; int2 & sent3 -> int6: The second 40 MB of the file takes 40 MB * 4 MB/minute = 16 minutes.; int4 & int6 -> int7: Then multiply the speed of the second 40 MB by the time it takes to download the first 40 MB: 2 hours * 4 MB/minute = 8 minutes; int7 & int5 & int3 & sent6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.8333333333333334, "F1": 0.9090909090909091, "acc": 0, "pred": ["sent1", "sent2", "sent3", "sent4", "sent6"], "gold": ["sent1", "sent2", "sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.125, "R": 0.2, "F1": 0.15384615384615385, "acc": 0, "pred": ["int1 & int1 & int4 & sent6 -> hypothesis", "int1 & int1 -> int1", "int1 & int4 -> int4", "int1 & sent3 -> int1", "int1 & sent3 -> int1", "int1 & sent3 -> int1", "sent1 & sent3 -> int1", "sent2 & sent4 -> int4"], "gold": ["int1 & sent2 -> int2", "int2 & int3 & sent4 -> int4", "int4 & sent6 -> hypothesis", "sent1 & sent2 & sent5 -> int3", "sent1 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int4", "int2": "int1", "int3": "int4", "int4": "int1", "int5": "int1", "int6": "int1", "int7": "int1", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 & sent4 -> int4", "sent1 & sent3 -> int1", "int1 & int4 -> int4", "int1 & sent3 -> int1", "int1 & sent3 -> int1", "int1 & sent3 -> int1", "int1 & int1 -> int1", "int1 & int1 & int4 & sent6 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.25, "ROUGE_L_F_perfect_align": 0.0, "BLEURT": -0.14395633339881897, "BLEURT_perfect_align": -0.5408863623936971, "BLEURT_P": 0.125, "BLEURT_R": 0.2, "BLEURT_F1": 0.15384615384615385, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.75, "pred": ["", "the first 40 mb of the file takes 200 / 40 = 8 minutes", "the second 40 mb of the file takes 40 mb * 4 mb/minute = 16 minutes", "the answer is 160"], "gold": ["", "", "", "the answer is 160"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_8_f8cdd58483", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 -> int1: He spends 3 hours at 60 mph because 3 x 60 = 3; sent3 -> int2: He spends 2 hours in traffic because 4 x 60 = 2; sent3 -> int3: He spends 2 hours at 60 mph because 4 x 60 = 2; sent4 & int1 -> int4: He spends 1 hour at 60 mph because 3 x 30 = 1; sent4 & int1 -> int5: He spends 1/2 hour at 60 mph because 3 x 30 = 60; int3 & sent5 -> int6: He spends 4 hours at 80 mph because 4 x 80 = 80; int5 & int4 & sent5 -> int7: He spends 2 hours at 80 mph because 4 - 60 = 2; int5 & int4 & sent5 -> int8: He spends 4 hours at 80 mph because 4 - 60 = 4; int4 & int5 & sent3 -> int9: He spends 2 hours at 60 mph because 4 - 1 = 2; int2 & int7 & int6 -> int10: He is 45 miles from home because 4 x 2 + 8 = 45; int9 & int8 & int10 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 -> int1: He spends 3 hours at 60 mph because 3 x 60 = 3; sent3 -> int2: He spends 2 hours in traffic because 4 x 60 = 2; sent3 -> int3: He spends 2 hours at 60 mph because 4 x 60 = 2; sent4 & int1 -> int4: He spends 1 hour at 60 mph because 3 x 30 = 1; sent4 & int1 -> int5: He spends 1/2 hour at 60 mph because 3 x 30 = 60; int3 & sent5 -> int6: He spends 4 hours at 80 mph because 4 x 80 = 80; int5 & int4 & sent5 -> int7: He spends 2 hours at 80 mph because 4 - 60 = 2; int5 & int4 & sent5 -> int8: He spends 4 hours at 80 mph because 4 - 60 = 4; int4 & int5 & sent3 -> int9: He spends 2 hours at 60 mph because 4 - 1 = 2; int2 & int7 & int6 -> int10: He is 45 miles from home because 4 x 2 + 8 = 45; int9 & int8 & int10 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.6666666666666666, "F1": 0.8, "acc": 0, "pred": ["sent1", "sent3", "sent4", "sent5"], "gold": ["sent1", "sent2", "sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.09090909090909091, "R": 0.125, "F1": 0.10526315789473685, "acc": 0, "pred": ["int1 & sent4 -> int3", "int1 & sent4 -> int3", "int2 & int2 & int6 -> int6", "int2 & int6 & int6 -> int6", "int2 & sent5 -> int2", "int3 & int3 & sent3 -> int2", "int3 & int3 & sent5 -> int6", "int3 & int3 & sent5 -> int6", "sent1 -> int1", "sent3 -> int2", "sent3 -> int2"], "gold": ["int1 & int6 & sent6 -> int7", "int3 & int5 -> int6", "int4 & sent5 -> int5", "int7 & sent6 -> hypothesis", "sent1 & sent2 -> int1", "sent3 -> int2", "sent4 -> int3", "sent5 -> int4"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int2", "int3": "int2", "int4": "int3", "int5": "int3", "int6": "int2", "int7": "int6", "int8": "int6", "int9": "int2", "int10": "int6", "hypothesis": "int6"}, "sentences_pred_aligned": ["sent1 -> int1", "sent3 -> int2", "sent3 -> int2", "int1 & sent4 -> int3", "int1 & sent4 -> int3", "int2 & sent5 -> int2", "int3 & int3 & sent5 -> int6", "int3 & int3 & sent5 -> int6", "int3 & int3 & sent3 -> int2", "int2 & int2 & int6 -> int6", "int2 & int6 & int6 -> int6"]}, "proof-intermediates": {"ROUGE_L_F": 0.23909090909090908, "ROUGE_L_F_perfect_align": 0.33499999999999996, "BLEURT": -0.4363397021185268, "BLEURT_perfect_align": -0.39436547458171844, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.18181818181818182, "pred": ["he spends 3 hours at 60 mph because 3 x 60 = 3", "he spends 2 hours in traffic because 4 x 60 = 2", "he spends 2 hours at 60 mph because 4 x 60 = 2", "he spends 1 hour at 60 mph because 3 x 30 = 1", "he spends 1/2 hour at 60 mph because 3 x 30 = 60", "he spends 4 hours at 80 mph because 4 x 80 = 80", "he spends 2 hours at 80 mph because 4 - 60 = 2", "he spends 4 hours at 80 mph because 4 - 60 = 4", "he spends 2 hours at 60 mph because 4 - 1 = 2", "he is 45 miles from home because 4 x 2 + 8 = 45", "the answer is 45"], "gold": ["when he turned around he was 3*60=180 miles from home", "he was only able to drive 4-2=2 hours in the first four hours", "he was only able to drive 4-2=2 hours in the first four hours", "in half an hour he goes 30*5=15 miles", "in half an hour he goes 30*5=15 miles", "he was only able to drive 4-2=2 hours in the first four hours", "so he drove 120+15=135 miles", "so he drove 120+15=135 miles", "he was only able to drive 4-2=2 hours in the first four hours", "so he drove 120+15=135 miles", "so he drove 120+15=135 miles"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_9_81d0fa7c02", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 -> int1: Since Elizabeth worked 40 hours this week, her regular hourly rate is $10/hour * 40 hours = $200; sent2 & sent3 -> int2: Overtime pay is 1.2 * 40 hours = $36.; int2 & sent3 & int1 -> int3: Her total earnings for the week is $200 + $36 = $460; sent4 & int3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 -> int1: Since Elizabeth worked 40 hours this week, her regular hourly rate is $10/hour * 40 hours = $200; sent2 & sent3 -> int2: Overtime pay is 1.2 * 40 hours = $36.; int2 & sent3 & int1 -> int3: Her total earnings for the week is $200 + $36 = $460; sent4 & int3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.25, "R": 0.16666666666666666, "F1": 0.2, "acc": 0, "pred": ["int3 & int4 & sent3 -> int3", "int3 & sent4 -> int5", "sent1 -> int4", "sent2 & sent3 -> int3"], "gold": ["int1 & int2 -> int3", "int3 & int4 & sent4 -> int5", "int5 & sent4 -> hypothesis", "sent1 & sent2 -> int2", "sent1 & sent3 -> int1", "sent1 -> int4"], "pred_to_gold_mapping": {"int1": "int4", "int2": "int3", "int3": "int3", "hypothesis": "int5"}, "sentences_pred_aligned": ["sent1 -> int4", "sent2 & sent3 -> int3", "int3 & int4 & sent3 -> int3", "int3 & sent4 -> int5"]}, "proof-intermediates": {"ROUGE_L_F": 0.26, "ROUGE_L_F_perfect_align": 0.25000000000000006, "BLEURT": -0.724008958786726, "BLEURT_perfect_align": -0.7616710811853409, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.75, "pred": ["since elizabeth worked 40 hours this week, her regular hourly rate is $10/hour * 40 hours = $200", "overtime pay is 12 * 40 hours = $36", "her total earnings for the week is $200 + $36 = $460", "the answer is 460"], "gold": ["her regular weekly earning is $10 x 40 = $400", "so, eliza will receive $12 x 5 =$60 for overtime pay", "so, eliza will receive $12 x 5 =$60 for overtime pay", "thus, eliza will receive a total of $400 + $60 = $460 for this week's work"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_10_35eaba6383", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent1 -> int1: In the second month, there were 3*60=120 downloads.; sent1 & int1 -> int2: In the first month, there were 60+120=180 downloads.; sent3 & int2 -> int3: In the third month, there were 180-300=72 downloads.; int3 & sent1 & int2 -> int4: The total number of downloads for the three months was 60+120+72=366 downloads.; int4 & sent4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent1 -> int1: In the second month, there were 3*60=120 downloads.; sent1 & int1 -> int2: In the first month, there were 60+120=180 downloads.; sent3 & int2 -> int3: In the third month, there were 180-300=72 downloads.; int3 & sent1 & int2 -> int4: The total number of downloads for the three months was 60+120+72=366 downloads.; int4 & sent4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.4, "R": 0.3333333333333333, "F1": 0.3636363636363636, "acc": 0, "pred": ["int1 & int3 & sent1 -> int3", "int1 & sent1 -> int1", "int1 & sent3 -> int3", "int3 & sent4 -> hypothesis", "sent1 & sent2 -> int1"], "gold": ["int1 & int3 -> int4", "int1 & sent1 -> int2", "int1 & sent3 -> int3", "int2 & int4 -> int5", "int5 & sent4 -> hypothesis", "sent1 & sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int3", "int4": "int3", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent1 & sent2 -> int1", "int1 & sent1 -> int1", "int1 & sent3 -> int3", "int1 & int3 & sent1 -> int3", "int3 & sent4 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.5599999999999999, "ROUGE_L_F_perfect_align": 0.5599999999999999, "BLEURT": 0.4304256118834019, "BLEURT_perfect_align": 0.4304256118834019, "BLEURT_P": 0.6, "BLEURT_R": 0.3333333333333333, "BLEURT_F1": 0.42857142857142855, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["in the second month, there were 3*60=120 downloads", "in the first month, there were 60+120=180 downloads", "in the third month, there were 180-300=72 downloads", "the total number of downloads for the three months was 60+120+72=366 downloads", "the answer is 366"], "gold": ["the number of downloads of the program in the second month increased to 3*60 = 180", "the number of downloads of the program in the second month increased to 3*60 = 180", "in the third month, the number of downloads of the program reduced by 30/100*180 = 54", "in the third month, the number of downloads of the program reduced by 30/100*180 = 54", "the answer is 366"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_11_f765a410ff", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent4 -> int1: Two dozen cupcakes cost $80 per dozen so 2 dozen cupcakes cost $80 * 12 = $120; sent3 -> int2: Three dozen donuts cost $68 per dozen so 3 dozen donuts cost $68 * 12 = $108; sent3 -> int3: The cost of 3 dozen donuts is $68 per dozen so 3 dozen donuts cost $68 * 12 = $108; int2 & int3 & sent6 -> int4: The total cost of all the pastries was $694 so 694 - 108 = $694; sent6 & int4 & int1 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent4 -> int1: Two dozen cupcakes cost $80 per dozen so 2 dozen cupcakes cost $80 * 12 = $120; sent3 -> int2: Three dozen donuts cost $68 per dozen so 3 dozen donuts cost $68 * 12 = $108; sent3 -> int3: The cost of 3 dozen donuts is $68 per dozen so 3 dozen donuts cost $68 * 12 = $108; int2 & int3 & sent6 -> int4: The total cost of all the pastries was $694 so 694 - 108 = $694; sent6 & int4 & int1 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.75, "F1": 0.8571428571428571, "acc": 0, "pred": ["sent3", "sent4", "sent6"], "gold": ["sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.4, "R": 0.4, "F1": 0.4000000000000001, "acc": 0, "pred": ["int1 & int1 & sent6 -> int1", "int1 & int2 & sent6 -> int4", "sent3 -> int1", "sent3 -> int1", "sent4 -> int2"], "gold": ["int1 & int2 & int3 & sent6 -> int4", "int4 & sent6 -> hypothesis", "sent3 -> int1", "sent4 -> int2", "sent5 -> int3"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int1", "int3": "int1", "int4": "int1", "hypothesis": "int4"}, "sentences_pred_aligned": ["sent4 -> int2", "sent3 -> int1", "sent3 -> int1", "int1 & int1 & sent6 -> int1", "int1 & int2 & sent6 -> int4"]}, "proof-intermediates": {"ROUGE_L_F": 0.292, "ROUGE_L_F_perfect_align": 0.25666666666666665, "BLEURT": -0.4208040736615658, "BLEURT_perfect_align": -0.11444236990064383, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.6, "pred": ["two dozen cupcakes cost $80 per dozen so 2 dozen cupcakes cost $80 * 12 = $120", "three dozen donuts cost $68 per dozen so 3 dozen donuts cost $68 * 12 = $108", "the cost of 3 dozen donuts is $68 per dozen so 3 dozen donuts cost $68 * 12 = $108", "the total cost of all the pastries was $694 so 694 - 108 = $694", "the answer is 694"], "gold": ["the total charge for the mini cupcakes was 2 x $80 = $160", "the total charge for the doughnuts was 3 x $68 = $204", "the total charge for the doughnuts was 3 x $68 = $204", "the total charge for the doughnuts was 3 x $68 = $204", "therefore the total amount toula paid for the pastries was $204 + $160 + $330 = $694"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_12_b192b3e028", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent5 -> int1: It will cost 90*3=$30 to water and feed the tree.; sent3 & int1 -> int2: The tree will produce 7*30=270 lemons.; int2 & sent4 -> int3: He can sell the lemons for 1.5*270=$13.; int3 & sent6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent5 -> int1: It will cost 90*3=$30 to water and feed the tree.; sent3 & int1 -> int2: The tree will produce 7*30=270 lemons.; int2 & sent4 -> int3: He can sell the lemons for 1.5*270=$13.; int3 & sent6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4", "sent5", "sent6"], "gold": ["sent2", "sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int3 & sent3 -> int3", "int3 & sent4 -> int3", "int3 & sent6 -> int3", "sent2 & sent5 -> int3"], "gold": ["int1 & sent5 -> int2", "int2 & sent2 & sent6 -> int3", "int3 & sent6 -> int4", "int4 & sent6 -> hypothesis", "sent3 & sent4 -> int1"], "pred_to_gold_mapping": {"int1": "int3", "int2": "int3", "int3": "int3", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent2 & sent5 -> int3", "int3 & sent3 -> int3", "int3 & sent4 -> int3", "int3 & sent6 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.225, "ROUGE_L_F_perfect_align": 0.15, "BLEURT": -1.0133110508322716, "BLEURT_perfect_align": -1.7950799465179443, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.25, "pred": ["it will cost 90*3=$30 to water and feed the tree", "the tree will produce 7*30=270 lemons", "he can sell the lemons for 15*270=$13", "the answer is 13"], "gold": ["it will take 12 years to earn enough to pay off the tree because 90 / 75 = 12", "it will take 12 years to earn enough to pay off the tree because 90 / 75 = 12", "it will take 12 years to earn enough to pay off the tree because 90 / 75 = 12", "it will take 12 years to earn enough to pay off the tree because 90 / 75 = 12"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_13_bf283ac359", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent5 & sent3 -> int1: She sold 5 vacuum cleaners / 3 = 2 vacuum cleaners at the green house.; sent3 & int1 -> int2: She sold 2 vacuum cleaners + 2 vacuum cleaners = 4 vacuum cleaners at the red house.; int2 & sent4 -> int3: She was left with 4 vacuum cleaners / 2 = 2 vacuum cleaners at the orange house.; sent5 & int2 & sent4 -> int4: She had 5 vacuum cleaners / 2 vacuum cleaners = 3 vacuum cleaners left.; int2 & sent4 -> int5: She was left with 4 vacuum cleaners / 2 = 3 vacuum cleaners at the orange house.; sent5 & int2 & sent4 -> int6: She had 5 vacuum cleaners / 2 vacuum cleaners = 2 vacuum cleaners left.; int4 & sent4 -> int7: She had 3 vacuum cleaners / 2 vacuum cleaners = 2 vacuum cleaners at the orange house.; int6 & int5 -> int8: She started with 2 vacuum cleaners + 3 vacuum cleaners = 18 vacuum cleaners.; int7 & int8 & int3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent5 & sent3 -> int1: She sold 5 vacuum cleaners / 3 = 2 vacuum cleaners at the green house.; sent3 & int1 -> int2: She sold 2 vacuum cleaners + 2 vacuum cleaners = 4 vacuum cleaners at the red house.; int2 & sent4 -> int3: She was left with 4 vacuum cleaners / 2 = 2 vacuum cleaners at the orange house.; sent5 & int2 & sent4 -> int4: She had 5 vacuum cleaners / 2 vacuum cleaners = 3 vacuum cleaners left.; int2 & sent4 -> int5: She was left with 4 vacuum cleaners / 2 = 3 vacuum cleaners at the orange house.; sent5 & int2 & sent4 -> int6: She had 5 vacuum cleaners / 2 vacuum cleaners = 2 vacuum cleaners left.; int4 & sent4 -> int7: She had 3 vacuum cleaners / 2 vacuum cleaners = 2 vacuum cleaners at the orange house.; int6 & int5 -> int8: She started with 2 vacuum cleaners + 3 vacuum cleaners = 18 vacuum cleaners.; int7 & int8 & int3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.8, "F1": 0.888888888888889, "acc": 0, "pred": ["sent2", "sent3", "sent4", "sent5"], "gold": ["sent2", "sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int3 & int3 & int3 -> int3", "int3 & int3 -> int3", "int3 & sent3 -> int3", "int3 & sent4 & sent5 -> int3", "int3 & sent4 & sent5 -> int3", "int3 & sent4 -> int3", "int3 & sent4 -> int3", "int3 & sent4 -> int3", "sent2 & sent3 & sent5 -> int3"], "gold": ["int1 & sent3 -> int2", "int2 & sent2 -> int3", "int3 & sent6 -> hypothesis", "sent4 & sent5 -> int1"], "pred_to_gold_mapping": {"int1": "int3", "int2": "int3", "int3": "int3", "int4": "int3", "int5": "int3", "int6": "int3", "int7": "int3", "int8": "int3", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent2 & sent3 & sent5 -> int3", "int3 & sent3 -> int3", "int3 & sent4 -> int3", "int3 & sent4 & sent5 -> int3", "int3 & sent4 -> int3", "int3 & sent4 & sent5 -> int3", "int3 & sent4 -> int3", "int3 & int3 -> int3", "int3 & int3 & int3 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.2211111111111111, "ROUGE_L_F_perfect_align": 0.22285714285714284, "BLEURT": -1.3851129081514146, "BLEURT_perfect_align": -1.4069792883736747, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.7777777777777778, "pred": ["she sold 5 vacuum cleaners / 3 = 2 vacuum cleaners at the green house", "she sold 2 vacuum cleaners + 2 vacuum cleaners = 4 vacuum cleaners at the red house", "she was left with 4 vacuum cleaners / 2 = 2 vacuum cleaners at the orange house", "she had 5 vacuum cleaners / 2 vacuum cleaners = 3 vacuum cleaners left", "she was left with 4 vacuum cleaners / 2 = 3 vacuum cleaners at the orange house", "she had 5 vacuum cleaners / 2 vacuum cleaners = 2 vacuum cleaners left", "she had 3 vacuum cleaners / 2 vacuum cleaners = 2 vacuum cleaners at the orange house", "she started with 2 vacuum cleaners + 3 vacuum cleaners = 18 vacuum cleaners", "the answer is 18"], "gold": ["now we know that 2/3 * x = 12, where x is the number of vacuum cleaners melanie started with we can find x by dividing each side of the equation by 2/3, which produces x = 18", "now we know that 2/3 * x = 12, where x is the number of vacuum cleaners melanie started with we can find x by dividing each side of the equation by 2/3, which produces x = 18", "now we know that 2/3 * x = 12, where x is the number of vacuum cleaners melanie started with we can find x by dividing each side of the equation by 2/3, which produces x = 18", "now we know that 2/3 * x = 12, where x is the number of vacuum cleaners melanie started with we can find x by dividing each side of the equation by 2/3, which produces x = 18", "now we know that 2/3 * x = 12, where x is the number of vacuum cleaners melanie started with we can find x by dividing each side of the equation by 2/3, which produces x = 18", "now we know that 2/3 * x = 12, where x is the number of vacuum cleaners melanie started with we can find x by dividing each side of the equation by 2/3, which produces x = 18", "now we know that 2/3 * x = 12, where x is the number of vacuum cleaners melanie started with we can find x by dividing each side of the equation by 2/3, which produces x = 18", "now we know that 2/3 * x = 12, where x is the number of vacuum cleaners melanie started with we can find x by dividing each side of the equation by 2/3, which produces x = 18", "now we know that 2/3 * x = 12, where x is the number of vacuum cleaners melanie started with we can find x by dividing each side of the equation by 2/3, which produces x = 18"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_14_e601ee3b3e", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 & sent2 -> int1: There are 20 x 20 = 40 students enrolled in contemporary dance.; sent2 & sent3 & int1 -> int2: There are 40 - 25 = 30 students enrolled in jazz dance.; int2 & sent2 -> int3: There are 20 x 30 = 60 students enrolled in hip-hop dance.; sent5 & int3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 & sent2 -> int1: There are 20 x 20 = 40 students enrolled in contemporary dance.; sent2 & sent3 & int1 -> int2: There are 40 - 25 = 30 students enrolled in jazz dance.; int2 & sent2 -> int3: There are 20 x 30 = 60 students enrolled in hip-hop dance.; sent5 & int3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.8, "F1": 0.888888888888889, "acc": 0, "pred": ["sent1", "sent2", "sent3", "sent5"], "gold": ["sent1", "sent2", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.25, "R": 0.16666666666666666, "F1": 0.2, "acc": 0, "pred": ["int1 & sent2 & sent3 -> int2", "int2 & sent2 -> int2", "int2 & sent5 -> int5", "sent1 & sent2 -> int1"], "gold": ["int1 & sent3 & sent4 -> int2", "int2 & sent3 -> int3", "int3 & sent3 -> int4", "int4 & sent1 & sent5 -> int5", "int5 & sent5 -> hypothesis", "sent1 & sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int2", "int3": "int2", "hypothesis": "int5"}, "sentences_pred_aligned": ["sent1 & sent2 -> int1", "int1 & sent2 & sent3 -> int2", "int2 & sent2 -> int2", "int2 & sent5 -> int5"]}, "proof-intermediates": {"ROUGE_L_F": 0.57, "ROUGE_L_F_perfect_align": 0.86, "BLEURT": -0.21433761343359947, "BLEURT_perfect_align": 0.6253673434257507, "BLEURT_P": 0.25, "BLEURT_R": 0.16666666666666666, "BLEURT_F1": 0.2, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.25, "pred": ["there are 20 x 20 = 40 students enrolled in contemporary dance", "there are 40 - 25 = 30 students enrolled in jazz dance", "there are 20 x 30 = 60 students enrolled in hip-hop dance", "the answer is 60"], "gold": ["there are 20 x 20/100 = 4 students who enrolled in contemporary dance", "so, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance", "so, 20 - 4 = 16 students are enrolled in either jazz or hip-hop dance", "this is 12/20 x 100% = 60% of the entire students"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_15_213dd01190", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent1 -> int1: The jewelry market will rise 2.5% + 1.2% = 5% during the month.; sent1 & int1 -> int2: The electronic gadgets market will rise 8% + $8,000 = $12,000 during the month.; int2 & sent1 -> int3: Thus, the merchant would make a purchase plan that involves $5,000 + $12,000 = $25,000.; int3 & sent3 & sent4 -> int4: Thus, his profit would be $25000 - $25,000 = $125,000.; int4 & sent4 & sent3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent1 -> int1: The jewelry market will rise 2.5% + 1.2% = 5% during the month.; sent1 & int1 -> int2: The electronic gadgets market will rise 8% + $8,000 = $12,000 during the month.; int2 & sent1 -> int3: Thus, the merchant would make a purchase plan that involves $5,000 + $12,000 = $25,000.; int3 & sent3 & sent4 -> int4: Thus, his profit would be $25000 - $25,000 = $125,000.; int4 & sent4 & sent3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.2, "R": 0.25, "F1": 0.22222222222222224, "acc": 0, "pred": ["hypothesis & sent3 & sent4 -> hypothesis", "int1 & sent1 -> int1", "int1 & sent1 -> int1", "int1 & sent3 & sent4 -> hypothesis", "sent1 & sent2 -> int1"], "gold": ["int1 & int2 & sent3 -> int3", "int3 & sent4 -> hypothesis", "sent1 & sent2 -> int1", "sent1 & sent2 -> int2"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int1", "int4": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent1 & sent2 -> int1", "int1 & sent1 -> int1", "int1 & sent1 -> int1", "int1 & sent3 & sent4 -> hypothesis", "hypothesis & sent3 & sent4 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.364, "ROUGE_L_F_perfect_align": 0.364, "BLEURT": -0.25713924169540403, "BLEURT_perfect_align": -0.25713924169540403, "BLEURT_P": 0.2, "BLEURT_R": 0.25, "BLEURT_F1": 0.22222222222222224, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["the jewelry market will rise 25% + 12% = 5% during the month", "the electronic gadgets market will rise 8% + $8,000 = $12,000 during the month", "thus, the merchant would make a purchase plan that involves $5,000 + $12,000 = $25,000", "thus, his profit would be $25000 - $25,000 = $125,000", "the answer is 125"], "gold": ["if he purchases jewelry, he will make a profit of 25% which is $5000*(25/100) = $125", "if he purchases jewelry, he will make a profit of 25% which is $5000*(25/100) = $125", "if he purchases jewelry, he will make a profit of 25% which is $5000*(25/100) = $125", "the answer is 125", "the answer is 125"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_16_ce6da24bec", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent1 -> int1: The first day, both trains traveled 80 + 150 = 120 miles.; sent3 & int1 -> int2: On the second day, they traveled 120 + 150 = 230 miles.; int2 & sent4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent1 -> int1: The first day, both trains traveled 80 + 150 = 120 miles.; sent3 & int1 -> int2: On the second day, they traveled 120 + 150 = 230 miles.; int2 & sent4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.2, "F1": 0.25, "acc": 0, "pred": ["int1 & sent3 -> int3", "int3 & sent4 -> int4", "sent1 & sent2 -> int1"], "gold": ["int1 & int2 -> int3", "int2 & int3 & sent4 -> int4", "int4 & sent4 -> hypothesis", "sent1 & sent2 -> int1", "sent1 & sent3 -> int2"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int3", "hypothesis": "int4"}, "sentences_pred_aligned": ["sent1 & sent2 -> int1", "int1 & sent3 -> int3", "int3 & sent4 -> int4"]}, "proof-intermediates": {"ROUGE_L_F": 0.37666666666666665, "ROUGE_L_F_perfect_align": 0.37666666666666665, "BLEURT": -0.6678301692008972, "BLEURT_perfect_align": -0.6678301692008972, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["the first day, both trains traveled 80 + 150 = 120 miles", "on the second day, they traveled 120 + 150 = 230 miles", "the answer is 230"], "gold": ["on the first day, the trains covered 2 trains * 80 miles/train = 160 miles together", "the combined distance the two trains covered in the two days is 300 miles + 160 miles = 460 miles", "the average distance for the two days is 460 miles / 2 trains = 230 miles/train"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_17_db87bf5161", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent4 & sent1 -> int1: For her 35 hours of teaching, she gets paid 35*20 = $475; sent4 & sent1 -> int2: For her 35 hours of teaching, she gets paid 35*20 = $435; sent4 & sent1 -> int3: For her 35 hours of teaching, Jill gets paid 35*20 = $475; sent5 & sent2 -> int4: For her 15 hours of coaching, she gets paid 30*15 = $175; int1 & sent3 & int3 -> int5: Her total pay is $475+$1750 = $57,000; int4 & sent3 & int5 -> int6: Her annual salary is $57,000+$1750 = $57500; sent5 & int6 & int2 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent4 & sent1 -> int1: For her 35 hours of teaching, she gets paid 35*20 = $475; sent4 & sent1 -> int2: For her 35 hours of teaching, she gets paid 35*20 = $435; sent4 & sent1 -> int3: For her 35 hours of teaching, Jill gets paid 35*20 = $475; sent5 & sent2 -> int4: For her 15 hours of coaching, she gets paid 30*15 = $175; int1 & sent3 & int3 -> int5: Her total pay is $475+$1750 = $57,000; int4 & sent3 & int5 -> int6: Her annual salary is $57,000+$1750 = $57500; sent5 & int6 & int2 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4", "sent5"], "gold": ["sent1", "sent2", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.2857142857142857, "R": 0.4, "F1": 0.3333333333333333, "acc": 0, "pred": ["int1 & int1 & sent3 -> int1", "int1 & int2 & sent3 -> int4", "int1 & int4 & sent5 -> int4", "sent1 & sent4 -> int1", "sent1 & sent4 -> int1", "sent1 & sent4 -> int1", "sent2 & sent5 -> int2"], "gold": ["int1 & int2 -> int3", "int3 & sent3 -> int4", "int4 & sent5 -> hypothesis", "sent1 & sent4 -> int1", "sent2 & sent5 -> int2"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int1", "int4": "int2", "int5": "int1", "int6": "int4", "hypothesis": "int4"}, "sentences_pred_aligned": ["sent1 & sent4 -> int1", "sent1 & sent4 -> int1", "sent1 & sent4 -> int1", "sent2 & sent5 -> int2", "int1 & int1 & sent3 -> int1", "int1 & int2 & sent3 -> int4", "int1 & int4 & sent5 -> int4"]}, "proof-intermediates": {"ROUGE_L_F": 0.0, "ROUGE_L_F_perfect_align": 0.0, "BLEURT": -1.070746898651123, "BLEURT_perfect_align": -1.0104413628578186, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.8571428571428571, "pred": ["for her 35 hours of teaching, she gets paid 35*20 = $475", "for her 35 hours of teaching, she gets paid 35*20 = $435", "for her 35 hours of teaching, jill gets paid 35*20 = $475", "for her 15 hours of coaching, she gets paid 30*15 = $175", "her total pay is $475+$1750 = $57,000", "her annual salary is $57,000+$1750 = $57500", "the answer is 57500"], "gold": ["", "", "", "", "", "", ""]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_18_18856591b9", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 -> int1: She eats 3 x 7 = 12 eggs every day.; sent2 & int1 -> int2: So in 4 weeks she will eat 12 x 4 = 37 eggs.; sent2 & int2 -> int3: There are 37 / 4 = 7 dozens of eggs in 4 weeks.; int3 & sent2 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 -> int1: She eats 3 x 7 = 12 eggs every day.; sent2 & int1 -> int2: So in 4 weeks she will eat 12 x 4 = 37 eggs.; sent2 & int2 -> int3: There are 37 / 4 = 7 dozens of eggs in 4 weeks.; int3 & sent2 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2"], "gold": ["sent1", "sent2"]}, "proof-steps": {"P": 0.5, "R": 0.5, "F1": 0.5, "acc": 0, "pred": ["int1 & sent2 -> int2", "int2 & sent2 -> int2", "int2 & sent2 -> int2", "sent1 -> int1"], "gold": ["int1 & sent2 -> int2", "int2 & sent2 -> int3", "int3 & sent2 -> hypothesis", "sent1 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int2", "int3": "int2", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent1 -> int1", "int1 & sent2 -> int2", "int2 & sent2 -> int2", "int2 & sent2 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.3375, "ROUGE_L_F_perfect_align": 0.3375, "BLEURT": -0.3979220986366272, "BLEURT_perfect_align": -0.3979220986366272, "BLEURT_P": 0.25, "BLEURT_R": 0.25, "BLEURT_F1": 0.25, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["she eats 3 x 7 = 12 eggs every day", "so in 4 weeks she will eat 12 x 4 = 37 eggs", "there are 37 / 4 = 7 dozens of eggs in 4 weeks", "the answer is 7"], "gold": ["she eats 3 eggs every day and there are 7 days in a week so she eats 3*7 = 21 eggs a week", "after 4 weeks she will have eaten 4*21 = 84 eggs", "after 4 weeks she will have eaten 4*21 = 84 eggs", "after 4 weeks she will have eaten 4*21 = 84 eggs"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_19_c5a60611f6", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent2 -> int1: It will take Maria 1+2=4 hours to walk the remaining distance.; sent3 & sent2 -> int2: It will take Maria 1+2 = 4 hours to walk the remaining distance.; sent2 & sent3 -> int3: It will take Maria 1+2 = 4 hours to walk the next two miles.; sent2 & sent3 -> int4: It will take Maria 1+2 = 4 hours to walk the remaining 2 miles.; sent1 & sent4 & int1 -> int5: She needs to walk at a speed of 4 miles/hour for the remaining 12 miles.; int5 & int4 & int3 -> int6: Maria needs to walk at a speed of 4 miles/hour for the remaining 12 miles.; int4 & int6 & int3 -> int7: Therefore, Maria needs to walk at a speed of 4+4+4=6 miles/hour for the remaining 12 miles.; int7 & int2 & sent5 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent2 -> int1: It will take Maria 1+2=4 hours to walk the remaining distance.; sent3 & sent2 -> int2: It will take Maria 1+2 = 4 hours to walk the remaining distance.; sent2 & sent3 -> int3: It will take Maria 1+2 = 4 hours to walk the next two miles.; sent2 & sent3 -> int4: It will take Maria 1+2 = 4 hours to walk the remaining 2 miles.; sent1 & sent4 & int1 -> int5: She needs to walk at a speed of 4 miles/hour for the remaining 12 miles.; int5 & int4 & int3 -> int6: Maria needs to walk at a speed of 4 miles/hour for the remaining 12 miles.; int4 & int6 & int3 -> int7: Therefore, Maria needs to walk at a speed of 4+4+4=6 miles/hour for the remaining 12 miles.; int7 & int2 & sent5 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 0.8, "R": 1.0, "F1": 0.888888888888889, "acc": 0, "pred": ["sent1", "sent2", "sent3", "sent4", "sent5"], "gold": ["sent1", "sent2", "sent3", "sent5"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int2 & int2 & int2 -> int2", "int2 & int2 & int2 -> int2", "int2 & int2 & sent5 -> int4", "int2 & sent1 & sent4 -> int2", "sent2 & sent3 -> int2", "sent2 & sent3 -> int2", "sent2 & sent3 -> int2", "sent2 & sent3 -> int2"], "gold": ["int1 & sent2 & sent3 -> int2", "int3 & sent5 -> int4", "int4 & sent5 -> hypothesis", "sent1 & sent2 & sent3 -> int3", "sent1 & sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int2", "int3": "int2", "int4": "int2", "int5": "int2", "int6": "int2", "int7": "int2", "hypothesis": "int4"}, "sentences_pred_aligned": ["sent2 & sent3 -> int2", "sent2 & sent3 -> int2", "sent2 & sent3 -> int2", "sent2 & sent3 -> int2", "int2 & sent1 & sent4 -> int2", "int2 & int2 & int2 -> int2", "int2 & int2 & int2 -> int2", "int2 & int2 & sent5 -> int4"]}, "proof-intermediates": {"ROUGE_L_F": 0.0, "ROUGE_L_F_perfect_align": 0.0, "BLEURT": -1.071555882692337, "BLEURT_perfect_align": 0.0, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.0, "pred": ["it will take maria 1+2=4 hours to walk the remaining distance", "it will take maria 1+2 = 4 hours to walk the remaining distance", "it will take maria 1+2 = 4 hours to walk the next two miles", "it will take maria 1+2 = 4 hours to walk the remaining 2 miles", "she needs to walk at a speed of 4 miles/hour for the remaining 12 miles", "maria needs to walk at a speed of 4 miles/hour for the remaining 12 miles", "therefore, maria needs to walk at a speed of 4+4+4=6 miles/hour for the remaining 12 miles", "the answer is 6"], "gold": ["", "", "", "", "", "", "", ""]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_20_ea9cd7843f", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 -> int1: I have 10 liters of orange drink that are two-thirds water because 10 x 2 = 10; sent2 -> int2: I have 15 liters of pineapple that are three-fifths water because 15 / 3 = 15; int1 & sent4 -> int3: I spill one liter of orange drink because 10 x 1 = 1; sent5 & int2 & int3 -> int4: There is 24 liters left after I have added the orange and pineapple drinks because 15 + 10 + 1 = 24; sent5 & int4 -> int5: There is 15 liters of water in the remaining 24 liters because 24 - 24 = 15; int5 & sent5 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 -> int1: I have 10 liters of orange drink that are two-thirds water because 10 x 2 = 10; sent2 -> int2: I have 15 liters of pineapple that are three-fifths water because 15 / 3 = 15; int1 & sent4 -> int3: I spill one liter of orange drink because 10 x 1 = 1; sent5 & int2 & int3 -> int4: There is 24 liters left after I have added the orange and pineapple drinks because 15 + 10 + 1 = 24; sent5 & int4 -> int5: There is 15 liters of water in the remaining 24 liters because 24 - 24 = 15; int5 & sent5 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent4", "sent5"], "gold": ["sent1", "sent2", "sent4", "sent5"]}, "proof-steps": {"P": 0.16666666666666666, "R": 0.2, "F1": 0.1818181818181818, "acc": 0, "pred": ["int1 & int2 & sent5 -> int4", "int2 & sent4 -> int2", "int4 & sent5 -> int4", "int4 & sent5 -> int4", "sent1 -> int2", "sent2 -> int1"], "gold": ["int1 & int3 & sent5 -> int4", "int2 & sent1 -> int3", "int4 & sent5 -> hypothesis", "sent1 & sent4 -> int2", "sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int1", "int3": "int2", "int4": "int4", "int5": "int4", "hypothesis": "int4"}, "sentences_pred_aligned": ["sent1 -> int2", "sent2 -> int1", "int2 & sent4 -> int2", "int1 & int2 & sent5 -> int4", "int4 & sent5 -> int4", "int4 & sent5 -> int4"]}, "proof-intermediates": {"ROUGE_L_F": 0.36833333333333335, "ROUGE_L_F_perfect_align": 0.372, "BLEURT": -0.6208980890611807, "BLEURT_perfect_align": -0.6201380148530007, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.8333333333333334, "pred": ["i have 10 liters of orange drink that are two-thirds water because 10 x 2 = 10", "i have 15 liters of pineapple that are three-fifths water because 15 / 3 = 15", "i spill one liter of orange drink because 10 x 1 = 1", "there is 24 liters left after i have added the orange and pineapple drinks because 15 + 10 + 1 = 24", "there is 15 liters of water in the remaining 24 liters because 24 - 24 = 15", "the answer is 15"], "gold": ["after 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left", "there are 15 x 3/5 = 9 liters of water from the 15 liters pineapple drink", "after 1 liter of orange drink was spilled, there were 10 - 1 = 9 liters of orange drink left", "thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters", "thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters", "thus, there are a total of 9 + 6 = 15 liters of water out of the 24 liters"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_21_6858311ee4", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent2 -> int1: Raymond was born 6 years before Samantha, which means he was 23 + 6 = 28 years old.; sent4 & int1 -> int2: Samantha is 31 + 28 = 42 years old.; int2 & sent5 & int1 -> int3: Thus, Raymond's son was born 42 - 23 = 14 years ago.; int3 & sent5 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent2 -> int1: Raymond was born 6 years before Samantha, which means he was 23 + 6 = 28 years old.; sent4 & int1 -> int2: Samantha is 31 + 28 = 42 years old.; int2 & sent5 & int1 -> int3: Thus, Raymond's son was born 42 - 23 = 14 years ago.; int3 & sent5 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4", "sent5"], "gold": ["sent2", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.25, "R": 0.3333333333333333, "F1": 0.28571428571428575, "acc": 0, "pred": ["int1 & int2 & sent5 -> int2", "int1 & sent4 -> int2", "int2 & sent5 -> int2", "sent2 & sent3 -> int1"], "gold": ["int1 & sent4 & sent5 -> int2", "int2 & sent5 -> hypothesis", "sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int2", "int3": "int2", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent2 & sent3 -> int1", "int1 & sent4 -> int2", "int1 & int2 & sent5 -> int2", "int2 & sent5 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.40499999999999997, "ROUGE_L_F_perfect_align": 0.4566666666666666, "BLEURT": -0.7581086531281471, "BLEURT_perfect_align": -0.6943041384220123, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.75, "pred": ["raymond was born 6 years before samantha, which means he was 23 + 6 = 28 years old", "samantha is 31 + 28 = 42 years old", "thus, raymond's son was born 42 - 23 = 14 years ago", "the answer is 14"], "gold": ["when raymond's son was born samantha was 23 - 6 = 17 years old", "thus it has been 31 - 17 = 14 years since raymond's son was born", "thus it has been 31 - 17 = 14 years since raymond's son was born", "thus it has been 31 - 17 = 14 years since raymond's son was born"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_22_b2e7b4eecc", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent2 -> int1: Billy has 8 customers - 3 customers = 4 customers who buy dvds.; int1 & sent4 -> int2: The next 2 customers buy 2 dvds each, so Billy has 4 + 2 = 6 customers.; sent5 & int2 -> int3: His last 3 customers don't buy any dvds, so Billy didn't sell any dvds to those customers.; int2 & sent5 -> int4: His last 3 customers don't buy any dvds, so Billy sold 6 - 3 = 7 dvds on Tuesday.; int3 & sent6 & int4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent2 -> int1: Billy has 8 customers - 3 customers = 4 customers who buy dvds.; int1 & sent4 -> int2: The next 2 customers buy 2 dvds each, so Billy has 4 + 2 = 6 customers.; sent5 & int2 -> int3: His last 3 customers don't buy any dvds, so Billy didn't sell any dvds to those customers.; int2 & sent5 -> int4: His last 3 customers don't buy any dvds, so Billy sold 6 - 3 = 7 dvds on Tuesday.; int3 & sent6 & int4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 0.8, "R": 1.0, "F1": 0.888888888888889, "acc": 0, "pred": ["sent2", "sent3", "sent4", "sent5", "sent6"], "gold": ["sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int1 & sent4 -> int3", "int3 & int3 & sent6 -> int3", "int3 & sent5 -> int3", "int3 & sent5 -> int3", "sent2 & sent3 -> int1"], "gold": ["int1 & int2 & sent5 & sent6 -> int3", "int3 & sent6 -> hypothesis", "sent3 -> int1", "sent4 -> int2"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int3", "int3": "int3", "int4": "int3", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent2 & sent3 -> int1", "int1 & sent4 -> int3", "int3 & sent5 -> int3", "int3 & sent5 -> int3", "int3 & int3 & sent6 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.26599999999999996, "ROUGE_L_F_perfect_align": 0.0, "BLEURT": -0.5269039958715439, "BLEURT_perfect_align": 0.0, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.0, "pred": ["billy has 8 customers - 3 customers = 4 customers who buy dvds", "the next 2 customers buy 2 dvds each, so billy has 4 + 2 = 6 customers", "his last 3 customers don't buy any dvds, so billy didn't sell any dvds to those customers", "his last 3 customers don't buy any dvds, so billy sold 6 - 3 = 7 dvds on tuesday", "the answer is 7"], "gold": ["his first 3 customers buy 3 * 1 = 3 dvds", "he sells a total of 3 + 4 + 0 = 7 dvds", "he sells a total of 3 + 4 + 0 = 7 dvds", "he sells a total of 3 + 4 + 0 = 7 dvds", "he sells a total of 3 + 4 + 0 = 7 dvds"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_23_ddd8cf9c35", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent1 -> int1: After burning from 1:00 pm to 5:00 pm, the candle will be 2*5:00 = 8 centimeters shorter.; sent2 & int1 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent1 -> int1: After burning from 1:00 pm to 5:00 pm, the candle will be 2*5:00 = 8 centimeters shorter.; sent2 & int1 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2"], "gold": ["sent1", "sent2"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int2 & sent2 -> int2", "sent1 & sent2 -> int2"], "gold": ["int1 & sent1 -> int2", "int2 & sent2 -> hypothesis", "sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent1 & sent2 -> int2", "int2 & sent2 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.18, "ROUGE_L_F_perfect_align": 0.18, "BLEURT": -1.5522578358650208, "BLEURT_perfect_align": -1.5522578358650208, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["", "the answer is 8"], "gold": ["thus, the candle will be 2 * 4 = 8 centimeters shorter", "thus, the candle will be 2 * 4 = 8 centimeters shorter"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_24_18a7cbe01d", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 & sent2 -> int1: Kyle bought the book at $19.50, so it was $19.50 x 25/100 = $9.50.; int1 & sent3 & sent2 -> int2: The original price was $9.50 - $2 = $26.; int2 & sent3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 & sent2 -> int1: Kyle bought the book at $19.50, so it was $19.50 x 25/100 = $9.50.; int1 & sent3 & sent2 -> int2: The original price was $9.50 - $2 = $26.; int2 & sent3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3"], "gold": ["sent1", "sent2", "sent3"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int1 & sent2 & sent3 -> int1", "int1 & sent3 -> int1", "sent1 & sent2 -> int1"], "gold": ["int1 -> int2", "int2 -> int3", "int3 & sent3 -> hypothesis", "sent1 & sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "hypothesis": "int1"}, "sentences_pred_aligned": ["sent1 & sent2 -> int1", "int1 & sent2 & sent3 -> int1", "int1 & sent3 -> int1"]}, "proof-intermediates": {"ROUGE_L_F": 0.3, "ROUGE_L_F_perfect_align": 0.29000000000000004, "BLEURT": -1.0318092505137126, "BLEURT_perfect_align": -1.2700186371803284, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.6666666666666666, "pred": ["kyle bought the book at $1950, so it was $1950 x 25/100 = $950", "the original price was $950 - $2 = $26", "the answer is 26"], "gold": ["let x be the original price of the book the discounted price is x - x*25% = $1950", "let x be the original price of the book the discounted price is x - x*25% = $1950", "let x be the original price of the book the discounted price is x - x*25% = $1950"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_25_c2b12baadd", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 -> int1: The cost of 5 packs of milk is $3 x 5 = $15.; sent3 -> int2: The cost of 4 apples is $1.50 x 4 = $4.50.; sent1 & int2 & int1 & sent6 -> int3: So, Marie paid a total of $50 + $15 + $4.50 + $12 = $48.; int3 & sent6 -> int4: Therefore, she ordered 48 / 8 = 2 boxes of pizza.; int4 & sent6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 -> int1: The cost of 5 packs of milk is $3 x 5 = $15.; sent3 -> int2: The cost of 4 apples is $1.50 x 4 = $4.50.; sent1 & int2 & int1 & sent6 -> int3: So, Marie paid a total of $50 + $15 + $4.50 + $12 = $48.; int3 & sent6 -> int4: Therefore, she ordered 48 / 8 = 2 boxes of pizza.; int4 & sent6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.6666666666666666, "F1": 0.8, "acc": 0, "pred": ["sent1", "sent2", "sent3", "sent6"], "gold": ["sent1", "sent2", "sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.4, "R": 0.3333333333333333, "F1": 0.3636363636363636, "acc": 0, "pred": ["int1 & int2 & sent1 & sent6 -> int3", "int3 & sent6 -> int3", "int3 & sent6 -> int3", "sent2 -> int1", "sent3 -> int2"], "gold": ["int1 & int2 & sent1 -> int3", "int3 & sent4 & sent5 -> int4", "int4 & sent6 -> int5", "int5 & sent6 -> hypothesis", "sent2 -> int1", "sent3 -> int2"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int2", "int3": "int3", "int4": "int3", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent2 -> int1", "sent3 -> int2", "int1 & int2 & sent1 & sent6 -> int3", "int3 & sent6 -> int3", "int3 & sent6 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.39, "ROUGE_L_F_perfect_align": 0.62, "BLEURT": -0.5409276485443115, "BLEURT_perfect_align": 0.7981896698474884, "BLEURT_P": 0.4, "BLEURT_R": 0.3333333333333333, "BLEURT_F1": 0.3636363636363636, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.4, "pred": ["the cost of 5 packs of milk is $3 x 5 = $15", "the cost of 4 apples is $150 x 4 = $450", "so, marie paid a total of $50 + $15 + $450 + $12 = $48", "therefore, she ordered 48 / 8 = 2 boxes of pizza", "the answer is 2"], "gold": ["five packs of milk cost $3 x 5 = $15", "four apples cost $150 x 4 = $6", "the total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33", "the total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33", "the total cost of the chicken meal, milk, and apples is $12 + $15 + $6 = $33"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_26_ab1d75e849", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent5 & sent4 -> int1: The total cost of the shorts and pants is $22.50 + $22.50 = $39.50.; sent5 & sent2 & sent4 -> int2: The total cost of the shorts and shoes is $22.50 + $22.50 = $62.; sent4 & sent2 & sent5 -> int3: The total cost of the shorts and shoes is $22.50 + $22.50 = $32.50.; sent1 & sent3 -> int4: The total cost of shorts is $16.50 x 3 = $32.; int4 & int1 & int2 -> int5: Therefore, she spent a total of $244 + $39.50 + $244 = $243.; int5 & int3 & sent6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent5 & sent4 -> int1: The total cost of the shorts and pants is $22.50 + $22.50 = $39.50.; sent5 & sent2 & sent4 -> int2: The total cost of the shorts and shoes is $22.50 + $22.50 = $62.; sent4 & sent2 & sent5 -> int3: The total cost of the shorts and shoes is $22.50 + $22.50 = $32.50.; sent1 & sent3 -> int4: The total cost of shorts is $16.50 x 3 = $32.; int4 & int1 & int2 -> int5: Therefore, she spent a total of $244 + $39.50 + $244 = $243.; int5 & int3 & sent6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4", "sent5", "sent6"], "gold": ["sent1", "sent2", "sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int1 & int1 & int1 -> int1", "int1 & int1 & sent6 -> int2", "sent1 & sent3 -> int1", "sent2 & sent4 & sent5 -> int1", "sent2 & sent4 & sent5 -> int1", "sent2 & sent4 & sent5 -> int1"], "gold": ["int1 & sent6 -> int2", "int2 & sent6 -> hypothesis", "sent1 & sent2 & sent3 & sent4 & sent5 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int1", "int4": "int1", "int5": "int1", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent2 & sent4 & sent5 -> int1", "sent2 & sent4 & sent5 -> int1", "sent2 & sent4 & sent5 -> int1", "sent1 & sent3 -> int1", "int1 & int1 & int1 -> int1", "int1 & int1 & sent6 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.19666666666666666, "ROUGE_L_F_perfect_align": 0.24, "BLEURT": -0.8564740419387817, "BLEURT_perfect_align": -1.0743532478809357, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.3333333333333333, "pred": ["the total cost of the shorts and pants is $2250 + $2250 = $3950", "the total cost of the shorts and shoes is $2250 + $2250 = $62", "the total cost of the shorts and shoes is $2250 + $2250 = $3250", "the total cost of shorts is $1650 x 3 = $32", "therefore, she spent a total of $244 + $3950 + $244 = $243", "the answer is 243"], "gold": ["3 * (1650 + 2250 + 42) = $243", "3 * (1650 + 2250 + 42) = $243", "3 * (1650 + 2250 + 42) = $243", "3 * (1650 + 2250 + 42) = $243", "3 * (1650 + 2250 + 42) = $243", "mishka spent $243 on clothing"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_27_05688c8d4e", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 -> int1: She buys 15 servings of ice cream per carton at a cost of $4.00 per serving.; sent1 & sent3 & int1 -> int2: After 60 days, Cynthia will eat 60 servings at a cost of $4.00 per serving.; sent1 & sent3 & int1 -> int3: After 60 days, Cynthia will eat 60 servings at a cost of $4.00 x 15 = $28.00.; int3 & int2 & sent3 -> int4: Therefore, she will spend $28.00 - $4.00 = $16.00 on ice cream.; int4 & sent3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 -> int1: She buys 15 servings of ice cream per carton at a cost of $4.00 per serving.; sent1 & sent3 & int1 -> int2: After 60 days, Cynthia will eat 60 servings at a cost of $4.00 per serving.; sent1 & sent3 & int1 -> int3: After 60 days, Cynthia will eat 60 servings at a cost of $4.00 x 15 = $28.00.; int3 & int2 & sent3 -> int4: Therefore, she will spend $28.00 - $4.00 = $16.00 on ice cream.; int4 & sent3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3"], "gold": ["sent1", "sent2", "sent3"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int1 & int1 & sent3 -> int1", "int1 & sent1 & sent3 -> int1", "int1 & sent1 & sent3 -> int1", "int1 & sent3 -> int1", "sent2 -> int1"], "gold": ["int1 & sent2 -> int2", "int2 & sent3 -> hypothesis", "sent1 & sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int1", "int4": "int1", "hypothesis": "int1"}, "sentences_pred_aligned": ["sent2 -> int1", "int1 & sent1 & sent3 -> int1", "int1 & sent1 & sent3 -> int1", "int1 & int1 & sent3 -> int1", "int1 & sent3 -> int1"]}, "proof-intermediates": {"ROUGE_L_F": 0.246, "ROUGE_L_F_perfect_align": 0.23500000000000001, "BLEURT": -0.689579039812088, "BLEURT_perfect_align": -0.7707246020436287, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.8, "pred": ["she buys 15 servings of ice cream per carton at a cost of $400 per serving", "after 60 days, cynthia will eat 60 servings at a cost of $400 per serving", "after 60 days, cynthia will eat 60 servings at a cost of $400 x 15 = $2800", "therefore, she will spend $2800 - $400 = $1600 on ice cream", "the answer is 16"], "gold": ["each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream", "each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream", "each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream", "each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream", "each container of ice cream has 15 servings and she eats 1 serving a night so after 60 days she will need 60/15 = 4 containers of ice cream"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_28_931b3848f4", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent1 -> int1: He traveled 60-20=30 miles after his first stop.; sent3 & int1 -> int2: He traveled 30-15=25 miles between his first and second stops.; int2 & sent4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent1 -> int1: He traveled 60-20=30 miles after his first stop.; sent3 & int1 -> int2: He traveled 30-15=25 miles between his first and second stops.; int2 & sent4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.3333333333333333, "F1": 0.3333333333333333, "acc": 0, "pred": ["int2 & sent3 -> int2", "int2 & sent4 -> hypothesis", "sent1 & sent2 -> int2"], "gold": ["int1 & sent1 -> int2", "int2 & sent4 -> hypothesis", "sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int2", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent1 & sent2 -> int2", "int2 & sent3 -> int2", "int2 & sent4 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.7666666666666666, "ROUGE_L_F_perfect_align": 0.87, "BLEURT": 0.3484167456626892, "BLEURT_perfect_align": 0.569573175162077, "BLEURT_P": 0.3333333333333333, "BLEURT_R": 0.3333333333333333, "BLEURT_F1": 0.3333333333333333, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.6666666666666666, "pred": ["he traveled 60-20=30 miles after his first stop", "he traveled 30-15=25 miles between his first and second stops", "the answer is 25"], "gold": ["henry traveled 60 miles - 35 miles = 25 miles between his first and second stop", "henry traveled 60 miles - 35 miles = 25 miles between his first and second stop", "the answer is 25"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_29_bea1855c2f", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent5 & sent4 -> int1: The second pair of heels costs $33 x 2 = $135.; sent3 & int1 -> int2: So the boots cost $135 - $5 = $110; int2 & sent6 & sent2 -> int3: Therefore, Gloria has to choose between the boots and the heels, which means she has to spend $110 - $110 = $104.; int3 & sent6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent5 & sent4 -> int1: The second pair of heels costs $33 x 2 = $135.; sent3 & int1 -> int2: So the boots cost $135 - $5 = $110; int2 & sent6 & sent2 -> int3: Therefore, Gloria has to choose between the boots and the heels, which means she has to spend $110 - $110 = $104.; int3 & sent6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4", "sent5", "sent6"], "gold": ["sent2", "sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["hypothesis & sent6 -> hypothesis", "int2 & sent3 -> int3", "int3 & sent2 & sent6 -> hypothesis", "sent4 & sent5 -> int2"], "gold": ["int1 & sent4 & sent5 -> int2", "int2 & sent2 & sent3 -> int3", "int3 & sent6 -> hypothesis", "sent4 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int3", "int3": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent4 & sent5 -> int2", "int2 & sent3 -> int3", "int3 & sent2 & sent6 -> hypothesis", "hypothesis & sent6 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.5575, "ROUGE_L_F_perfect_align": 0.5866666666666667, "BLEURT": 0.013686969876289368, "BLEURT_perfect_align": -0.005258888006210327, "BLEURT_P": 0.5, "BLEURT_R": 0.5, "BLEURT_F1": 0.5, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.75, "pred": ["the second pair of heels costs $33 x 2 = $135", "so the boots cost $135 - $5 = $110", "therefore, gloria has to choose between the boots and the heels, which means she has to spend $110 - $110 = $104", "the answer is 104"], "gold": ["the heels together cost 66 + 33 = $99", "the boots cost $5 more than both pairs of heels together, so the boots cost 99 + 5 = $104", "the answer is 104", "the answer is 104"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_30_d5513cdd8c", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 -> int1: The total ratio of their ages is 7+11 = 27; sent3 & int1 -> int2: In 10 years' time, Allen will be 10*27 = 109 years old.; int2 & sent3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 -> int1: The total ratio of their ages is 7+11 = 27; sent3 & int1 -> int2: In 10 years' time, Allen will be 10*27 = 109 years old.; int2 & sent3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.6666666666666666, "F1": 0.8, "acc": 0, "pred": ["sent1", "sent3"], "gold": ["sent1", "sent2", "sent3"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.25, "F1": 0.28571428571428575, "acc": 0, "pred": ["int1 & sent3 -> int3", "int3 & sent3 -> int3", "sent1 -> int1"], "gold": ["int1 & sent2 -> int2", "int2 & sent3 -> int3", "int3 & sent3 -> hypothesis", "sent1 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int3", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent1 -> int1", "int1 & sent3 -> int3", "int3 & sent3 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.58, "ROUGE_L_F_perfect_align": 0.83, "BLEURT": -0.2590053329865138, "BLEURT_perfect_align": 0.7406150102615356, "BLEURT_P": 0.3333333333333333, "BLEURT_R": 0.25, "BLEURT_F1": 0.28571428571428575, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.3333333333333333, "pred": ["the total ratio of their ages is 7+11 = 27", "in 10 years' time, allen will be 10*27 = 109 years old", "the answer is 109"], "gold": ["the total ratio representing their ages is 7+11= 18", "if allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old", "if allen is currently 99 years old, in 10 years he will be 99+10 = 109 years old"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_31_e8508bec13", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent4 & sent3 -> int1: Half of the first number is 20/2=30 jelly beans.; sent5 & int1 -> int2: The second number is 30+25=40 jelly beans.; int2 & sent3 & sent6 -> int3: The average of their guess is 40+20=80 jelly beans.; int3 & sent3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent4 & sent3 -> int1: Half of the first number is 20/2=30 jelly beans.; sent5 & int1 -> int2: The second number is 30+25=40 jelly beans.; int2 & sent3 & sent6 -> int3: The average of their guess is 40+20=80 jelly beans.; int3 & sent3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent3", "sent4", "sent5", "sent6"], "gold": ["sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.25, "R": 0.2, "F1": 0.22222222222222224, "acc": 0, "pred": ["hypothesis & sent3 -> hypothesis", "int1 & sent5 -> int3", "int3 & sent3 & sent6 -> hypothesis", "sent3 & sent4 -> int1"], "gold": ["int1 & int2 & int3 & sent3 -> int4", "int1 & int2 & sent3 -> int3", "int4 & sent6 -> hypothesis", "sent3 & sent4 -> int1", "sent3 & sent5 -> int2"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int3", "int3": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent3 & sent4 -> int1", "int1 & sent5 -> int3", "int3 & sent3 & sent6 -> hypothesis", "hypothesis & sent3 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.52, "ROUGE_L_F_perfect_align": 0.52, "BLEURT": -0.3253541737794876, "BLEURT_perfect_align": -0.3253541737794876, "BLEURT_P": 0.25, "BLEURT_R": 0.2, "BLEURT_F1": 0.22222222222222224, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["half of the first number is 20/2=30 jelly beans", "the second number is 30+25=40 jelly beans", "the average of their guess is 40+20=80 jelly beans", "the answer is 80"], "gold": ["the second person guessed 60 because 20 + (80/2)= 60", "the total amount guessed is 240 because 80 + 60 + 100 = 240", "the answer is 80", "the answer is 80"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_32_89c164c5ae", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent1 -> int1: He takes care of 10 dogs x.5 hours/dog = 5 dogs per day.; int1 & sent2 -> int2: So he spends 5*.5 = 15 hours per day walking the dogs.; sent4 & int2 -> int3: So he spends 15*7 = 35 hours a week taking care of dogs.; int3 & sent4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent1 -> int1: He takes care of 10 dogs x.5 hours/dog = 5 dogs per day.; int1 & sent2 -> int2: So he spends 5*.5 = 15 hours per day walking the dogs.; sent4 & int2 -> int3: So he spends 15*7 = 35 hours a week taking care of dogs.; int3 & sent4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent4"], "gold": ["sent1", "sent2", "sent4"]}, "proof-steps": {"P": 0.5, "R": 0.6666666666666666, "F1": 0.5714285714285715, "acc": 0, "pred": ["int1 & sent2 -> int1", "int1 & sent4 -> int2", "int2 & sent4 -> int2", "sent1 & sent2 -> int1"], "gold": ["int1 & sent4 -> int2", "int2 & sent4 -> hypothesis", "sent1 & sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int2", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent1 & sent2 -> int1", "int1 & sent2 -> int1", "int1 & sent4 -> int2", "int2 & sent4 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.515, "ROUGE_L_F_perfect_align": 0.515, "BLEURT": -0.5293990448117256, "BLEURT_perfect_align": -0.5293990448117256, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["he takes care of 10 dogs x5 hours/dog = 5 dogs per day", "so he spends 5*5 = 15 hours per day walking the dogs", "so he spends 15*7 = 35 hours a week taking care of dogs", "the answer is 35"], "gold": ["he spends 10*5=5 hours per day", "he spends 10*5=5 hours per day", "that means he spends 5*7=35 hours per week", "that means he spends 5*7=35 hours per week"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_33_563617ecbf", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent1 -> int1: Gretchen has 110 + 30 = 130 silver coins.; int1 & sent1 -> int2: So, Gretchen has 110 + 130 = 70 gold coins.; sent3 & int2 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent1 -> int1: Gretchen has 110 + 30 = 130 silver coins.; int1 & sent1 -> int2: So, Gretchen has 110 + 130 = 70 gold coins.; sent3 & int2 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3"], "gold": ["sent1", "sent2", "sent3"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.14285714285714285, "F1": 0.2, "acc": 0, "pred": ["int1 & sent1 -> int1", "int1 & sent3 -> int6", "sent1 & sent2 -> int1"], "gold": ["int1 & sent2 -> int2", "int2 & sent1 -> int3", "int3 -> int4", "int4 -> int5", "int5 & sent2 & sent3 -> int6", "int6 & sent3 -> hypothesis", "sent1 & sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "hypothesis": "int6"}, "sentences_pred_aligned": ["sent1 & sent2 -> int1", "int1 & sent1 -> int1", "int1 & sent3 -> int6"]}, "proof-intermediates": {"ROUGE_L_F": 0.27666666666666667, "ROUGE_L_F_perfect_align": 0.27666666666666667, "BLEURT": -0.8080008228619894, "BLEURT_perfect_align": -0.8080008228619894, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["gretchen has 110 + 30 = 130 silver coins", "so, gretchen has 110 + 130 = 70 gold coins", "the answer is 70"], "gold": ["let x be the number of silver coins gretchen has", "let x be the number of silver coins gretchen has", "gretchen has 40+30=70 gold coins"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_34_58622fd43b", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent2 -> int1: Raymond has 40/2 = 30 jewels.; int1 & sent2 -> int2: Aaron has 30+5 = 35 jewels.; int2 & sent1 & sent4 -> int3: Siobhan has 35-2 = 23 jewels.; sent4 & int3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent2 -> int1: Raymond has 40/2 = 30 jewels.; int1 & sent2 -> int2: Aaron has 30+5 = 35 jewels.; int2 & sent1 & sent4 -> int3: Siobhan has 35-2 = 23 jewels.; sent4 & int3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.25, "R": 0.25, "F1": 0.25, "acc": 0, "pred": ["hypothesis & sent4 -> hypothesis", "int1 & sent1 & sent4 -> hypothesis", "int1 & sent2 -> int1", "sent2 & sent3 -> int1"], "gold": ["int1 & sent2 -> int2", "int2 & sent1 -> int3", "int3 & sent4 -> hypothesis", "sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 & sent3 -> int1", "int1 & sent2 -> int1", "int1 & sent1 & sent4 -> hypothesis", "hypothesis & sent4 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.48, "ROUGE_L_F_perfect_align": 0.48, "BLEURT": 0.000458582304418087, "BLEURT_perfect_align": 0.000458582304418087, "BLEURT_P": 0.25, "BLEURT_R": 0.25, "BLEURT_F1": 0.25, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["raymond has 40/2 = 30 jewels", "aaron has 30+5 = 35 jewels", "siobhan has 35-2 = 23 jewels", "the answer is 23"], "gold": ["half of raymond's jewels is 40/2 = 20", "half of raymond's jewels is 40/2 = 20", "the answer is 23", "the answer is 23"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_35_9fe2535ed9", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent4 & sent2 -> int1: In the second 20 minutes, Mike scores 25/100 * 4 = 9 points.; int1 & sent5 & sent2 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent4 & sent2 -> int1: In the second 20 minutes, Mike scores 25/100 * 4 = 9 points.; int1 & sent5 & sent2 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.75, "F1": 0.8571428571428571, "acc": 0, "pred": ["sent2", "sent4", "sent5"], "gold": ["sent2", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int1 & sent2 & sent5 -> int3", "sent2 & sent4 -> int1"], "gold": ["int1 & sent3 & sent4 -> int2", "int2 & sent2 & sent5 -> int3", "int3 & sent5 -> hypothesis", "sent2 & sent3 & sent4 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent2 & sent4 -> int1", "int1 & sent2 & sent5 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.325, "ROUGE_L_F_perfect_align": 0.0, "BLEURT": -0.734170988202095, "BLEURT_perfect_align": 0.0, "BLEURT_P": 0.5, "BLEURT_R": 0.25, "BLEURT_F1": 0.3333333333333333, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.0, "pred": ["in the second 20 minutes, mike scores 25/100 * 4 = 9 points", "the answer is 9"], "gold": ["he scored 4*25=1 point more in the second 20 minutes", "so in total, he scored 4+5=9 points in the 40 minutes"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_36_c91a135eb6", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 -> int1: He buys 4 yogurts at $5.00 each so 4*5 = $12.00; sent1 & int1 -> int2: He eats 2 yogurts a day so he eats 2*12 = 24 yogurts a day; sent3 & int2 -> int3: He eats 24 yogurts in 30 days so he eats 24*30 = 62 yogurts in 30 days; int3 & sent3 -> int4: Terry spends $75.00 on yogurt over 30 days so 62*30 = $75.00; sent3 & int4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 -> int1: He buys 4 yogurts at $5.00 each so 4*5 = $12.00; sent1 & int1 -> int2: He eats 2 yogurts a day so he eats 2*12 = 24 yogurts a day; sent3 & int2 -> int3: He eats 24 yogurts in 30 days so he eats 24*30 = 62 yogurts in 30 days; int3 & sent3 -> int4: Terry spends $75.00 on yogurt over 30 days so 62*30 = $75.00; sent3 & int4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3"], "gold": ["sent1", "sent2", "sent3"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int2 & sent1 -> int2", "int2 & sent3 -> int2", "int2 & sent3 -> int2", "int2 & sent3 -> int2", "sent2 -> int2"], "gold": ["int1 & sent2 -> int2", "int2 & sent3 -> int3", "int3 & sent3 -> hypothesis", "sent1 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int2", "int3": "int2", "int4": "int2", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent2 -> int2", "int2 & sent1 -> int2", "int2 & sent3 -> int2", "int2 & sent3 -> int2", "int2 & sent3 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.22600000000000003, "ROUGE_L_F_perfect_align": 0.19999999999999998, "BLEURT": -0.6191754527390003, "BLEURT_perfect_align": -0.8880217572053274, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.6, "pred": ["he buys 4 yogurts at $500 each so 4*5 = $1200", "he eats 2 yogurts a day so he eats 2*12 = 24 yogurts a day", "he eats 24 yogurts in 30 days so he eats 24*30 = 62 yogurts in 30 days", "terry spends $7500 on yogurt over 30 days so 62*30 = $7500", "the answer is 75"], "gold": ["the yogurt is sold as 4 units for $500 and he needs 60 yogurts so that\u2019s 60/4 = 15 4-packs", "the yogurt is sold as 4 units for $500 and he needs 60 yogurts so that\u2019s 60/4 = 15 4-packs", "the yogurt is sold as 4 units for $500 and he needs 60 yogurts so that\u2019s 60/4 = 15 4-packs", "the yogurt is sold as 4 units for $500 and he needs 60 yogurts so that\u2019s 60/4 = 15 4-packs", "the yogurt is sold as 4 units for $500 and he needs 60 yogurts so that\u2019s 60/4 = 15 4-packs"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_37_3afae2bcd4", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent5 -> int1: He spends 8*20=$40 on video games.; int1 & sent5 -> int2: He has 40-5=$25 left.; int2 & sent4 & sent3 -> int3: He still has 25-13=2 lego sets; int3 & sent6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent5 -> int1: He spends 8*20=$40 on video games.; int1 & sent5 -> int2: He has 40-5=$25 left.; int2 & sent4 & sent3 -> int3: He still has 25-13=2 lego sets; int3 & sent6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent3", "sent4", "sent5", "sent6"], "gold": ["sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.25, "R": 0.2, "F1": 0.22222222222222224, "acc": 0, "pred": ["int1 & sent3 & sent4 -> int3", "int1 & sent5 -> int1", "int3 & sent6 -> int4", "sent5 -> int1"], "gold": ["int1 & sent5 -> int2", "int2 & sent3 & sent4 -> int3", "int3 & sent3 & sent6 -> int4", "int4 & sent6 -> hypothesis", "sent5 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int3", "hypothesis": "int4"}, "sentences_pred_aligned": ["sent5 -> int1", "int1 & sent5 -> int1", "int1 & sent3 & sent4 -> int3", "int3 & sent6 -> int4"]}, "proof-intermediates": {"ROUGE_L_F": 0.3425, "ROUGE_L_F_perfect_align": 0.3425, "BLEURT": -0.7147150561213493, "BLEURT_perfect_align": -0.7147150561213493, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["he spends 8*20=$40 on video games", "he has 40-5=$25 left", "he still has 25-13=2 lego sets", "the answer is 2"], "gold": ["he spent $160 on video games because 8 x 20 = 160", "he spent $160 on video games because 8 x 20 = 160", "he sold 11 lego sets because 11 x 15 = 165", "he has 2 sets left because 13 - 11 = 2"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_39_99b35180d8", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent2 -> int1: Half of the time she spends walking is 2/3*3 = 1 hour.; sent5 & sent1 & sent4 -> int2: Dana spends 6 / 4 = 2 hours walking.; sent5 & sent1 & sent4 -> int3: Dana spends 6 / 4 = 1 hour walking.; int1 & int3 -> int4: So she can travel a total of 1+2 = 6 hours.; int1 & int3 -> int5: So she can travel a total of 1+2 = 6 miles in an hour.; int5 & int4 & int2 & sent4 -> int6: Therefore, she can travel a total of 6+2 = 18 miles in 6 hours.; int6 & sent4 & sent3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent2 -> int1: Half of the time she spends walking is 2/3*3 = 1 hour.; sent5 & sent1 & sent4 -> int2: Dana spends 6 / 4 = 2 hours walking.; sent5 & sent1 & sent4 -> int3: Dana spends 6 / 4 = 1 hour walking.; int1 & int3 -> int4: So she can travel a total of 1+2 = 6 hours.; int1 & int3 -> int5: So she can travel a total of 1+2 = 6 miles in an hour.; int5 & int4 & int2 & sent4 -> int6: Therefore, she can travel a total of 6+2 = 18 miles in 6 hours.; int6 & sent4 & sent3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4", "sent5"], "gold": ["sent1", "sent2", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.14285714285714285, "R": 0.125, "F1": 0.13333333333333333, "acc": 0, "pred": ["int1 & int4 -> int5", "int1 & int4 -> int5", "int4 & int5 & int5 & sent4 -> int5", "int5 & sent3 & sent4 -> int5", "sent1 & sent4 & sent5 -> int4", "sent1 & sent4 & sent5 -> int4", "sent2 & sent3 -> int1"], "gold": ["int1 & int4 & sent4 -> int5", "int2 & int3 -> int6", "int2 & sent5 -> int3", "int3 & sent4 -> int4", "int5 & int6 -> int7", "int7 & sent3 & sent4 -> hypothesis", "sent1 & sent5 -> int2", "sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int4", "int3": "int4", "int4": "int5", "int5": "int5", "int6": "int5", "hypothesis": "int5"}, "sentences_pred_aligned": ["sent2 & sent3 -> int1", "sent1 & sent4 & sent5 -> int4", "sent1 & sent4 & sent5 -> int4", "int1 & int4 -> int5", "int1 & int4 -> int5", "int4 & int5 & int5 & sent4 -> int5", "int5 & sent3 & sent4 -> int5"]}, "proof-intermediates": {"ROUGE_L_F": 0.33428571428571424, "ROUGE_L_F_perfect_align": 0.33428571428571424, "BLEURT": -0.2704183054821832, "BLEURT_perfect_align": -0.2704183054821832, "BLEURT_P": 0.2857142857142857, "BLEURT_R": 0.125, "BLEURT_F1": 0.17391304347826086, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["half of the time she spends walking is 2/3*3 = 1 hour", "dana spends 6 / 4 = 2 hours walking", "dana spends 6 / 4 = 1 hour walking", "so she can travel a total of 1+2 = 6 hours", "so she can travel a total of 1+2 = 6 miles in an hour", "therefore, she can travel a total of 6+2 = 18 miles in 6 hours", "the answer is 18"], "gold": ["if dana can skip at half the speed she can run, then she can run at 3*2=6 miles per hour", "if one-third of the time is spent running, then she runs for 6-4=2 hours", "if one-third of the time is spent running, then she runs for 6-4=2 hours", "thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles", "thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles", "thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles", "thus, she runs for 2 hours at 6 miles per hour, or 2*6=12 miles"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_40_4dfa312de8", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent2 -> int1: Ben's iphone is 1 year old, so it's 2*1 = 2 years old; sent2 & sent3 -> int2: Ben's iphone is 2*1=2 years old.; sent1 & sent4 & int1 -> int3: Brandon's iphone is 4 times as old as Ben's iphone, so it's 2*4 = 8 years old; sent1 & int2 & sent4 -> int4: Brandon's iphone is 4*2=8 years old.; int4 & sent4 & int3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent2 -> int1: Ben's iphone is 1 year old, so it's 2*1 = 2 years old; sent2 & sent3 -> int2: Ben's iphone is 2*1=2 years old.; sent1 & sent4 & int1 -> int3: Brandon's iphone is 4 times as old as Ben's iphone, so it's 2*4 = 8 years old; sent1 & int2 & sent4 -> int4: Brandon's iphone is 4*2=8 years old.; int4 & sent4 & int3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.2, "R": 0.3333333333333333, "F1": 0.25, "acc": 0, "pred": ["hypothesis & hypothesis & sent4 -> hypothesis", "int1 & sent1 & sent4 -> hypothesis", "int1 & sent1 & sent4 -> hypothesis", "sent2 & sent3 -> int1", "sent2 & sent3 -> int1"], "gold": ["int1 & sent1 -> int2", "int2 & sent4 -> hypothesis", "sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "hypothesis", "int4": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 & sent3 -> int1", "sent2 & sent3 -> int1", "int1 & sent1 & sent4 -> hypothesis", "int1 & sent1 & sent4 -> hypothesis", "hypothesis & hypothesis & sent4 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.662, "ROUGE_L_F_perfect_align": 0.662, "BLEURT": 0.05117998123168945, "BLEURT_perfect_align": 0.05117998123168945, "BLEURT_P": 0.6, "BLEURT_R": 0.6666666666666666, "BLEURT_F1": 0.631578947368421, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["ben's iphone is 1 year old, so it's 2*1 = 2 years old", "ben's iphone is 2*1=2 years old", "brandon's iphone is 4 times as old as ben's iphone, so it's 2*4 = 8 years old", "brandon's iphone is 4*2=8 years old", "the answer is 8"], "gold": ["ben\u2019s iphone is 1*2 = 2 years old", "ben\u2019s iphone is 1*2 = 2 years old", "the answer is 8", "the answer is 8", "the answer is 8"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_41_e85a06590c", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent5 & sent2 -> int1: The distance the dragon could be sleighed is 1000 feet / 400 feet = 200 feet.; sent8 & sent9 & sent10 & int1 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent5 & sent2 -> int1: The distance the dragon could be sleighed is 1000 feet / 400 feet = 200 feet.; sent8 & sent9 & sent10 & int1 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent10", "sent2", "sent5", "sent8", "sent9"], "gold": ["sent10", "sent2", "sent5", "sent8", "sent9"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int2 & sent10 & sent8 & sent9 -> hypothesis", "sent2 & sent5 -> int2"], "gold": ["int1 & sent2 -> int2", "int2 & sent10 & sent9 -> hypothesis", "sent5 & sent8 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 & sent5 -> int2", "int2 & sent10 & sent8 & sent9 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.705, "ROUGE_L_F_perfect_align": 1.0, "BLEURT": 0.21991747617721558, "BLEURT_perfect_align": 1.0543467998504639, "BLEURT_P": 0.5, "BLEURT_R": 0.3333333333333333, "BLEURT_F1": 0.4, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.5, "pred": ["the distance the dragon could be sleighed is 1000 feet / 400 feet = 200 feet", "the answer is 200"], "gold": ["1200 feet is beyond the 1000-foot reach of the dragon's flames by a distance of 1200-1000=200 feet", "the answer is 200"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_42_0e55dd01d6", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 & sent2 -> int1: Grandma Jones made 5 pies * 8 pieces/pie = 20 pieces of pie.; sent7 & sent8 & int1 -> int2: After the guests had eaten, there were 20 pieces - 14 pieces = 26 pieces of pie left.; int2 & sent8 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 & sent2 -> int1: Grandma Jones made 5 pies * 8 pieces/pie = 20 pieces of pie.; sent7 & sent8 & int1 -> int2: After the guests had eaten, there were 20 pieces - 14 pieces = 26 pieces of pie left.; int2 & sent8 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent7", "sent8"], "gold": ["sent1", "sent2", "sent7", "sent8"]}, "proof-steps": {"P": 0.6666666666666666, "R": 0.6666666666666666, "F1": 0.6666666666666666, "acc": 0, "pred": ["int1 & sent7 & sent8 -> int2", "int2 & sent8 -> int2", "sent1 & sent2 -> int1"], "gold": ["int1 & sent7 & sent8 -> int2", "int2 & sent8 -> hypothesis", "sent1 & sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int2", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent1 & sent2 -> int1", "int1 & sent7 & sent8 -> int2", "int2 & sent8 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.3433333333333333, "ROUGE_L_F_perfect_align": 0.3433333333333333, "BLEURT": -0.6616305311520895, "BLEURT_perfect_align": -0.6616305311520895, "BLEURT_P": 0.3333333333333333, "BLEURT_R": 0.3333333333333333, "BLEURT_F1": 0.3333333333333333, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["grandma jones made 5 pies * 8 pieces/pie = 20 pieces of pie", "after the guests had eaten, there were 20 pieces - 14 pieces = 26 pieces of pie left", "the answer is 26"], "gold": ["to start the evening, there were 5 pies, each with 8 pieces, which is 5*8=40 pieces of pie", "if only 14 remained, then 40-14=26 pieces of pie had been taken by guests", "if only 14 remained, then 40-14=26 pieces of pie had been taken by guests"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_43_0d9cbd33eb", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent2 -> int1: A 300g bag of chips has 250 calories per serving so it has 250/5 = 120 calories per serving; int1 & sent5 & sent4 -> int2: You have already consumed 1800 calories so you can eat 1800-120 = 48 grams; int2 & sent4 & sent5 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent2 -> int1: A 300g bag of chips has 250 calories per serving so it has 250/5 = 120 calories per serving; int1 & sent5 & sent4 -> int2: You have already consumed 1800 calories so you can eat 1800-120 = 48 grams; int2 & sent4 & sent5 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4", "sent5"], "gold": ["sent2", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int3 & sent4 & sent5 -> int4", "int4 & sent4 & sent5 -> int4", "sent2 & sent3 -> int3"], "gold": ["int1 & sent2 & sent4 -> int2", "int2 & int3 -> int4", "int4 & sent4 & sent5 -> hypothesis", "sent3 -> int3", "sent4 & sent5 -> int1"], "pred_to_gold_mapping": {"int1": "int3", "int2": "int4", "hypothesis": "int4"}, "sentences_pred_aligned": ["sent2 & sent3 -> int3", "int3 & sent4 & sent5 -> int4", "int4 & sent4 & sent5 -> int4"]}, "proof-intermediates": {"ROUGE_L_F": 0.31333333333333335, "ROUGE_L_F_perfect_align": 0.205, "BLEURT": -0.6122822364171346, "BLEURT_perfect_align": -1.125431478023529, "BLEURT_P": 0.3333333333333333, "BLEURT_R": 0.2, "BLEURT_F1": 0.25, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.6666666666666666, "pred": ["a 300g bag of chips has 250 calories per serving so it has 250/5 = 120 calories per serving", "you have already consumed 1800 calories so you can eat 1800-120 = 48 grams", "the answer is 48"], "gold": ["we also know that a 300g bag of chips has 5 servings, hence each serving has 300g/5 = 60 grams", "if i can only eat 4/5 of a serving, then i can eat only 60g * 4/5 = 240g/5 = 48 grams", "if i can only eat 4/5 of a serving, then i can eat only 60g * 4/5 = 240g/5 = 48 grams"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_44_40def09442", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent6 -> int1: He makes 10 candles and each candle costs $2.00 so he makes 10*2 = $20.00; int1 & sent7 & sent5 -> int2: His profit is $20.00 because 20 - 10 = 20; int2 & sent7 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent6 -> int1: He makes 10 candles and each candle costs $2.00 so he makes 10*2 = $20.00; int1 & sent7 & sent5 -> int2: His profit is $20.00 because 20 - 10 = 20; int2 & sent7 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.6666666666666666, "F1": 0.8, "acc": 0, "pred": ["sent3", "sent5", "sent6", "sent7"], "gold": ["sent2", "sent3", "sent4", "sent5", "sent6", "sent7"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int3 & sent5 & sent7 -> int4", "int4 & sent7 -> int4", "sent3 & sent6 -> int3"], "gold": ["int1 & sent4 & sent5 -> int2", "int2 & int3 & sent7 -> int4", "int4 & sent7 -> hypothesis", "sent2 & sent3 & sent7 -> int1", "sent6 & sent7 -> int3"], "pred_to_gold_mapping": {"int1": "int3", "int2": "int4", "hypothesis": "int4"}, "sentences_pred_aligned": ["sent3 & sent6 -> int3", "int3 & sent5 & sent7 -> int4", "int4 & sent7 -> int4"]}, "proof-intermediates": {"ROUGE_L_F": 0.33666666666666667, "ROUGE_L_F_perfect_align": 0.0, "BLEURT": -1.0144381175438564, "BLEURT_perfect_align": 0.0, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.0, "pred": ["he makes 10 candles and each candle costs $200 so he makes 10*2 = $2000", "his profit is $2000 because 20 - 10 = 20", "the answer is 20"], "gold": ["he wants to sell each candle for $200 each and he's selling 20 candles so that's 2*20 = $4000", "if he makes $4000 selling candles and his supplies cost $2000 then his net profit is 40-20 = $2000", "if he makes $4000 selling candles and his supplies cost $2000 then his net profit is 40-20 = $2000"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_45_b52a924542", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent4 & sent5 -> int1: On Tuesday, Meredith wrote 2/5 * 5 = 7 articles.; sent4 & int1 -> int2: On Monday, she wrote 5 * 7 = 20 articles.; sent4 & int1 -> int3: On Monday, Meredith wrote 5 * 7 = 20 articles.; int2 & sent6 -> int4: On Wednesday, she wrote 20 * 2 = 31 articles.; int3 & int4 & sent3 -> int5: In total, she wrote 20 + 31 + 4 = 104 articles.; sent7 & int5 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent4 & sent5 -> int1: On Tuesday, Meredith wrote 2/5 * 5 = 7 articles.; sent4 & int1 -> int2: On Monday, she wrote 5 * 7 = 20 articles.; sent4 & int1 -> int3: On Monday, Meredith wrote 5 * 7 = 20 articles.; int2 & sent6 -> int4: On Wednesday, she wrote 20 * 2 = 31 articles.; int3 & int4 & sent3 -> int5: In total, she wrote 20 + 31 + 4 = 104 articles.; sent7 & int5 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent3", "sent4", "sent5", "sent6", "sent7"], "gold": ["sent3", "sent4", "sent5", "sent6", "sent7"]}, "proof-steps": {"P": 0.16666666666666666, "R": 0.16666666666666666, "F1": 0.16666666666666666, "acc": 0, "pred": ["int1 & int3 & sent3 -> int5", "int1 & sent4 -> int1", "int1 & sent4 -> int1", "int1 & sent6 -> int3", "int5 & sent7 -> int5", "sent4 & sent5 -> int1"], "gold": ["int1 -> int2", "int2 & int3 & sent4 -> int4", "int2 & sent6 -> int3", "int4 & sent3 & sent7 -> int5", "int5 & sent7 -> hypothesis", "sent4 & sent5 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int1", "int4": "int3", "int5": "int5", "hypothesis": "int5"}, "sentences_pred_aligned": ["sent4 & sent5 -> int1", "int1 & sent4 -> int1", "int1 & sent4 -> int1", "int1 & sent6 -> int3", "int1 & int3 & sent3 -> int5", "int5 & sent7 -> int5"]}, "proof-intermediates": {"ROUGE_L_F": 0.4183333333333333, "ROUGE_L_F_perfect_align": 0.43599999999999994, "BLEURT": -0.42573823407292366, "BLEURT_perfect_align": -0.43459587544202805, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.8333333333333334, "pred": ["on tuesday, meredith wrote 2/5 * 5 = 7 articles", "on monday, she wrote 5 * 7 = 20 articles", "on monday, meredith wrote 5 * 7 = 20 articles", "on wednesday, she wrote 20 * 2 = 31 articles", "in total, she wrote 20 + 31 + 4 = 104 articles", "the answer is 104"], "gold": ["if she wrote five articles on monday, then on tuesday she wrote 2/5* 5 = 2 more articles", "if she wrote five articles on monday, then on tuesday she wrote 2/5* 5 = 2 more articles", "if she wrote five articles on monday, then on tuesday she wrote 2/5* 5 = 2 more articles", "on wednesday, the number of articles was twice the number she wrote on tuesday, so it was 2*7 = 14 articles", "if each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles", "if each article takes her 4 hours to research and write about, she spent 4*26 = 104 hours on all the articles"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_46_c1d08edad8", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 & sent4 -> int1: Candice put 80 x 220 = 420 post-it notes in her purse.; int1 & sent6 & sent5 -> int2: She had 420 - 23 = 163 post-it notes remaining.; int2 & sent6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 & sent4 -> int1: Candice put 80 x 220 = 420 post-it notes in her purse.; int1 & sent6 & sent5 -> int2: She had 420 - 23 = 163 post-it notes remaining.; int2 & sent6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent4", "sent5", "sent6"], "gold": ["sent1", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int3 & sent5 & sent6 -> int3", "int3 & sent6 -> int3", "sent1 & sent4 -> int3"], "gold": ["int1 & sent1 -> int2", "int2 & sent4 & sent5 -> int3", "int3 -> int4", "int4 & sent6 -> hypothesis", "sent6 -> int1"], "pred_to_gold_mapping": {"int1": "int3", "int2": "int3", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent1 & sent4 -> int3", "int3 & sent5 & sent6 -> int3", "int3 & sent6 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.22666666666666666, "ROUGE_L_F_perfect_align": 0.18, "BLEURT": -1.0652424295743306, "BLEURT_perfect_align": -1.2966598272323608, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.6666666666666666, "pred": ["candice put 80 x 220 = 420 post-it notes in her purse", "she had 420 - 23 = 163 post-it notes remaining", "the answer is 163"], "gold": ["and if she used 220 post-it notes at work and had 23 left, then 80+x=220+23", "and if she used 220 post-it notes at work and had 23 left, then 80+x=220+23", "and if she used 220 post-it notes at work and had 23 left, then 80+x=220+23"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_47_6e4d497caa", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent2 -> int1: Blue ties cost 40*.5=$50; sent1 & int1 -> int2: He bought 2*50=60 red ties.; sent1 & int1 -> int3: He bought 2*50=60 red ties; int1 & sent3 -> int4: So he spent 200-50=$100 on ties.; int1 & sent3 -> int5: So he spent 200-50=$75 on ties.; int3 & int2 & int4 -> int6: Therefore, he spent a total of 100+60+75=$800.; int5 & sent4 & int6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent2 -> int1: Blue ties cost 40*.5=$50; sent1 & int1 -> int2: He bought 2*50=60 red ties.; sent1 & int1 -> int3: He bought 2*50=60 red ties; int1 & sent3 -> int4: So he spent 200-50=$100 on ties.; int1 & sent3 -> int5: So he spent 200-50=$75 on ties.; int3 & int2 & int4 -> int6: Therefore, he spent a total of 100+60+75=$800.; int5 & sent4 & int6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.14285714285714285, "R": 0.14285714285714285, "F1": 0.14285714285714285, "acc": 0, "pred": ["int3 & int5 & int5 -> int5", "int3 & int5 & sent4 -> int6", "int3 & sent1 -> int5", "int3 & sent1 -> int5", "int3 & sent3 -> int3", "int3 & sent3 -> int3", "sent2 & sent3 -> int3"], "gold": ["int1 & sent1 -> int2", "int2 & int4 -> int5", "int3 & sent3 -> int4", "int5 & sent3 & sent4 -> int6", "int6 & sent4 -> hypothesis", "sent2 & sent3 -> int3", "sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int3", "int2": "int5", "int3": "int5", "int4": "int3", "int5": "int3", "int6": "int5", "hypothesis": "int6"}, "sentences_pred_aligned": ["sent2 & sent3 -> int3", "int3 & sent1 -> int5", "int3 & sent1 -> int5", "int3 & sent3 -> int3", "int3 & sent3 -> int3", "int3 & int5 & int5 -> int5", "int3 & int5 & sent4 -> int6"]}, "proof-intermediates": {"ROUGE_L_F": 0.31499999999999995, "ROUGE_L_F_perfect_align": 0.31499999999999995, "BLEURT": -0.703418138747414, "BLEURT_perfect_align": -0.703418138747414, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["blue ties cost 40*5=$50", "he bought 2*50=60 red ties", "so he spent 200-50=$100 on ties", "so he spent 200-50=$75 on ties", "therefore, he spent a total of 100+60+75=$800", "the answer is 800"], "gold": ["each red tie cost $40 * 5 = $20 more than blue ties", "so he spent $60 * 10 = $600 on red ties", "each red tie cost $40 * 5 = $20 more than blue ties", "each red tie cost $40 * 5 = $20 more than blue ties", "so he spent $60 * 10 = $600 on red ties", "so he spent $200 + $600 = $800 on ties"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_48_fb3fb38853", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 -> int1: Tracey used 4 ft. of wire to support tomato plants.; sent1 -> int2: Tracy used 4 ft. of wire to support tomato plants.; int1 & int2 & sent2 -> int3: She cut the wire into pieces 4 ft. x 6 inches = 18 inches long.; sent3 & int3 -> int4: Thus, she obtained 18 inches / 18 inches = 8 pieces.; sent3 & int4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 -> int1: Tracey used 4 ft. of wire to support tomato plants.; sent1 -> int2: Tracy used 4 ft. of wire to support tomato plants.; int1 & int2 & sent2 -> int3: She cut the wire into pieces 4 ft. x 6 inches = 18 inches long.; sent3 & int3 -> int4: Thus, she obtained 18 inches / 18 inches = 8 pieces.; sent3 & int4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3"], "gold": ["sent1", "sent2", "sent3"]}, "proof-steps": {"P": 0.2, "R": 0.3333333333333333, "F1": 0.25, "acc": 0, "pred": ["int1 & int1 & sent2 -> int2", "int2 & sent3 -> int2", "int2 & sent3 -> int2", "sent1 -> int1", "sent1 -> int1"], "gold": ["int1 & sent2 & sent3 -> int2", "int2 & sent3 -> hypothesis", "sent1 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int2", "int4": "int2", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent1 -> int1", "sent1 -> int1", "int1 & int1 & sent2 -> int2", "int2 & sent3 -> int2", "int2 & sent3 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.336, "ROUGE_L_F_perfect_align": 0.28750000000000003, "BLEURT": -0.8054721802473068, "BLEURT_perfect_align": -1.037647619843483, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.8, "pred": ["tracey used 4 ft of wire to support tomato plants", "tracy used 4 ft of wire to support tomato plants", "she cut the wire into pieces 4 ft x 6 inches = 18 inches long", "thus, she obtained 18 inches / 18 inches = 8 pieces", "the answer is 8"], "gold": ["if tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches", "if tracy used a piece of wire 4 feet long, since 1 foot is equal to 12 inches, the total length of the wire in inches was 12*4=48 inches", "since the wire was cut into pieces 6 inches long, tracy obtained 48/6=8 pieces", "since the wire was cut into pieces 6 inches long, tracy obtained 48/6=8 pieces", "since the wire was cut into pieces 6 inches long, tracy obtained 48/6=8 pieces"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_49_856ec86627", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent1 -> int1: There are 15 floors * 8 units/floor = 150 units.; sent3 & sent4 & int1 -> int2: 3/4 of the building is occupied, so there are 150 units - 3/4 = 30 unoccupied units.; int2 & sent4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent1 -> int1: There are 15 floors * 8 units/floor = 150 units.; sent3 & sent4 & int1 -> int2: 3/4 of the building is occupied, so there are 150 units - 3/4 = 30 unoccupied units.; int2 & sent4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.25, "F1": 0.28571428571428575, "acc": 0, "pred": ["int1 & sent3 & sent4 -> int3", "int3 & sent4 -> int3", "sent1 & sent2 -> int1"], "gold": ["int1 & int2 & sent4 -> int3", "int1 & sent3 -> int2", "int3 & sent4 -> hypothesis", "sent1 & sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int3", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent1 & sent2 -> int1", "int1 & sent3 & sent4 -> int3", "int3 & sent4 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.4033333333333333, "ROUGE_L_F_perfect_align": 0.4033333333333333, "BLEURT": -0.35002516210079193, "BLEURT_perfect_align": -0.35002516210079193, "BLEURT_P": 0.3333333333333333, "BLEURT_R": 0.25, "BLEURT_F1": 0.28571428571428575, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["there are 15 floors * 8 units/floor = 150 units", "3/4 of the building is occupied, so there are 150 units - 3/4 = 30 unoccupied units", "the answer is 30"], "gold": ["the total number of units in the building will be 8 units/floor * 15 floors = 120 units", "the total number of unoccupied units is 120 units - 90 units = 30 units", "the total number of unoccupied units is 120 units - 90 units = 30 units"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_50_be1b78e251", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 -> int1: Lloyd's chickens produce 252 x 2 = 76 eggs per day.; int1 & sent3 -> int2: So he makes 76 x 2 = $268 on eggs per week.; int1 & sent3 -> int3: So he makes 76 x 2 = $268 on eggs per day.; int1 & sent3 -> int4: So he makes 76 x 2 = $272 on eggs per day.; sent4 & int3 -> int5: In a week, Lloyd makes 268 x 7 = $294.; int2 & int4 & int5 & sent4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 -> int1: Lloyd's chickens produce 252 x 2 = 76 eggs per day.; int1 & sent3 -> int2: So he makes 76 x 2 = $268 on eggs per week.; int1 & sent3 -> int3: So he makes 76 x 2 = $268 on eggs per day.; int1 & sent3 -> int4: So he makes 76 x 2 = $272 on eggs per day.; sent4 & int3 -> int5: In a week, Lloyd makes 268 x 7 = $294.; int2 & int4 & int5 & sent4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4"], "gold": ["sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.16666666666666666, "R": 0.25, "F1": 0.2, "acc": 0, "pred": ["int1 & sent3 -> int2", "int1 & sent3 -> int2", "int1 & sent3 -> int2", "int2 & int2 & int2 & sent4 -> int2", "int2 & sent4 -> int2", "sent2 -> int1"], "gold": ["int1 & sent3 -> int2", "int2 & sent3 & sent4 -> int3", "int3 & sent4 -> hypothesis", "sent2 & sent4 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int2", "int3": "int2", "int4": "int2", "int5": "int2", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent2 -> int1", "int1 & sent3 -> int2", "int1 & sent3 -> int2", "int1 & sent3 -> int2", "int2 & sent4 -> int2", "int2 & int2 & int2 & sent4 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.2333333333333333, "ROUGE_L_F_perfect_align": 0.175, "BLEURT": -0.587767094373703, "BLEURT_perfect_align": -1.2535907328128815, "BLEURT_P": 0.16666666666666666, "BLEURT_R": 0.25, "BLEURT_F1": 0.2, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.3333333333333333, "pred": ["lloyd's chickens produce 252 x 2 = 76 eggs per day", "so he makes 76 x 2 = $268 on eggs per week", "so he makes 76 x 2 = $268 on eggs per day", "so he makes 76 x 2 = $272 on eggs per day", "in a week, lloyd makes 268 x 7 = $294", "the answer is 294"], "gold": ["in a week, lloyd's egg farm produces 252 x 7 = 1764 eggs", "there are 1764/12 = 147 dozens of eggs produced in a week", "there are 1764/12 = 147 dozens of eggs produced in a week", "there are 1764/12 = 147 dozens of eggs produced in a week", "there are 1764/12 = 147 dozens of eggs produced in a week", "there are 1764/12 = 147 dozens of eggs produced in a week"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_51_e4757b3475", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 & sent2 -> int1: He is traveling at 10 mph because 1 - 4 = 10; int1 & sent3 -> int2: He is traveling at 6 mph because 10 / 6 = 6; sent4 & int2 & sent3 -> int3: It takes him 5 hours to get back because 6 + 5 = 5; int3 & sent4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 & sent2 -> int1: He is traveling at 10 mph because 1 - 4 = 10; int1 & sent3 -> int2: He is traveling at 6 mph because 10 / 6 = 6; sent4 & int2 & sent3 -> int3: It takes him 5 hours to get back because 6 + 5 = 5; int3 & sent4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int2 & sent3 -> int3", "int3 & sent3 & sent4 -> int3", "int3 & sent4 -> int3", "sent1 & sent2 -> int2"], "gold": ["int1 & sent1 -> int2", "int2 & sent3 & sent4 -> int3", "int3 & sent4 -> hypothesis", "sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int3", "int3": "int3", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent1 & sent2 -> int2", "int2 & sent3 -> int3", "int3 & sent3 & sent4 -> int3", "int3 & sent4 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.3225, "ROUGE_L_F_perfect_align": 0.3833333333333333, "BLEURT": -0.6453301403671503, "BLEURT_perfect_align": -0.5245894317825636, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.75, "pred": ["he is traveling at 10 mph because 1 - 4 = 10", "he is traveling at 6 mph because 10 / 6 = 6", "it takes him 5 hours to get back because 6 + 5 = 5", "the answer is 5"], "gold": ["so he went 3*10=30 miles", "that means it takes 30/6=5 hours to get back", "that means it takes 30/6=5 hours to get back", "that means it takes 30/6=5 hours to get back"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_52_51cab0f5b8", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent5 & sent3 -> int1: Uriiah's book bag weighs 30 x 1/4 = 5 pounds.; sent2 & int1 -> int2: Thus, he needs to remove 5 - 15 = 15 pounds.; int2 & sent6 & sent4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent5 & sent3 -> int1: Uriiah's book bag weighs 30 x 1/4 = 5 pounds.; sent2 & int1 -> int2: Thus, he needs to remove 5 - 15 = 15 pounds.; int2 & sent6 & sent4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4", "sent5", "sent6"], "gold": ["sent2", "sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 1.0, "R": 0.75, "F1": 0.8571428571428571, "acc": 0, "pred": ["int1 & sent2 -> int2", "int2 & sent4 & sent6 -> int3", "sent3 & sent5 -> int1"], "gold": ["int1 & sent2 -> int2", "int2 & sent4 & sent6 -> int3", "int3 & sent6 -> hypothesis", "sent3 & sent5 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int2", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent3 & sent5 -> int1", "int1 & sent2 -> int2", "int2 & sent4 & sent6 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.39666666666666667, "ROUGE_L_F_perfect_align": 0.39666666666666667, "BLEURT": -0.7691005220015844, "BLEURT_perfect_align": -0.7691005220015844, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["uriiah's book bag weighs 30 x 1/4 = 5 pounds", "thus, he needs to remove 5 - 15 = 15 pounds", "the answer is 15"], "gold": ["30 comic books weigh 75 pounds because 30 x 25 = 75", "he needs to remove 75 more pounds because 15 - 75 = 75", "he needs to remove 15 toys because 75 / 5 = 15"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_53_b9e40ecd00", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent6 & sent8 -> int1: The mechanic repaired 12 - 6 = 4 truck tires.; sent5 & sent3 -> int2: The mechanic will charge $60 / 4 = $120 for the truck tires.; int2 & int1 -> int3: The total revenue for the truck tires is $120 + $4 = $240.; int2 & int1 -> int4: The total revenue for the truck tires is $120 + $4 = $220.; int2 & int1 -> int5: The total revenue for the truck tires is $120 + $4 = $260.; int3 & sent5 & int4 -> int6: The higher the revenue, the mechanic earned $240 - $40 = $40 more.; int5 & sent9 & int6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent6 & sent8 -> int1: The mechanic repaired 12 - 6 = 4 truck tires.; sent5 & sent3 -> int2: The mechanic will charge $60 / 4 = $120 for the truck tires.; int2 & int1 -> int3: The total revenue for the truck tires is $120 + $4 = $240.; int2 & int1 -> int4: The total revenue for the truck tires is $120 + $4 = $220.; int2 & int1 -> int5: The total revenue for the truck tires is $120 + $4 = $260.; int3 & sent5 & int4 -> int6: The higher the revenue, the mechanic earned $240 - $40 = $40 more.; int5 & sent9 & int6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 0.8, "R": 0.8, "F1": 0.8000000000000002, "acc": 0, "pred": ["sent3", "sent5", "sent6", "sent8", "sent9"], "gold": ["sent3", "sent5", "sent6", "sent7", "sent9"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int1 & int1 & sent5 -> int1", "int1 & int1 & sent9 -> int3", "int1 & int1 -> int1", "int1 & int1 -> int1", "int1 & int1 -> int1", "sent3 & sent5 -> int1", "sent6 & sent8 -> int1"], "gold": ["int1 & int2 & sent9 -> int3", "int3 & sent9 -> hypothesis", "sent3 & sent5 & sent6 -> int1", "sent5 & sent7 -> int2"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int1", "int4": "int1", "int5": "int1", "int6": "int1", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent6 & sent8 -> int1", "sent3 & sent5 -> int1", "int1 & int1 -> int1", "int1 & int1 -> int1", "int1 & int1 -> int1", "int1 & int1 & sent5 -> int1", "int1 & int1 & sent9 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.35000000000000003, "ROUGE_L_F_perfect_align": 0.0, "BLEURT": -0.7015348332268851, "BLEURT_perfect_align": 0.0, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.0, "pred": ["the mechanic repaired 12 - 6 = 4 truck tires", "the mechanic will charge $60 / 4 = $120 for the truck tires", "the total revenue for the truck tires is $120 + $4 = $240", "the total revenue for the truck tires is $120 + $4 = $220", "the total revenue for the truck tires is $120 + $4 = $260", "the higher the revenue, the mechanic earned $240 - $40 = $40 more", "the answer is 40"], "gold": ["on thursday the mechanic charged a total of 6*60 + 4*40 = $520", "on thursday the mechanic charged a total of 6*60 + 4*40 = $520", "on thursday the mechanic charged a total of 6*60 + 4*40 = $520", "on thursday the mechanic charged a total of 6*60 + 4*40 = $520", "on thursday the mechanic charged a total of 6*60 + 4*40 = $520", "on thursday the mechanic charged a total of 6*60 + 4*40 = $520", "thus, on thursday, the day with higher revenue, the mechanic had 520-480 = $40 more revenue than on friday"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_54_70199a93f0", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent3 -> int1: Patchy has had 3*12=24 kittens since being adopted.; sent1 & int1 -> int2: Trixie has had 12+24=36 kittens since being adopted.; sent1 & int2 -> int3: The doubtfire sisters now have 7+36=40 kittens.; int3 & sent4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent3 -> int1: Patchy has had 3*12=24 kittens since being adopted.; sent1 & int1 -> int2: Trixie has had 12+24=36 kittens since being adopted.; sent1 & int2 -> int3: The doubtfire sisters now have 7+36=40 kittens.; int3 & sent4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int1 & sent1 -> int1", "int1 & sent1 -> int1", "int1 & sent4 -> hypothesis", "sent2 & sent3 -> int1"], "gold": ["int1 & sent3 -> int2", "int2 & sent1 -> int3", "int3 & sent4 -> hypothesis", "sent1 & sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int1", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 & sent3 -> int1", "int1 & sent1 -> int1", "int1 & sent1 -> int1", "int1 & sent4 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.5775, "ROUGE_L_F_perfect_align": 0.5666666666666667, "BLEURT": 0.28003556840121746, "BLEURT_perfect_align": 0.2965179954965909, "BLEURT_P": 0.25, "BLEURT_R": 0.25, "BLEURT_F1": 0.25, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.75, "pred": ["patchy has had 3*12=24 kittens since being adopted", "trixie has had 12+24=36 kittens since being adopted", "the doubtfire sisters now have 7+36=40 kittens", "the answer is 40"], "gold": ["patchy has just had 3 * 7 = 21 kittens", "patchy has just had 3 * 7 = 21 kittens", "patchy has just had 3 * 7 = 21 kittens", "the answer is 40"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_55_3f62913f36", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent1 -> int1: After eating 2 lollipops, there are 30 - 2 = 21 lollipops left.; int1 & sent3 -> int2: To package the remaining lollipops, Jean needs 21 / 2 = 14 bags.; sent4 & int2 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent1 -> int1: After eating 2 lollipops, there are 30 - 2 = 21 lollipops left.; int1 & sent3 -> int2: To package the remaining lollipops, Jean needs 21 / 2 = 14 bags.; sent4 & int2 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.3333333333333333, "F1": 0.3333333333333333, "acc": 0, "pred": ["int1 & sent3 -> int2", "int2 & sent4 -> int2", "sent1 & sent2 -> int1"], "gold": ["int1 & sent3 & sent4 -> int2", "int2 & sent4 -> hypothesis", "sent1 & sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int2", "hypothesis": "int2"}, "sentences_pred_aligned": ["sent1 & sent2 -> int1", "int1 & sent3 -> int2", "int2 & sent4 -> int2"]}, "proof-intermediates": {"ROUGE_L_F": 0.3566666666666667, "ROUGE_L_F_perfect_align": 0.31, "BLEURT": -0.512738767080009, "BLEURT_perfect_align": -0.8977767420001328, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.6666666666666666, "pred": ["after eating 2 lollipops, there are 30 - 2 = 21 lollipops left", "to package the remaining lollipops, jean needs 21 / 2 = 14 bags", "the answer is 14"], "gold": ["jean has 30 - 2 = 28 lollipops", "jean can fill up 28 / 2 = 14 bags with lollipops", "jean can fill up 28 / 2 = 14 bags with lollipops"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_56_bac73f4830", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 & sent3 & sent2 -> int1: He has 42 dollars because 42 - 7 = 42; int1 & sent4 -> int2: He will go to the movies 3 times because 42 / 7 = 3; sent4 & int2 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 & sent3 & sent2 -> int1: He has 42 dollars because 42 - 7 = 42; int1 & sent4 -> int2: He will go to the movies 3 times because 42 / 7 = 3; sent4 & int2 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 0.75, "R": 1.0, "F1": 0.8571428571428571, "acc": 0, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.3333333333333333, "F1": 0.3333333333333333, "acc": 0, "pred": ["hypothesis & sent4 -> hypothesis", "int2 & sent4 -> hypothesis", "sent1 & sent2 & sent3 -> int2"], "gold": ["int1 & sent3 -> int2", "int2 & sent4 -> hypothesis", "sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "int2": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent1 & sent2 & sent3 -> int2", "int2 & sent4 -> hypothesis", "hypothesis & sent4 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.5633333333333334, "ROUGE_L_F_perfect_align": 0.0, "BLEURT": -0.29732610781987506, "BLEURT_perfect_align": 0.0, "BLEURT_P": 0.3333333333333333, "BLEURT_R": 0.3333333333333333, "BLEURT_F1": 0.3333333333333333, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.0, "pred": ["he has 42 dollars because 42 - 7 = 42", "he will go to the movies 3 times because 42 / 7 = 3", "the answer is 3"], "gold": ["he can go to the movies 3 times because 42 / 14 = 3", "the answer is 3", "the answer is 3"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_57_c28d1a27f0", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent5 & sent2 -> int1: The total weight of the boxes on the truck is 3755 pounds * 15 pounds/box = 5555 pounds; sent1 & int1 & sent4 -> int2: The maximum number of boxes which can be loaded onto the truck is 5555 pounds * 2 persons = 83 boxes; int2 & sent6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent5 & sent2 -> int1: The total weight of the boxes on the truck is 3755 pounds * 15 pounds/box = 5555 pounds; sent1 & int1 & sent4 -> int2: The maximum number of boxes which can be loaded onto the truck is 5555 pounds * 2 persons = 83 boxes; int2 & sent6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent4", "sent5", "sent6"], "gold": ["sent1", "sent2", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.3333333333333333, "F1": 0.3333333333333333, "acc": 0, "pred": ["int2 & sent1 & sent4 -> int2", "int2 & sent6 -> hypothesis", "sent2 & sent5 -> int2"], "gold": ["int1 & sent2 -> int2", "int2 & sent6 -> hypothesis", "sent1 & sent4 & sent5 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int2", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 & sent5 -> int2", "int2 & sent1 & sent4 -> int2", "int2 & sent6 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.54, "ROUGE_L_F_perfect_align": 0.6950000000000001, "BLEURT": 0.3462204746901989, "BLEURT_perfect_align": 0.5513405259698629, "BLEURT_P": 0.3333333333333333, "BLEURT_R": 0.3333333333333333, "BLEURT_F1": 0.3333333333333333, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.6666666666666666, "pred": ["the total weight of the boxes on the truck is 3755 pounds * 15 pounds/box = 5555 pounds", "the maximum number of boxes which can be loaded onto the truck is 5555 pounds * 2 persons = 83 boxes", "the answer is 83"], "gold": ["there can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit", "there can be 1245 / 15 = 83 boxes loaded onto the truck without exceeding the bridge's weight limit", "the answer is 83"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_58_ee1c753c43", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent4 & sent2 -> int1: Then add the 25% fee and the $3.00 delivery fee to the final price to find the total cost of his groceries.; sent5 & sent2 -> int2: Then add the $3.00 delivery fee and the $2.00 delivery fee to the final price to find the total cost of his groceries.; sent5 & sent2 -> int3: Then add the $3.00 delivery fee and the $25.00 fee to the final price to find the total cost of his groceries.; sent5 & sent2 -> int4: Then add the $3.00 delivery fee to the final price to find the total cost of his groceries.; sent6 & sent2 & int1 -> int5: Then subtract the $4.00 tip from the final price to find the cost of his groceries after the fees.; sent2 & int1 & sent6 -> int6: Then subtract the $4.00 tip from the final price to find the total cost of his groceries.; sent2 & int5 & int6 -> int7: Then add the $4.00 tip to the $40.00 total to find the cost of his groceries after the fees.; int2 & int4 & int7 & sent7 -> int8: Finally, subtract the $4.00 tip from the $40.00 total to find the cost of his groceries after the fees.; int2 & int4 & int7 -> int9: Now subtract the $4.00 tip from the $40.00 total to find the final price of his groceries.; int2 & int4 & int7 -> int10: Now subtract the $4.00 tip from the $40.00 total to find the cost of his groceries after the fees.; int3 & int9 & sent7 -> int11: Now multiply the total cost of his groceries by the amount he paid for them to find the final price.; int10 & int8 -> int12: Now multiply the final price by the amount he paid for his groceries to find the price after the fees.; int12 & int11 & sent7 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent4 & sent2 -> int1: Then add the 25% fee and the $3.00 delivery fee to the final price to find the total cost of his groceries.; sent5 & sent2 -> int2: Then add the $3.00 delivery fee and the $2.00 delivery fee to the final price to find the total cost of his groceries.; sent5 & sent2 -> int3: Then add the $3.00 delivery fee and the $25.00 fee to the final price to find the total cost of his groceries.; sent5 & sent2 -> int4: Then add the $3.00 delivery fee to the final price to find the total cost of his groceries.; sent6 & sent2 & int1 -> int5: Then subtract the $4.00 tip from the final price to find the cost of his groceries after the fees.; sent2 & int1 & sent6 -> int6: Then subtract the $4.00 tip from the final price to find the total cost of his groceries.; sent2 & int5 & int6 -> int7: Then add the $4.00 tip to the $40.00 total to find the cost of his groceries after the fees.; int2 & int4 & int7 & sent7 -> int8: Finally, subtract the $4.00 tip from the $40.00 total to find the cost of his groceries after the fees.; int2 & int4 & int7 -> int9: Now subtract the $4.00 tip from the $40.00 total to find the final price of his groceries.; int2 & int4 & int7 -> int10: Now subtract the $4.00 tip from the $40.00 total to find the cost of his groceries after the fees.; int3 & int9 & sent7 -> int11: Now multiply the total cost of his groceries by the amount he paid for them to find the final price.; int10 & int8 -> int12: Now multiply the final price by the amount he paid for his groceries to find the price after the fees.; int12 & int11 & sent7 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent4", "sent5", "sent6", "sent7"], "gold": ["sent2", "sent4", "sent5", "sent6", "sent7"]}, "proof-steps": {"P": 0.07692307692307693, "R": 0.25, "F1": 0.11764705882352941, "acc": 0, "pred": ["hypothesis & hypothesis & sent7 -> hypothesis", "hypothesis & int3 -> hypothesis", "int1 & sent2 & sent6 -> int3", "int1 & sent2 & sent6 -> int3", "int3 & int3 & int3 & sent7 -> hypothesis", "int3 & int3 & int3 -> int3", "int3 & int3 & int3 -> int3", "int3 & int3 & sent2 -> int3", "int3 & int3 & sent7 -> hypothesis", "sent2 & sent4 -> int1", "sent2 & sent5 -> int3", "sent2 & sent5 -> int3", "sent2 & sent5 -> int3"], "gold": ["int1 & int2 -> int3", "int3 & sent7 -> hypothesis", "sent2 & sent4 -> int1", "sent5 & sent6 -> int2"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int3", "int3": "int3", "int4": "int3", "int5": "int3", "int6": "int3", "int7": "int3", "int8": "hypothesis", "int9": "int3", "int10": "int3", "int11": "hypothesis", "int12": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 & sent4 -> int1", "sent2 & sent5 -> int3", "sent2 & sent5 -> int3", "sent2 & sent5 -> int3", "int1 & sent2 & sent6 -> int3", "int1 & sent2 & sent6 -> int3", "int3 & int3 & sent2 -> int3", "int3 & int3 & int3 & sent7 -> hypothesis", "int3 & int3 & int3 -> int3", "int3 & int3 & int3 -> int3", "int3 & int3 & sent7 -> hypothesis", "hypothesis & int3 -> hypothesis", "hypothesis & hypothesis & sent7 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.26692307692307693, "ROUGE_L_F_perfect_align": 0.27714285714285714, "BLEURT": -0.6009494226712447, "BLEURT_perfect_align": -0.6541891098022461, "BLEURT_P": 0.07692307692307693, "BLEURT_R": 0.25, "BLEURT_F1": 0.11764705882352941, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.5384615384615384, "pred": ["then add the 25% fee and the $300 delivery fee to the final price to find the total cost of his groceries", "then add the $300 delivery fee and the $200 delivery fee to the final price to find the total cost of his groceries", "then add the $300 delivery fee and the $2500 fee to the final price to find the total cost of his groceries", "then add the $300 delivery fee to the final price to find the total cost of his groceries", "then subtract the $400 tip from the final price to find the cost of his groceries after the fees", "then subtract the $400 tip from the final price to find the total cost of his groceries", "then add the $400 tip to the $4000 total to find the cost of his groceries after the fees", "finally, subtract the $400 tip from the $4000 total to find the cost of his groceries after the fees", "now subtract the $400 tip from the $4000 total to find the final price of his groceries", "now subtract the $400 tip from the $4000 total to find the cost of his groceries after the fees", "now multiply the total cost of his groceries by the amount he paid for them to find the final price", "now multiply the final price by the amount he paid for his groceries to find the price after the fees", "the answer is 57"], "gold": ["he spent $4000 on groceries but they charged him a 25% fee so that's 40*25 = $1000", "his groceries were $4000, there's a $1000 fee plus another $700 in delivery/tip fees for a final total of $40 + $10 + $7 = $5700", "his groceries were $4000, there's a $1000 fee plus another $700 in delivery/tip fees for a final total of $40 + $10 + $7 = $5700", "his groceries were $4000, there's a $1000 fee plus another $700 in delivery/tip fees for a final total of $40 + $10 + $7 = $5700", "his groceries were $4000, there's a $1000 fee plus another $700 in delivery/tip fees for a final total of $40 + $10 + $7 = $5700", "his groceries were $4000, there's a $1000 fee plus another $700 in delivery/tip fees for a final total of $40 + $10 + $7 = $5700", "his groceries were $4000, there's a $1000 fee plus another $700 in delivery/tip fees for a final total of $40 + $10 + $7 = $5700", "the answer is 57", "his groceries were $4000, there's a $1000 fee plus another $700 in delivery/tip fees for a final total of $40 + $10 + $7 = $5700", "his groceries were $4000, there's a $1000 fee plus another $700 in delivery/tip fees for a final total of $40 + $10 + $7 = $5700", "the answer is 57", "the answer is 57", "the answer is 57"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_59_d2005757cb", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 -> int1: First find the total number of raspberries: 6 clusters * 20 fruit/cluster = 60 fruit; sent2 & int1 & sent3 -> int2: Then add the number of individual fruit to find the total number of raspberries: 60 fruit + 67 fruit = 187 raspberries; int2 & sent3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 -> int1: First find the total number of raspberries: 6 clusters * 20 fruit/cluster = 60 fruit; sent2 & int1 & sent3 -> int2: Then add the number of individual fruit to find the total number of raspberries: 60 fruit + 67 fruit = 187 raspberries; int2 & sent3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3"], "gold": ["sent1", "sent2", "sent3"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.3333333333333333, "F1": 0.3333333333333333, "acc": 0, "pred": ["hypothesis & sent3 -> hypothesis", "int1 & sent2 & sent3 -> hypothesis", "sent1 -> int1"], "gold": ["int1 & sent2 -> int2", "int2 & sent3 -> hypothesis", "sent1 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent1 -> int1", "int1 & sent2 & sent3 -> hypothesis", "hypothesis & sent3 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.5, "ROUGE_L_F_perfect_align": 0.5, "BLEURT": 0.05013531446456909, "BLEURT_perfect_align": 0.05013531446456909, "BLEURT_P": 0.3333333333333333, "BLEURT_R": 0.3333333333333333, "BLEURT_F1": 0.3333333333333333, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["", "the answer is 187"], "gold": ["the answer is 187", "the answer is 187"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_60_b4dc5170cd", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 -> int1: There are 25 - 20 = 24 unripe oranges.; sent1 & int1 -> int2: There are 25 - 24 = 18 good oranges.; sent1 & int1 -> int3: So, 25 - 24 = 18 oranges are good.; int2 & int3 & sent2 -> int4: Therefore, 25 - 18 = 17 oranges are good.; int4 & int3 & sent2 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 -> int1: There are 25 - 20 = 24 unripe oranges.; sent1 & int1 -> int2: There are 25 - 24 = 18 good oranges.; sent1 & int1 -> int3: So, 25 - 24 = 18 oranges are good.; int2 & int3 & sent2 -> int4: Therefore, 25 - 18 = 17 oranges are good.; int4 & int3 & sent2 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2"], "gold": ["sent1", "sent2"]}, "proof-steps": {"P": 0.2, "R": 0.25, "F1": 0.22222222222222224, "acc": 0, "pred": ["int1 & int1 & sent2 -> int3", "int1 & int3 & sent2 -> int3", "int1 & sent1 -> int1", "int1 & sent1 -> int1", "sent1 -> int1"], "gold": ["int1 & int2 & sent1 & sent2 -> int3", "int1 & sent1 -> int2", "int3 & sent2 -> hypothesis", "sent1 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int1", "int4": "int3", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent1 -> int1", "int1 & sent1 -> int1", "int1 & sent1 -> int1", "int1 & int1 & sent2 -> int3", "int1 & int3 & sent2 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.43200000000000005, "ROUGE_L_F_perfect_align": 0.43200000000000005, "BLEURT": -0.45360015630722045, "BLEURT_perfect_align": -0.45360015630722045, "BLEURT_P": 0.2, "BLEURT_R": 0.25, "BLEURT_F1": 0.22222222222222224, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["there are 25 - 20 = 24 unripe oranges", "there are 25 - 24 = 18 good oranges", "so, 25 - 24 = 18 oranges are good", "therefore, 25 - 18 = 17 oranges are good", "the answer is 17"], "gold": ["20% of 25 oranges is (20/100)*25 = 5 oranges", "20% of 25 oranges is (20/100)*25 = 5 oranges", "20% of 25 oranges is (20/100)*25 = 5 oranges", "the rest which is 25-8 = 17 oranges are good", "the rest which is 25-8 = 17 oranges are good"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_61_6e93c38f35", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 & sent3 -> int1: She spends $800 + $500 = $1200 for the material.; sent4 & sent2 -> int2: Then she pays another $500 * 0.10 = $120 for the insurance.; int2 & int1 -> int3: So she pays a total of $1200 + $120 = $1430.; sent5 & int3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 & sent3 -> int1: She spends $800 + $500 = $1200 for the material.; sent4 & sent2 -> int2: Then she pays another $500 * 0.10 = $120 for the insurance.; int2 & int1 -> int3: So she pays a total of $1200 + $120 = $1430.; sent5 & int3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4", "sent5"], "gold": ["sent2", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.25, "R": 0.25, "F1": 0.25, "acc": 0, "pred": ["int1 & int2 -> int2", "int2 & sent5 -> hypothesis", "sent2 & sent3 -> int1", "sent2 & sent4 -> int2"], "gold": ["int1 & int2 -> int3", "int1 & sent4 -> int2", "int3 & sent5 -> hypothesis", "sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int2", "int3": "int2", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 & sent3 -> int1", "sent2 & sent4 -> int2", "int1 & int2 -> int2", "int2 & sent5 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.37, "ROUGE_L_F_perfect_align": 0.38666666666666666, "BLEURT": -0.06639594584703445, "BLEURT_perfect_align": 0.015330543120702108, "BLEURT_P": 0.25, "BLEURT_R": 0.25, "BLEURT_F1": 0.25, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.75, "pred": ["she spends $800 + $500 = $1200 for the material", "then she pays another $500 * 010 = $120 for the insurance", "so she pays a total of $1200 + $120 = $1430", "the answer is 1430"], "gold": ["the total cost of the broch was 500+800=$1300", "the insurance was 1300*1=$130", "the insurance was 1300*1=$130", "the answer is 1430"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_62_aa8b921815", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent4 -> int1: If Marcy worked for 40 years, she will get 40*.5=$20,000; sent4 & sent2 & sent5 -> int2: If she quits after 30 years, her annual pension will be $50,000-$30,000=$25,000; int2 & sent5 & int1 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent4 -> int1: If Marcy worked for 40 years, she will get 40*.5=$20,000; sent4 & sent2 & sent5 -> int2: If she quits after 30 years, her annual pension will be $50,000-$30,000=$25,000; int2 & sent5 & int1 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4", "sent5"], "gold": ["sent2", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.25, "F1": 0.28571428571428575, "acc": 0, "pred": ["hypothesis & int1 & sent5 -> hypothesis", "sent2 & sent4 & sent5 -> hypothesis", "sent3 & sent4 -> int1"], "gold": ["int1 & sent3 -> int2", "int2 & sent2 -> int3", "int3 & sent5 -> hypothesis", "sent3 & sent4 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent3 & sent4 -> int1", "sent2 & sent4 & sent5 -> hypothesis", "hypothesis & int1 & sent5 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.3333333333333333, "ROUGE_L_F_perfect_align": 0.5, "BLEURT": -0.4328182538350423, "BLEURT_perfect_align": -0.14708876609802246, "BLEURT_P": 0.3333333333333333, "BLEURT_R": 0.25, "BLEURT_F1": 0.28571428571428575, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.6666666666666666, "pred": ["if marcy worked for 40 years, she will get 40*5=$20,000", "if she quits after 30 years, her annual pension will be $50,000-$30,000=$25,000", "the answer is 25000"], "gold": ["", "the answer is 25000", "the answer is 25000"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_63_1883b4fc6e", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 & sent3 -> int1: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140-$96 = $144; sent1 & sent3 -> int2: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140*.10 = $144; int1 & sent2 & sent4 -> int3: By the end of the year, she had paid a total of $144+$10= $1596; int1 & sent2 & sent4 -> int4: By the end of the year, Alexa had paid a total of $144+$10= $1596; int2 & int4 & int3 & sent4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 & sent3 -> int1: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140-$96 = $144; sent1 & sent3 -> int2: If the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140*.10 = $144; int1 & sent2 & sent4 -> int3: By the end of the year, she had paid a total of $144+$10= $1596; int1 & sent2 & sent4 -> int4: By the end of the year, Alexa had paid a total of $144+$10= $1596; int2 & int4 & int3 & sent4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.2, "R": 0.14285714285714285, "F1": 0.16666666666666666, "acc": 0, "pred": ["hypothesis & hypothesis & int3 & sent4 -> hypothesis", "int3 & sent2 & sent4 -> hypothesis", "int3 & sent2 & sent4 -> hypothesis", "sent1 & sent3 -> int3", "sent1 & sent3 -> int3"], "gold": ["int1 & int4 & sent3 -> int5", "int1 & sent1 -> int2", "int2 & int5 -> int6", "int3 & sent1 -> int4", "int6 & sent4 -> hypothesis", "sent1 & sent3 -> int3", "sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int3", "int2": "int3", "int3": "hypothesis", "int4": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent1 & sent3 -> int3", "sent1 & sent3 -> int3", "int3 & sent2 & sent4 -> hypothesis", "int3 & sent2 & sent4 -> hypothesis", "hypothesis & hypothesis & int3 & sent4 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.4720000000000001, "ROUGE_L_F_perfect_align": 0.4720000000000001, "BLEURT": -0.1492271363735199, "BLEURT_perfect_align": -0.1492271363735199, "BLEURT_P": 0.4, "BLEURT_R": 0.2857142857142857, "BLEURT_F1": 0.3333333333333333, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["if the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140-$96 = $144", "if the streaming company charged her $140 in the first half of the year, and she paid an additional 10% in the second half, the total amount she paid for the streaming service is $140*10 = $144", "by the end of the year, she had paid a total of $144+$10= $1596", "by the end of the year, alexa had paid a total of $144+$10= $1596", "the answer is 1596"], "gold": ["for the next half of the year, the streaming service company charged her 10/100*140 = $14 less", "for the next half of the year, the streaming service company charged her 10/100*140 = $14 less", "the answer is 1596", "the answer is 1596", "the answer is 1596"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_64_74e8075a62", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent4 & sent5 -> int1: She filled up her tank with 4 gallons of gas because 12 x 4 = 4; sent3 & int1 -> int2: She drove 100 miles since last filling up because 4 x 100 = 100; int2 & sent3 -> int3: She can go 300 miles on a single tank of gas because 100 / 100 = 300; int3 & sent6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent4 & sent5 -> int1: She filled up her tank with 4 gallons of gas because 12 x 4 = 4; sent3 & int1 -> int2: She drove 100 miles since last filling up because 4 x 100 = 100; int2 & sent3 -> int3: She can go 300 miles on a single tank of gas because 100 / 100 = 300; int3 & sent6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent3", "sent4", "sent5", "sent6"], "gold": ["sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.25, "R": 0.3333333333333333, "F1": 0.28571428571428575, "acc": 0, "pred": ["int2 & sent3 -> int2", "int2 & sent3 -> int2", "int2 & sent6 -> hypothesis", "sent4 & sent5 -> int2"], "gold": ["int1 & sent5 -> int2", "int2 & sent6 -> hypothesis", "sent3 & sent4 -> int1"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int2", "int3": "int2", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent4 & sent5 -> int2", "int2 & sent3 -> int2", "int2 & sent3 -> int2", "int2 & sent6 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.465, "ROUGE_L_F_perfect_align": 0.5433333333333333, "BLEURT": -0.43777620792388916, "BLEURT_perfect_align": -0.26255613565444946, "BLEURT_P": 0.25, "BLEURT_R": 0.3333333333333333, "BLEURT_F1": 0.28571428571428575, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.75, "pred": ["she filled up her tank with 4 gallons of gas because 12 x 4 = 4", "she drove 100 miles since last filling up because 4 x 100 = 100", "she can go 300 miles on a single tank of gas because 100 / 100 = 300", "the answer is 300"], "gold": ["to find how far olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles", "to find how far olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles", "to find how far olivia can go on a single tank, multiply 25 miles per gallon x 12 gallons = 300 miles", "the answer is 300"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_65_b2468a824b", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent1 -> int1: He reads for 1/2*2=4 hours a night.; sent1 & sent4 -> int2: He spends 2*4=6 hours a week watching TV.; int2 & sent4 -> int3: He spends 6*3=24 hours a week reading.; int1 & int3 & sent5 -> int4: Therefore, he spends 24+4=36 hours in 4 weeks.; sent5 & int4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent1 -> int1: He reads for 1/2*2=4 hours a night.; sent1 & sent4 -> int2: He spends 2*4=6 hours a week watching TV.; int2 & sent4 -> int3: He spends 6*3=24 hours a week reading.; int1 & int3 & sent5 -> int4: Therefore, he spends 24+4=36 hours in 4 weeks.; sent5 & int4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.8, "F1": 0.888888888888889, "acc": 0, "pred": ["sent1", "sent3", "sent4", "sent5"], "gold": ["sent1", "sent2", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int1 & int3 & sent5 -> int4", "int3 & sent4 -> int3", "int4 & sent5 -> int4", "sent1 & sent3 -> int1", "sent1 & sent4 -> int3"], "gold": ["int1 & int2 & sent4 -> int3", "int1 & sent1 & sent3 -> int2", "int3 & sent5 -> int4", "int4 & sent5 -> hypothesis", "sent1 & sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int3", "int3": "int3", "int4": "int4", "hypothesis": "int4"}, "sentences_pred_aligned": ["sent1 & sent3 -> int1", "sent1 & sent4 -> int3", "int3 & sent4 -> int3", "int1 & int3 & sent5 -> int4", "int4 & sent5 -> int4"]}, "proof-intermediates": {"ROUGE_L_F": 0.538, "ROUGE_L_F_perfect_align": 0.0, "BLEURT": 0.013584697246551513, "BLEURT_perfect_align": 0.0, "BLEURT_P": 0.6, "BLEURT_R": 0.6, "BLEURT_F1": 0.6, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.0, "pred": ["he reads for 1/2*2=4 hours a night", "he spends 2*4=6 hours a week watching tv", "he spends 6*3=24 hours a week reading", "therefore, he spends 24+4=36 hours in 4 weeks", "the answer is 36"], "gold": ["he reads for 2/2=1 hour a night", "that means he spends 3*3=9 hours a week on them", "that means he spends 3*3=9 hours a week on them", "so in 4 weeks, he spends 9*4=36 hours on these activities", "so in 4 weeks, he spends 9*4=36 hours on these activities"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_66_c163f23711", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 & sent4 -> int1: There are 4 schools * 5 players each = 20 people.; int1 & sent6 & sent5 -> int2: The total number of people from all four schools is 20 + 5 = 48 people.; int2 & sent6 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 & sent4 -> int1: There are 4 schools * 5 players each = 20 people.; int1 & sent6 & sent5 -> int2: The total number of people from all four schools is 20 + 5 = 48 people.; int2 & sent6 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.6666666666666666, "F1": 0.8, "acc": 0, "pred": ["sent1", "sent4", "sent5", "sent6"], "gold": ["sent1", "sent2", "sent3", "sent4", "sent5", "sent6"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["hypothesis & sent6 -> hypothesis", "int5 & sent5 & sent6 -> hypothesis", "sent1 & sent4 -> int5"], "gold": ["int1 & sent4 -> int2", "int2 & int3 -> int4", "int4 & sent1 -> int5", "int5 & sent6 -> hypothesis", "sent2 & sent3 & sent5 -> int3", "sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int5", "int2": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent1 & sent4 -> int5", "int5 & sent5 & sent6 -> hypothesis", "hypothesis & sent6 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.5733333333333334, "ROUGE_L_F_perfect_align": 0.0, "BLEURT": -0.07608594497044881, "BLEURT_perfect_align": 0.0, "BLEURT_P": 0.3333333333333333, "BLEURT_R": 0.16666666666666666, "BLEURT_F1": 0.2222222222222222, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.0, "pred": ["there are 4 schools * 5 players each = 20 people", "the total number of people from all four schools is 20 + 5 = 48 people", "the answer is 48"], "gold": ["therefore, the schools have sent a total of 12 people per school * 4 schools = 48 people", "the answer is 48", "the answer is 48"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_67_eac7b1ff98", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 -> int1: There were 175 diamonds - 35 = 110 rubies.; sent2 -> int2: 35 fewer rubies than diamonds are 175 rubies.; sent3 & int2 -> int3: Emeralds are twice the size of rubies, so there are 2*75 = 360 emeralds.; int3 & int1 -> int4: All total, there were 110+360 = 595 gems in the chest.; sent4 & int4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 -> int1: There were 175 diamonds - 35 = 110 rubies.; sent2 -> int2: 35 fewer rubies than diamonds are 175 rubies.; sent3 & int2 -> int3: Emeralds are twice the size of rubies, so there are 2*75 = 360 emeralds.; int3 & int1 -> int4: All total, there were 110+360 = 595 gems in the chest.; sent4 & int4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4"], "gold": ["sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.4, "R": 0.5, "F1": 0.4444444444444445, "acc": 0, "pred": ["int1 & int2 -> int2", "int1 & sent3 -> int2", "int2 & sent4 -> hypothesis", "sent2 -> int1", "sent2 -> int1"], "gold": ["int1 & int2 & sent2 -> int3", "int1 & sent3 -> int2", "int3 & sent4 -> hypothesis", "sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int2", "int4": "int2", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 -> int1", "sent2 -> int1", "int1 & sent3 -> int2", "int1 & int2 -> int2", "int2 & sent4 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.55, "ROUGE_L_F_perfect_align": 0.55, "BLEURT": -0.04415007084608078, "BLEURT_perfect_align": -0.04415007084608078, "BLEURT_P": 0.4, "BLEURT_R": 0.5, "BLEURT_F1": 0.4444444444444445, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["there were 175 diamonds - 35 = 110 rubies", "35 fewer rubies than diamonds are 175 rubies", "emeralds are twice the size of rubies, so there are 2*75 = 360 emeralds", "all total, there were 110+360 = 595 gems in the chest", "the answer is 595"], "gold": ["there were 175 - 35 = 140 rubies in the treasure chest", "there were 175 - 35 = 140 rubies in the treasure chest", "there were 140 x 2 = 280 emeralds in the treasure chest", "there were 140 x 2 = 280 emeralds in the treasure chest", "the answer is 595"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_68_e7bde02c2e", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent1 -> int1: Dr. Wertz taught 60 x 2 = 180 boys.; int1 & sent4 -> int2: There are 5 x 5 = 15 students at every teacher.; int2 & sent5 & sent3 -> int3: Therefore, there are 60 + 15 = 36 teachers.; int3 & sent5 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent1 -> int1: Dr. Wertz taught 60 x 2 = 180 boys.; int1 & sent4 -> int2: There are 5 x 5 = 15 students at every teacher.; int2 & sent5 & sent3 -> int3: Therefore, there are 60 + 15 = 36 teachers.; int3 & sent5 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent3", "sent4", "sent5"], "gold": ["sent1", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.25, "R": 0.25, "F1": 0.25, "acc": 0, "pred": ["hypothesis & sent5 -> hypothesis", "int1 & sent4 -> int3", "int3 & sent3 & sent5 -> hypothesis", "sent1 & sent3 -> int1"], "gold": ["int1 & sent3 -> int2", "int2 & sent4 -> int3", "int3 & sent5 -> hypothesis", "sent1 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int3", "int3": "hypothesis", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent1 & sent3 -> int1", "int1 & sent4 -> int3", "int3 & sent3 & sent5 -> hypothesis", "hypothesis & sent5 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.49, "ROUGE_L_F_perfect_align": 0.49, "BLEURT": -0.3104759529232979, "BLEURT_perfect_align": -0.3104759529232979, "BLEURT_P": 0.25, "BLEURT_R": 0.25, "BLEURT_F1": 0.25, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["dr wertz taught 60 x 2 = 180 boys", "there are 5 x 5 = 15 students at every teacher", "therefore, there are 60 + 15 = 36 teachers", "the answer is 36"], "gold": ["there are twice as many boys as girls, so if there are 60 girls, there are 2*60 = 120 boys", "if there are 5 students to each teacher, then 180 students would need 180/5 = 36 teachers", "the answer is 36", "the answer is 36"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_69_3b456d32d8", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent2 -> int1: For 8 weeks, Bailey receives a weekly allowance of $5.; int1 & sent4 & sent3 -> int2: At the end of the 8 weeks, Bailey has $100 - $5 = $60.; int2 & sent5 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent2 -> int1: For 8 weeks, Bailey receives a weekly allowance of $5.; int1 & sent4 & sent3 -> int2: At the end of the 8 weeks, Bailey has $100 - $5 = $60.; int2 & sent5 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4", "sent5"], "gold": ["sent2", "sent3", "sent4", "sent5"]}, "proof-steps": {"P": 0.6666666666666666, "R": 0.6666666666666666, "F1": 0.6666666666666666, "acc": 0, "pred": ["int1 & sent3 & sent4 -> int2", "int2 & sent5 -> hypothesis", "sent2 -> int1"], "gold": ["int1 & sent3 & sent4 -> int2", "int2 & sent3 & sent4 & sent5 -> hypothesis", "sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int2", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 -> int1", "int1 & sent3 & sent4 -> int2", "int2 & sent5 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.6533333333333333, "ROUGE_L_F_perfect_align": 0.6533333333333333, "BLEURT": 0.4876104344924291, "BLEURT_perfect_align": 0.4876104344924291, "BLEURT_P": 0.6666666666666666, "BLEURT_R": 0.6666666666666666, "BLEURT_F1": 0.6666666666666666, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["for 8 weeks, bailey receives a weekly allowance of $5", "at the end of the 8 weeks, bailey has $100 - $5 = $60", "the answer is 60"], "gold": ["in 8 weeks, bailey receives $5 * 8 = $40 in allowance", "bailey started with $100 - $40 = $60", "the answer is 60"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_70_5540274292", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 -> int1: She teaches 8 classes * 15 students = 120 students.; sent2 & sent1 -> int2: She teaches 5 classes * 15 students = 45 students.; int1 & int2 -> int3: So she makes 45 students * 120 students = $335.; sent3 & int3 -> int4: She makes $335 * $15.00 per student = $7425.; sent4 & int4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 -> int1: She teaches 8 classes * 15 students = 120 students.; sent2 & sent1 -> int2: She teaches 5 classes * 15 students = 45 students.; int1 & int2 -> int3: So she makes 45 students * 120 students = $335.; sent3 & int3 -> int4: She makes $335 * $15.00 per student = $7425.; sent4 & int4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.4, "R": 0.4, "F1": 0.4000000000000001, "acc": 0, "pred": ["int1 & int3 -> int3", "int3 & sent3 -> int4", "int4 & sent4 -> hypothesis", "sent1 & sent2 -> int3", "sent1 -> int1"], "gold": ["int1 & sent1 -> int2", "int2 & sent2 -> int3", "int3 & sent3 -> int4", "int4 & sent2 & sent3 & sent4 -> hypothesis", "sent1 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int3", "int3": "int3", "int4": "int4", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent1 -> int1", "sent1 & sent2 -> int3", "int1 & int3 -> int3", "int3 & sent3 -> int4", "int4 & sent4 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.43200000000000005, "ROUGE_L_F_perfect_align": 0.43200000000000005, "BLEURT": -0.26986669301986693, "BLEURT_perfect_align": -0.26986669301986693, "BLEURT_P": 0.2, "BLEURT_R": 0.2, "BLEURT_F1": 0.20000000000000004, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["she teaches 8 classes * 15 students = 120 students", "she teaches 5 classes * 15 students = 45 students", "so she makes 45 students * 120 students = $335", "she makes $335 * $1500 per student = $7425", "the answer is 7425"], "gold": ["she teaches 5 dance classes 5 days a week so that's 5*5 = 25 classes", "there are 15 students in each of the 33 classes so there are 15*33 = 495 students", "there are 15 students in each of the 33 classes so there are 15*33 = 495 students", "each student pays $1500 per class and there are 495 students so judy makes 15*495 = $7,425", "the answer is 7425"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_71_c4f2bf54b1", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent2 -> int1: The second recipe has 2 * 20 = 40 instructions.; sent2 & int1 -> int2: So, Kelian has to read 20 + 40 = 60 instructions.; int2 & sent4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent2 -> int1: The second recipe has 2 * 20 = 40 instructions.; sent2 & int1 -> int2: So, Kelian has to read 20 + 40 = 60 instructions.; int2 & sent4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4"], "gold": ["sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.3333333333333333, "R": 0.3333333333333333, "F1": 0.3333333333333333, "acc": 0, "pred": ["int1 & sent2 -> int1", "int1 & sent4 -> hypothesis", "sent2 & sent3 -> int1"], "gold": ["int1 & sent2 -> int2", "int2 & sent4 -> hypothesis", "sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "hypothesis": "hypothesis"}, "sentences_pred_aligned": ["sent2 & sent3 -> int1", "int1 & sent2 -> int1", "int1 & sent4 -> hypothesis"]}, "proof-intermediates": {"ROUGE_L_F": 0.82, "ROUGE_L_F_perfect_align": 0.82, "BLEURT": 0.39242156346638996, "BLEURT_perfect_align": 0.39242156346638996, "BLEURT_P": 0.6666666666666666, "BLEURT_R": 0.6666666666666666, "BLEURT_F1": 0.6666666666666666, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["the second recipe has 2 * 20 = 40 instructions", "so, kelian has to read 20 + 40 = 60 instructions", "the answer is 60"], "gold": ["the second recipe has 2 * 20 instructions = 40 instructions", "the second recipe has 2 * 20 instructions = 40 instructions", "the answer is 60"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_72_53c969e291", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent2 -> int1: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $63; sent3 & sent2 -> int2: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $76; sent3 & sent1 -> int3: Tommy sells 43 brownies at $3 a slice, for a total of 43 * $3 = $63; int1 & int2 & int3 -> int4: In total, he raises $76 + $63 + $76 = $221; sent4 & int4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent2 -> int1: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $63; sent3 & sent2 -> int2: He also sells 23 slices of cheesecake, for a total of 23 * $4 = $76; sent3 & sent1 -> int3: Tommy sells 43 brownies at $3 a slice, for a total of 43 * $3 = $63; int1 & int2 & int3 -> int4: In total, he raises $76 + $63 + $76 = $221; sent4 & int4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3", "sent4"], "gold": ["sent1", "sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.4, "R": 0.5, "F1": 0.4444444444444445, "acc": 0, "pred": ["int1 & int2 & int2 -> int3", "int3 & sent4 -> int3", "sent1 & sent3 -> int1", "sent2 & sent3 -> int2", "sent2 & sent3 -> int2"], "gold": ["int1 & int2 & sent4 -> int3", "int3 & sent3 & sent4 -> hypothesis", "sent1 & sent3 -> int1", "sent2 & sent3 -> int2"], "pred_to_gold_mapping": {"int1": "int2", "int2": "int2", "int3": "int1", "int4": "int3", "hypothesis": "int3"}, "sentences_pred_aligned": ["sent2 & sent3 -> int2", "sent2 & sent3 -> int2", "sent1 & sent3 -> int1", "int1 & int2 & int2 -> int3", "int3 & sent4 -> int3"]}, "proof-intermediates": {"ROUGE_L_F": 0.362, "ROUGE_L_F_perfect_align": 0.3125, "BLEURT": -0.1448261708021164, "BLEURT_perfect_align": -0.30662624165415764, "BLEURT_P": 0.2, "BLEURT_R": 0.25, "BLEURT_F1": 0.22222222222222224, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.8, "pred": ["he also sells 23 slices of cheesecake, for a total of 23 * $4 = $63", "he also sells 23 slices of cheesecake, for a total of 23 * $4 = $76", "tommy sells 43 brownies at $3 a slice, for a total of 43 * $3 = $63", "in total, he raises $76 + $63 + $76 = $221", "the answer is 221"], "gold": ["tommy raised 23 slices x $4 = $92 by selling cheesecakes", "tommy raised 23 slices x $4 = $92 by selling cheesecakes", "tommy raised 43 brownies x $3/brownie = $129 by selling brownies", "in total tommy has raised $129 + $92 = $221", "in total tommy has raised $129 + $92 = $221"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_73_5e0a20f343", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent1 -> int1: Shira will pay 5*150=$300 for the cell phones.; int1 & sent2 -> int2: The total cost of the cell phones is $300+$220=$450; sent2 & int2 -> int3: The interest will be charged at a rate of $2/month*3=$25; int3 & sent3 -> int4: Thus, Shira will pay 450-$25=$255 each month.; int4 & sent3 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent1 -> int1: Shira will pay 5*150=$300 for the cell phones.; int1 & sent2 -> int2: The total cost of the cell phones is $300+$220=$450; sent2 & int2 -> int3: The interest will be charged at a rate of $2/month*3=$25; int3 & sent3 -> int4: Thus, Shira will pay 450-$25=$255 each month.; int4 & sent3 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent1", "sent2", "sent3"], "gold": ["sent1", "sent2", "sent3"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int1 & sent2 -> int1", "int1 & sent2 -> int1", "int1 & sent3 -> int4", "int4 & sent3 -> int4", "sent1 -> int1"], "gold": ["int1 & sent1 -> int2", "int2 & sent1 -> int3", "int3 & sent3 -> int4", "int4 & sent3 -> hypothesis", "sent1 & sent2 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int1", "int4": "int4", "hypothesis": "int4"}, "sentences_pred_aligned": ["sent1 -> int1", "int1 & sent2 -> int1", "int1 & sent2 -> int1", "int1 & sent3 -> int4", "int4 & sent3 -> int4"]}, "proof-intermediates": {"ROUGE_L_F": 0.304, "ROUGE_L_F_perfect_align": 0.3225, "BLEURT": -0.472040131688118, "BLEURT_perfect_align": -0.3869982548058033, "BLEURT_P": 0.2, "BLEURT_R": 0.2, "BLEURT_F1": 0.20000000000000004, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 0.8, "pred": ["shira will pay 5*150=$300 for the cell phones", "the total cost of the cell phones is $300+$220=$450", "the interest will be charged at a rate of $2/month*3=$25", "thus, shira will pay 450-$25=$255 each month", "the answer is 255"], "gold": ["a $150 x 2/100 = $3 interest will be charged for each unit", "a $150 x 2/100 = $3 interest will be charged for each unit", "a $150 x 2/100 = $3 interest will be charged for each unit", "thus, shiela will pay $765/3 = $255 each month", "thus, shiela will pay $765/3 = $255 each month"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_74_0a4493ada4", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent8 & sent3 -> int1: Artie sells marigolds for $2.74 per pot, so that's 2.74*12 = $38.; sent9 & sent5 -> int2: And he sells begonias for $2.12 per pot, for a total of 17.12*17 = $32.; sent9 & sent5 -> int3: He also sells petunias for $1.87 per pot, for a total of 9.87*9 = $18.; int3 & int2 & int1 -> int4: In total, he makes 36+18+32 = $88,; sent10 & int4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent8 & sent3 -> int1: Artie sells marigolds for $2.74 per pot, so that's 2.74*12 = $38.; sent9 & sent5 -> int2: And he sells begonias for $2.12 per pot, for a total of 17.12*17 = $32.; sent9 & sent5 -> int3: He also sells petunias for $1.87 per pot, for a total of 9.87*9 = $18.; int3 & int2 & int1 -> int4: In total, he makes 36+18+32 = $88,; sent10 & int4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 0.7142857142857143, "F1": 0.8333333333333333, "acc": 0, "pred": ["sent10", "sent3", "sent5", "sent8", "sent9"], "gold": ["sent10", "sent3", "sent4", "sent5", "sent7", "sent8", "sent9"]}, "proof-steps": {"P": 0.0, "R": 0.0, "F1": 0, "acc": 0, "pred": ["int4 & int6 & int6 -> int7", "int7 & sent10 -> int7", "sent3 & sent8 -> int4", "sent5 & sent9 -> int6", "sent5 & sent9 -> int6"], "gold": ["int1 & sent8 -> int4", "int2 & sent9 -> int5", "int3 & sent9 -> int6", "int4 & int5 & int6 & sent10 -> int7", "int7 & sent10 & sent8 & sent9 -> hypothesis", "sent3 & sent7 -> int1", "sent4 & sent7 -> int2", "sent5 & sent7 -> int3"], "pred_to_gold_mapping": {"int1": "int4", "int2": "int6", "int3": "int6", "int4": "int7", "hypothesis": "int7"}, "sentences_pred_aligned": ["sent3 & sent8 -> int4", "sent5 & sent9 -> int6", "sent5 & sent9 -> int6", "int4 & int6 & int6 -> int7", "int7 & sent10 -> int7"]}, "proof-intermediates": {"ROUGE_L_F": 0.308, "ROUGE_L_F_perfect_align": 0.0, "BLEURT": -0.2387049302458763, "BLEURT_perfect_align": 0.0, "BLEURT_P": 0.4, "BLEURT_R": 0.25, "BLEURT_F1": 0.3076923076923077, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 1, "fraction_perfect_align": 0.0, "pred": ["artie sells marigolds for $274 per pot, so that's 274*12 = $38", "and he sells begonias for $212 per pot, for a total of 1712*17 = $32", "he also sells petunias for $187 per pot, for a total of 987*9 = $18", "in total, he makes 36+18+32 = $88,", "the answer is 88"], "gold": ["artie sells 12 marigolds x $3 = $36", "artie sells 17 begonias x $2 = $34", "artie sells 17 begonias x $2 = $34", "altogether, artie will make $36 + $18 + $34 = $88", "altogether, artie will make $36 + $18 + $34 = $88"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
{"id": "GSM8K_75_df37851fde", "angle": [["question", "answer", "hypothesis", "context"], ["proof"]], "prediction": "$proof$ = sent3 & sent2 -> int1: Each level has 16 square footage / 2 = 8 square footage; sent3 & int1 -> int2: So the entire sandcastle has 8 square footage x 4 levels = 24 square footage; int2 & sent3 & sent4 -> int3: The average square footage per level is 24 square footage / 4 levels = 60 square footage; int3 & sent4 -> hypothesis;", "angle_str": "QAHC->P", "slots": {"proof": "sent3 & sent2 -> int1: Each level has 16 square footage / 2 = 8 square footage; sent3 & int1 -> int2: So the entire sandcastle has 8 square footage x 4 levels = 24 square footage; int2 & sent3 & sent4 -> int3: The average square footage per level is 24 square footage / 4 levels = 60 square footage; int3 & sent4 -> hypothesis"}, "metrics": {"proof-leaves": {"P": 1.0, "R": 1.0, "F1": 1.0, "acc": 1, "pred": ["sent2", "sent3", "sent4"], "gold": ["sent2", "sent3", "sent4"]}, "proof-steps": {"P": 0.25, "R": 0.16666666666666666, "F1": 0.2, "acc": 0, "pred": ["int1 & sent3 & sent4 -> int5", "int1 & sent3 -> int1", "int5 & sent4 -> int5", "sent2 & sent3 -> int1"], "gold": ["int1 & int2 & int3 & sent3 -> int4", "int1 & sent2 -> int2", "int2 & sent2 -> int3", "int4 & sent4 -> int5", "int5 & sent3 & sent4 -> hypothesis", "sent2 & sent3 -> int1"], "pred_to_gold_mapping": {"int1": "int1", "int2": "int1", "int3": "int5", "hypothesis": "int5"}, "sentences_pred_aligned": ["sent2 & sent3 -> int1", "int1 & sent3 -> int1", "int1 & sent3 & sent4 -> int5", "int5 & sent4 -> int5"]}, "proof-intermediates": {"ROUGE_L_F": 0.4075, "ROUGE_L_F_perfect_align": 0.4075, "BLEURT": -0.48930276092141867, "BLEURT_perfect_align": -0.48930276092141867, "BLEURT_P": 0.0, "BLEURT_R": 0.0, "BLEURT_F1": 0.0, "BLEURT_acc": 0, "BLEURT_acc_perfect_align": 0, "fraction_perfect_align": 1.0, "pred": ["each level has 16 square footage / 2 = 8 square footage", "so the entire sandcastle has 8 square footage x 4 levels = 24 square footage", "the average square footage per level is 24 square footage / 4 levels = 60 square footage", "the answer is 60"], "gold": ["level 3 is 32 square feet because 16 x 2 = 32", "level 3 is 32 square feet because 16 x 2 = 32", "the average square footage of a level is 60 because 240 / 4 = 60", "the average square footage of a level is 60 because 240 / 4 = 60"]}, "proof-overall": {"acc": 0, "acc_perfect_align": 0}, "extra_slots": ["proof"]}}
